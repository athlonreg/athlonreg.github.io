<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canvas&#39;s Blog</title>
  
  <subtitle>套陆的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.cloudops.ml/"/>
  <updated>2019-08-11T14:04:48.905Z</updated>
  <id>https://blog.cloudops.ml/</id>
  
  <author>
    <name>Canvas/套陆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Openldap 数据迁移</title>
    <link href="https://blog.cloudops.ml/Openldap-backup-and-recovery-data.html"/>
    <id>https://blog.cloudops.ml/Openldap-backup-and-recovery-data.html</id>
    <published>2019-08-11T14:03:49.000Z</published>
    <updated>2019-08-11T14:04:48.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slapcat &gt; ldapbak.ldif            // 导出</span></span><br><span class="line"><span class="comment"># systemctl stop slapd              // 停止服务</span></span><br><span class="line"><span class="comment"># rm -rf /var/lib/ldap/*            // 删除原有数据</span></span><br><span class="line"><span class="comment"># slapadd -l ldapbak.ldif           // 导入数据</span></span><br><span class="line"><span class="comment"># chown -R ldap:ldap /var/lib/ldap  // 修复权限</span></span><br><span class="line"><span class="comment"># systemctl start slapd             // 启动服务</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Openldap 数据迁移
    
    </summary>
    
      <category term="openldap" scheme="https://blog.cloudops.ml/categories/openldap/"/>
    
      <category term="数据迁移" scheme="https://blog.cloudops.ml/categories/openldap/%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/"/>
    
    
      <category term="openldap" scheme="https://blog.cloudops.ml/tags/openldap/"/>
    
      <category term="数据迁移" scheme="https://blog.cloudops.ml/tags/%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 Docker 镜像使用 systemd 服务</title>
    <link href="https://blog.cloudops.ml/Centos7-docker-image-with-systemd.html"/>
    <id>https://blog.cloudops.ml/Centos7-docker-image-with-systemd.html</id>
    <published>2019-08-11T14:00:16.000Z</published>
    <updated>2019-08-11T14:01:56.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM centos:7</span><br><span class="line">ENV container docker</span><br><span class="line">RUN (<span class="built_in">cd</span> /lib/systemd/system/sysinit.target.wants/; <span class="keyword">for</span> i <span class="keyword">in</span> *; <span class="keyword">do</span> [ <span class="variable">$i</span> == \</span><br><span class="line">systemd-tmpfiles-setup.service ] || rm -f <span class="variable">$i</span>; <span class="keyword">done</span>); \</span><br><span class="line">rm -f /lib/systemd/system/multi-user.target.wants/*;\</span><br><span class="line">rm -f /etc/systemd/system/*.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/<span class="built_in">local</span>-fs.target.wants/*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*udev*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \</span><br><span class="line">rm -f /lib/systemd/system/basic.target.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/anaconda.target.wants/*;</span><br><span class="line">VOLUME [ <span class="string">"/sys/fs/cgroup"</span> ]</span><br><span class="line">CMD [<span class="string">"/usr/sbin/init"</span>]</span><br></pre></td></tr></table></figure><h1 id="Build-Command"><a href="#Build-Command" class="headerlink" title="Build Command"></a>Build Command</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker build --rm -t zhanghl/centos7.6.1810 /path/of/Dockerfile</span></span><br></pre></td></tr></table></figure><h1 id="Example-Apache-Systemd-Service-To-Run"><a href="#Example-Apache-Systemd-Service-To-Run" class="headerlink" title="Example Apache Systemd Service To Run"></a>Example Apache Systemd Service To Run</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker run -it -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup --name centos7 -p 80:80 centos7.6.1810:latest /usr/sbin/init</span></span><br><span class="line"><span class="comment"># docker exec -it centos /bin/bash</span></span><br><span class="line">docker<span class="comment"># yum -y install httpd</span></span><br><span class="line">docker<span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS7 Docker 镜像使用 systemd 服务
    
    </summary>
    
      <category term="Docker" scheme="https://blog.cloudops.ml/categories/Docker/"/>
    
    
      <category term="docker" scheme="https://blog.cloudops.ml/tags/docker/"/>
    
      <category term="centos" scheme="https://blog.cloudops.ml/tags/centos/"/>
    
      <category term="systemd" scheme="https://blog.cloudops.ml/tags/systemd/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat SonarQube Gerrit 设置 systemd 服务</title>
    <link href="https://blog.cloudops.ml/Systemd-service-file-of-sonar-gerrit-and-tomcat.html"/>
    <id>https://blog.cloudops.ml/Systemd-service-file-of-sonar-gerrit-and-tomcat.html</id>
    <published>2019-08-11T13:55:08.000Z</published>
    <updated>2019-08-11T13:58:53.329Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/lib/systemd/system/tomcat.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Tomcat</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/tomcat/bin/startup.sh</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/tomcat/bin/shutdown.sh</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">RemainAfterExit=yes</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="SonarQube"><a href="#SonarQube" class="headerlink" title="SonarQube"></a>SonarQube</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/lib/systemd/system/sonar.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=SonarQube</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/sonarqube-7.5/bin/linux-x86-64/sonar.sh start</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/sonarqube-7.5/bin/linux-x86-64/sonar.sh stop</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/sonarqube-7.5/bin/linux-x86-64/sonar.sh restart</span><br><span class="line">User=sonar</span><br><span class="line">Group=sonar</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=sonarqube</span><br></pre></td></tr></table></figure><h2 id="Gerrit-Code-Review"><a href="#Gerrit-Code-Review" class="headerlink" title="Gerrit Code Review"></a>Gerrit Code Review</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /usr/lib/systemd/system/gerrit.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Gerrit Code Review</span><br><span class="line">After=network.target httpd.service</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/review_site/bin/gerrit.sh start</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/review_site/bin/gerrit.sh stop</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/review_site/bin/gerrit.sh restart</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Tomcat SonarQube Gerrit 设置 systemd 服务
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="systemd" scheme="https://blog.cloudops.ml/tags/systemd/"/>
    
      <category term="tomcat" scheme="https://blog.cloudops.ml/tags/tomcat/"/>
    
      <category term="sonar" scheme="https://blog.cloudops.ml/tags/sonar/"/>
    
      <category term="sonarqube" scheme="https://blog.cloudops.ml/tags/sonarqube/"/>
    
      <category term="gerrit" scheme="https://blog.cloudops.ml/tags/gerrit/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 开启目录浏览功能</title>
    <link href="https://blog.cloudops.ml/Nginx-enable-directory-browser-function.html"/>
    <id>https://blog.cloudops.ml/Nginx-enable-directory-browser-function.html</id>
    <published>2019-08-11T13:53:09.000Z</published>
    <updated>2019-08-11T13:54:22.629Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><blockquote><p>编辑 nginx 配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>在 http 下面加入以下配置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;</span><br><span class="line">autoindex_exact_size off;</span><br><span class="line">autoindex_localtime on;</span><br></pre></td></tr></table></figure><blockquote><p>完整配置实例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    autoindex on;</span><br><span class="line">    autoindex_exact_size off;</span><br><span class="line">    autoindex_localtime on;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81 default_server;</span><br><span class="line">        listen       [::]:81 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># Settings for a TLS enabled server.</span><br><span class="line">#</span><br><span class="line">#    server &#123;</span><br><span class="line">#        listen       443 ssl http2 default_server;</span><br><span class="line">#        listen       [::]:443 ssl http2 default_server;</span><br><span class="line">#        server_name  _;</span><br><span class="line">#        root         /usr/share/nginx/html;</span><br><span class="line">#</span><br><span class="line">#        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">#        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">#        ssl_session_cache shared:SSL:1m;</span><br><span class="line">#        ssl_session_timeout  10m;</span><br><span class="line">#        ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">#        ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#        # Load configuration files for the default server block.</span><br><span class="line">#        include /etc/nginx/default.d/*.conf;</span><br><span class="line">#</span><br><span class="line">#        location / &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 404 /404.html;</span><br><span class="line">#            location = /40x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#</span><br><span class="line">#        error_page 500 502 503 504 /50x.html;</span><br><span class="line">#            location = /50x.html &#123;</span><br><span class="line">#        &#125;</span><br><span class="line">#    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Nginx 开启目录浏览功能
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="nginx" scheme="https://blog.cloudops.ml/tags/nginx/"/>
    
      <category term="目录浏览" scheme="https://blog.cloudops.ml/tags/%E7%9B%AE%E5%BD%95%E6%B5%8F%E8%A7%88/"/>
    
  </entry>
  
  <entry>
    <title>修复 Hexo 微博图床图片链接失效问题</title>
    <link href="https://blog.cloudops.ml/Fix-the-pictures-can-not-show-in-hexo-with-sina-weibo-picbed.html"/>
    <id>https://blog.cloudops.ml/Fix-the-pictures-can-not-show-in-hexo-with-sina-weibo-picbed.html</id>
    <published>2019-08-11T13:49:22.000Z</published>
    <updated>2019-08-11T13:51:10.341Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><blockquote><p>修改主题 head 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /Users/canvas/athlonreg/themes/next/layout/_partials/head/head.swig</span></span><br></pre></td></tr></table></figure><blockquote><p>添加如下行</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"referrer"</span> <span class="attr">content</span>=<span class="string">"no-referrer"</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>如图所示</p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006yd6wMly1g4dszk5a0mj31eo0gegq3.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      修复 Hexo 微博图床图片链接失效问题
    
    </summary>
    
      <category term="学习" scheme="https://blog.cloudops.ml/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="图床" scheme="https://blog.cloudops.ml/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>查看当前系统是虚拟机还是实体机</title>
    <link href="https://blog.cloudops.ml/Check-current-system-is-vm-or-real.html"/>
    <id>https://blog.cloudops.ml/Check-current-system-is-vm-or-real.html</id>
    <published>2019-08-11T13:47:02.000Z</published>
    <updated>2019-08-11T13:47:57.445Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmidecode -s system-product-name</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      查看当前系统是虚拟机还是实体机
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>设置 postgresql 通过密码登录</title>
    <link href="https://blog.cloudops.ml/Setup-postgresql-login-by-password.html"/>
    <id>https://blog.cloudops.ml/Setup-postgresql-login-by-password.html</id>
    <published>2019-08-11T13:44:43.000Z</published>
    <updated>2019-08-11T13:46:06.264Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><blockquote><p>修改文件 pg_hba.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local all all md5</span><br><span class="line">host  all all 127.0.0.1/32 md5</span><br><span class="line">host all all 192.168.45.0/32 md5</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      设置 postgresql 通过密码登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="postgresql" scheme="https://blog.cloudops.ml/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 部署配置 Redmine</title>
    <link href="https://blog.cloudops.ml/Deploy-redmine-on-CentOS7.html"/>
    <id>https://blog.cloudops.ml/Deploy-redmine-on-CentOS7.html</id>
    <published>2019-08-11T13:38:16.000Z</published>
    <updated>2019-08-11T13:43:12.923Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><h2 id="安装-Ruby-2-4"><a href="#安装-Ruby-2-4" class="headerlink" title="安装 Ruby 2.4"></a>安装 Ruby 2.4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison ImageMagick-devel  ImageMagick</span><br><span class="line">yum -y install centos-release-scl-rh</span><br><span class="line">yum -y install rh-ruby24 </span><br><span class="line">scl <span class="built_in">enable</span> rh-ruby24 bash</span><br><span class="line">ruby -v </span><br><span class="line">yum -y install rh-ruby24-rubygems rh-ruby24-ruby-devel</span><br><span class="line">gem <span class="built_in">source</span> -l</span><br><span class="line">gem sources -a http://mirrors.aliyun.com/rubygems/</span><br><span class="line">gem sources --remove  https://rubygems.org/</span><br><span class="line">gem <span class="built_in">source</span> -u</span><br><span class="line">gem <span class="built_in">source</span> -l</span><br></pre></td></tr></table></figure><h2 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h2><blockquote><p>建立相应数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user &apos;redmine&apos;@&apos;%&apos; identified by &apos;123456&apos; ;</span><br><span class="line">mysql&gt; create database redmine;</span><br><span class="line">mysql&gt; grant all on redmine.* to &apos;redmine&apos;@&apos;%&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="安装-redmine"><a href="#安装-redmine" class="headerlink" title="安装 redmine"></a>安装 redmine</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget https://www.redmine.org/releases/redmine-4.0.4.tar.gz</span><br><span class="line">tar zxvf redmine-4.0.4.tar.gz</span><br><span class="line">mv redmine-4.0.4 redmine</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export REDMINE=/usr/local/redmine"</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$REDMINE</span></span><br><span class="line">cp config/database.yml.example config/database.yml</span><br></pre></td></tr></table></figure><blockquote><p>配置 redmine，修改 $REDMINE/config/database.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">production:</span></span><br><span class="line"><span class="attr">  adapter:</span> <span class="string">mysql2</span></span><br><span class="line"><span class="attr">  database:</span> <span class="string">redmine</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">  username:</span> <span class="string">redmine</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">"123456"</span></span><br></pre></td></tr></table></figure><h2 id="安装-GEMS-依赖"><a href="#安装-GEMS-依赖" class="headerlink" title="安装 GEMS 依赖"></a>安装 GEMS 依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$REDMINE</span></span><br><span class="line">gem install bundler</span><br><span class="line">bundle install --without development <span class="built_in">test</span> production</span><br></pre></td></tr></table></figure><h2 id="生成会话存储秘钥令牌"><a href="#生成会话存储秘钥令牌" class="headerlink" title="生成会话存储秘钥令牌"></a>生成会话存储秘钥令牌</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundle <span class="built_in">exec</span> rake generate_secret_token</span><br></pre></td></tr></table></figure><h2 id="生成数据库结构"><a href="#生成数据库结构" class="headerlink" title="生成数据库结构"></a>生成数据库结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production REDMINE_LANG=zh bundle <span class="built_in">exec</span> rake db:migrate</span><br></pre></td></tr></table></figure><h2 id="数据库插入默认数据"><a href="#数据库插入默认数据" class="headerlink" title="数据库插入默认数据"></a>数据库插入默认数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RAILS_ENV=production REDMINE_LANG=zh bundle <span class="built_in">exec</span> rake redmine:load_default_data</span><br></pre></td></tr></table></figure><h2 id="启动-redmine"><a href="#启动-redmine" class="headerlink" title="启动 redmine"></a>启动 redmine</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundle <span class="built_in">exec</span> rails server webrick -e production -b 127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="配置-LDAP-认证"><a href="#配置-LDAP-认证" class="headerlink" title="配置 LDAP 认证"></a>配置 LDAP 认证</h2><blockquote><p>依次打开 管理 -&gt; LDAP 认证 -&gt; 新建认证模式</p></blockquote><p>配置一个 ou=admin 的配置如下：</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/20190705161009.png" alt></p><p>同样的方法配置所需要的所有 ou，如下图所示：</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/20190705161320.png" alt></p><h2 id="配置-CAS-SSO"><a href="#配置-CAS-SSO" class="headerlink" title="配置 CAS SSO"></a>配置 CAS SSO</h2><blockquote><p>安装插件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$REDMINE</span>/plugins</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/athlonreg/redmine_omniauth_cas</span><br><span class="line"><span class="built_in">cd</span> redmine_omniauth_cas</span><br><span class="line">bundle install</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$REDMINE</span></span><br><span class="line">bundle install</span><br><span class="line">RAILS_ENV=production rake redmine:plugins</span><br><span class="line">bundle <span class="built_in">exec</span> rails server webrick -e production -b 127.0.0.1</span><br></pre></td></tr></table></figure><blockquote><p>依次打开 管理 -&gt; 插件，点击插件 Redmine Omniauth plugin 后的配置</p></blockquote><p>配置如下：</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/20190705162003.png" alt></p><blockquote><p>各字段含义对照表</p></blockquote><table><thead><tr><th>字段名称</th><th>字段含义</th></tr></thead><tbody><tr><td>Enable CAS authentication</td><td>是否启用 CAS 认证</td></tr><tr><td>CAS server URL</td><td>CAS 服务器地址</td></tr><tr><td>CAS validation URL (if different)</td><td>CAS 服务器身份验证接口地址</td></tr><tr><td>Login page text</td><td>登陆页面标题</td></tr><tr><td>Replace Redmine login page</td><td>是否使用 CAS 服务器的登陆界面替换插件提供的登录界面</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS 部署配置 Redmine 项目管理系统
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Redmine" scheme="https://blog.cloudops.ml/tags/Redmine/"/>
    
      <category term="项目管理" scheme="https://blog.cloudops.ml/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
      <category term="敏捷开发" scheme="https://blog.cloudops.ml/tags/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 安装配置 GitLab</title>
    <link href="https://blog.cloudops.ml/Setup-gitlab-to-support-frame.html"/>
    <id>https://blog.cloudops.ml/Setup-gitlab-to-support-frame.html</id>
    <published>2019-02-01T02:55:52.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="CentOS-安装-GitLab"><a href="#CentOS-安装-GitLab" class="headerlink" title="CentOS 安装 GitLab"></a>CentOS 安装 GitLab</h2><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install curl</span></span><br><span class="line"><span class="comment"># yum -y install postfix</span></span><br><span class="line"><span class="comment"># systemctl start postfix</span></span><br><span class="line"><span class="comment"># systemctl enable postfix</span></span><br></pre></td></tr></table></figure><h3 id="下载-GitLab-的-RPM-包"><a href="#下载-GitLab-的-RPM-包" class="headerlink" title="下载 GitLab 的 RPM 包"></a>下载 GitLab 的 RPM 包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>在<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2dpdGxhYi1jZS95dW0vZWw3Lw==" title="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/<i class="fa fa-external-link"></i></span>找自己需要的版本，下载到本地，然后安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh  gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum localinstall gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><h2 id="配置-gitlab-repo"><a href="#配置-gitlab-repo" class="headerlink" title="配置 gitlab repo"></a>配置 gitlab repo</h2><p>为了后续升级方便，建议添加<code>gitlab</code>的<code>repo</code>源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sh</span></span><br></pre></td></tr></table></figure><h2 id="端口修改"><a href="#端口修改" class="headerlink" title="端口修改"></a>端口修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/gitlab/gitlab.rb</span></span><br></pre></td></tr></table></figure><p>修改下面的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">external_url &apos;http://devops.iamzhl.top:8090&apos;</span><br><span class="line">unicorn[&apos;port&apos;] = 8070</span><br><span class="line">nginx[&apos;listen_port&apos;] = 8090</span><br></pre></td></tr></table></figure><p><em>请根据个人需要进行定制</em></p><h2 id="重新部署并重启"><a href="#重新部署并重启" class="headerlink" title="重新部署并重启"></a>重新部署并重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl reconfigure</span></span><br><span class="line"><span class="comment"># gitlab-ctl restart</span></span><br></pre></td></tr></table></figure><h2 id="设置页面嵌套支持"><a href="#设置页面嵌套支持" class="headerlink" title="设置页面嵌套支持"></a>设置页面嵌套支持</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/opt/gitlab/nginx/conf/gitlab-http.conf</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzqr3dsb7gj31p818kgzc.jpg" alt></p><p>如图，添加标注的属性设置后重启<code>GitLab</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl restart</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS 安装配置 GitLab
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="GitLab" scheme="https://blog.cloudops.ml/tags/GitLab/"/>
    
      <category term="frame" scheme="https://blog.cloudops.ml/tags/frame/"/>
    
  </entry>
  
  <entry>
    <title>高效利用有道云笔记</title>
    <link href="https://blog.cloudops.ml/How-to-use-youdao-note-in-a-special-way.html"/>
    <id>https://blog.cloudops.ml/How-to-use-youdao-note-in-a-special-way.html</id>
    <published>2019-01-20T13:12:25.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>先说几个博主和其他的码字农民工比较头疼的问题</p><ul><li>云同步</li></ul><p>现在是云的时代，没有云同步的码文环境不是一个好的环境，可能每个人都有不止一个码文平台，比如工作配的机器和私人的机器，我在其中一台机器写好的文章还要再写一份到另外的机器。。。简直不要太lower。可能有人说我们用某度网盘。。。What’s that？已经放弃好久，本文不做赘述，想用的就用吧。。。</p><ul><li>跨平台</li></ul><p>这里假设上面的环境成立，你有两台机器，私人的是Mac环境，工作机器是Windows，那么问题来了，之前我在Mac非常喜欢MWeb，因为它的图床集成让我着迷 ，截图粘贴一张引用外链的图片就这么完成了，就是这么快，但是现在也已经放弃了，因为Windows平台人家不做，不要问我为什么，我不想喷Windows太垃圾🌝🌝但是无奈单位只有Windows，于是我要用两套环境。。。记住两套快捷键。。。</p><ul><li>MarkDown</li></ul><p>关于MarkDown的介绍这里不赘述。于我而言，不支持MarkDown解析的编辑器，我是绝对不会用的，Word就工作用用。。。为何呢？因为MarkDown太优雅了，在我看来，Word和MarkDown就像50岁的大妈和20岁的妙龄少女，写文档发博文用Word简直是遭罪，用MarkDown简直是享受，当然啦，纯属个人看法，不喜勿喷。。。</p><ul><li>图床</li></ul><p>说完了MarkDown和云的问题，有一个问题很明显，云上的数据文字可以，图片甚至视频怎么办？难道我还要买个云存储甚至是云服务器？当然不用啦！国内有些大公司还是相当良心的，先神秘一下，具体用什么，下面详细说😄</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>编辑器<ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cudHlwb3JhLmlv" title="https://www.typora.io">Typora<i class="fa fa-external-link"></i></span></li></ul></li><li>截图工具<ul><li>Windows：<span class="exturl" data-url="aHR0cHM6Ly9zbmlwLnFxLmNvbQ==" title="https://snip.qq.com">Snip<i class="fa fa-external-link"></i></span></li><li>macOS：<span class="exturl" data-url="aHR0cHM6Ly96aC54bmlwYXBwLmNvbQ==" title="https://zh.xnipapp.com">Xnip<i class="fa fa-external-link"></i></span></li></ul></li><li>图床<ul><li>Sina Weobo账号(Sina的微博平台提供了一个图床服务，自带cdn)</li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz" title="https://github.com/Molunerfinn/PicGo/releases">PicGo<i class="fa fa-external-link"></i></span></li></ul></li><li>云同步<ul><li><span class="exturl" data-url="aHR0cDovL25vdGUueW91ZGFvLmNvbQ==" title="http://note.youdao.com">有道云笔记<i class="fa fa-external-link"></i></span></li></ul></li></ul><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>其他的都没什么好说的，说一下PicGo的配置吧！首先在新浪微博官网登录微博账号，然后打开<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vbWluaXB1Ymxpc2g=" title="https://weibo.com/minipublish">minipublish<i class="fa fa-external-link"></i></span>页面，如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde3dq3hvj326w1e047w.jpg" alt></p><p>然后打开调试窗口，<code>Chrome</code>快捷键为<code>F12</code>，然后调到网络选项卡，如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde59wlkyj326w1e0gzx.jpg" alt></p><p>点击<code>minipublish</code>，查看一下Cookie值如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde6i4je7j326w1e0tpj.jpg" alt></p><p>选中Cookie后面那一串字符，拷贝一下，打开<code>PicGo</code>窗口，找到图床设置 -&gt; 新浪图床，在Cookie后面的输入框粘贴刚才的字符串，勾选cookie模式，点击确定 -&gt; 设为默认图床，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde7rnurvj31eo0v847r.jpg" alt></p><p>这时候，用前文所说的截图工具或者自己喜欢的工具截图，然后按下刚刚设置的快捷键，图片就会上传到新浪微博的图床服务器，然后将图片的外链返回给剪贴板了。</p><p>在有道云随便建一个MarkDown文档，粘贴一下，如图</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzdem32mcej320w1e0nep.jpg" alt></p><p>文档保存后，有道云笔记会自动帮我们进行云同步，从此不必担心其3G的空间不够用了。</p><p>当然啦，快捷键根据个人习惯在PicGo设置里面自行定义吧。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      高效利用有道云笔记
    
    </summary>
    
      <category term="高效利用有道云笔记" scheme="https://blog.cloudops.ml/categories/%E9%AB%98%E6%95%88%E5%88%A9%E7%94%A8%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="图床" scheme="https://blog.cloudops.ml/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="有道云笔记" scheme="https://blog.cloudops.ml/tags/%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Picbed" scheme="https://blog.cloudops.ml/tags/Picbed/"/>
    
  </entry>
  
  <entry>
    <title>TestLink 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://blog.cloudops.ml/TestLink-integrate-with-ldap-and-CAS.html"/>
    <id>https://blog.cloudops.ml/TestLink-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-04T06:55:56.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>TestLink 版本：2.18</li><li>TestLink URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wL3Rlc3RsaW5r" title="http://devops.iamzhl.top/testlink">http://devops.iamzhl.top/testlink<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改TestLink配置文件"><a href="#修改TestLink配置文件" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/custom_config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>LDAP</code>配置文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$tlCfg-&gt;authentication[<span class="string">'method'</span>] = <span class="string">'LDAP'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>] = <span class="keyword">array</span>();</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_server'</span>] = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_port'</span>] = <span class="string">'389'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_version'</span>] = <span class="string">'3'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_root_dn'</span>] = <span class="string">'dc=iamzhl,dc=top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_bind_dn'</span>] = <span class="string">'cn=Manager,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_bind_passwd'</span>] = <span class="string">'123456'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_tls'</span>] = <span class="keyword">false</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_organization'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_uid_field'</span>] = <span class="string">'uid'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_email_field'</span>] = <span class="string">'mail'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_firstname_field'</span>] = <span class="string">'givenname'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_surname_field'</span>] = <span class="string">'sn'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_automatic_user_creation'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_email_field'</span>] = <span class="string">'mail'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_firstname_field'</span>] = <span class="string">'givenname'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_surname_field'</span>] = <span class="string">'sn'</span>;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvp6j1abej328s1f8qb2.jpg" alt></p><p>如图，正常跳转到<code>TestLink</code>登录界面，输入<code>LDAP</code>服务器中的用户名密码后点击<code>Log in</code></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt></p><p>如图所示，登陆成功后正常的获取到了用户名，点击左上角的登出按钮，正常退出后跳转到了<code>TestLink</code>的登录界面</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuj3kqkjj328s1f8gtv.jpg" alt></p><p>至此，<code>TestLink</code>整合<code>LDAP</code>完成。</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="添加依赖的phpCAS库文件"><a href="#添加依赖的phpCAS库文件" class="headerlink" title="添加依赖的phpCAS库文件"></a>添加依赖的<code>phpCAS</code>库文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># chown -R apache:apache phpCAS-1.3.6</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6/source/CAS.php /var/www/html/testlink/lib/functions/</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6/source/CAS /var/www/html/testlink/lib/functions/</span></span><br></pre></td></tr></table></figure><h3 id="修改TestLink配置文件-1"><a href="#修改TestLink配置文件-1" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/custom_config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>CAS</code>配置项</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** CAS server parameters */</span></span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_name'</span>] = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_port'</span>] = <span class="number">8080</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_path'</span>] = <span class="string">'cas'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_file'</span>] = <span class="string">'/var/logs/testlink/phpCAS.log'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_protocol'</span>] = <span class="string">'2.0'</span>;</span><br></pre></td></tr></table></figure><h3 id="修改登录界面"><a href="#修改登录界面" class="headerlink" title="修改登录界面"></a>修改登录界面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/login.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>switch($args-&gt;action)</code>分支选择语句段内找到<code>case &#39;loginform&#39;</code>部分，添加<code>CAS</code>的认证</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($args-&gt;action) </span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'doLogin'</span>:</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'ajaxlogin'</span>:</span><br><span class="line">    doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// When doing ajax login we need to skip control regarding session already open</span></span><br><span class="line">    <span class="comment">// that we use when doing normal login.</span></span><br><span class="line">    <span class="comment">// If we do not proceed this way we will enter an infinite loop</span></span><br><span class="line">    $options = <span class="keyword">array</span>(<span class="string">'doSessionExistsCheck'</span> =&gt; ($args-&gt;action==<span class="string">'doLogin'</span>));</span><br><span class="line">    $op = doAuthorize($db,$args-&gt;login,$args-&gt;pwd,$options);</span><br><span class="line">    $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    $gui-&gt;draw = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'ajaxcheck'</span>:</span><br><span class="line">    processAjaxCheck($db);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'oauth'</span>:</span><br><span class="line">    <span class="comment">//If code is empty then break</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">        renderLoginScreen($gui);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Switch between oauth providers</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">include_once</span>(<span class="string">'lib/functions/oauth_providers/'</span>.$_GET[<span class="string">'oauth'</span>].<span class="string">'.php'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Oauth client doesn't exist"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $oau = config_get(<span class="string">'OAuthServers'</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($oau <span class="keyword">as</span> $oprov) &#123;</span><br><span class="line">      <span class="keyword">if</span> (strcmp($oprov[<span class="string">'oauth_name'</span>],$_GET[<span class="string">'oauth'</span>]) == <span class="number">0</span>)&#123;</span><br><span class="line">        $oauth_params = $oprov;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $user_token = oauth_get_token($oauth_params, $_GET[<span class="string">'code'</span>]);</span><br><span class="line">    <span class="keyword">if</span>($user_token-&gt;status[<span class="string">'status'</span>] == tl::OK) &#123;</span><br><span class="line">      doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">      $op = doAuthorize($db,$user_token-&gt;options-&gt;user,<span class="string">'oauth'</span>,$user_token-&gt;options);</span><br><span class="line">      $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $gui-&gt;note = $user_token-&gt;status[<span class="string">'msg'</span>];</span><br><span class="line">        renderLoginScreen($gui);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'loginform'</span>:</span><br><span class="line">  <span class="comment">//zhanghl start</span></span><br><span class="line">  <span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">    &#123;    </span><br><span class="line">       <span class="keyword">if</span>($authCfg[<span class="string">'cas_debug_enable'</span>])</span><br><span class="line">       &#123;</span><br><span class="line">          phpCAS::setDebug($authCfg[<span class="string">'cas_debug_file'</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// Initialize phpCAS</span></span><br><span class="line">       phpCAS::client($authCfg[<span class="string">'cas_server_protocol'</span>], $authCfg[<span class="string">'cas_server_name'</span>], $authCfg[<span class="string">'cas_server_port'</span>], $authCfg[<span class="string">'cas_server_path'</span>]);</span><br><span class="line">       <span class="comment">// For production use set the CA certificate that is the issuer of the cert</span></span><br><span class="line">       <span class="comment">// on the CAS server and uncomment the line below</span></span><br><span class="line">       <span class="comment">// phpCAS::setCasServerCACert($cas_server_ca_cert_path);</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">// For quick testing you can disable SSL validation of the CAS server.</span></span><br><span class="line">       <span class="comment">// THIS SETTING IS NOT RECOMMENDED FOR PRODUCTION.</span></span><br><span class="line">       <span class="comment">// VALIDATING THE CAS SERVER IS CRUCIAL TO THE SECURITY OF THE CAS PROTOCOL!</span></span><br><span class="line">       phpCAS::setNoCasServerValidation();</span><br><span class="line">               </span><br><span class="line">       <span class="comment">// Override the validation url for any (ST and PT) CAS 2.0 validation</span></span><br><span class="line">       <span class="comment">//phpCAS::setServerProxyValidateURL('http://devops.iamzhl.top:8080/cas/proxyValidate');</span></span><br><span class="line">               </span><br><span class="line">       <span class="comment">// Override the validation url for any CAS 1.0 validation</span></span><br><span class="line">       <span class="comment">//phpCAS::setServerServiceValidateURL('http://devops.iamzhl.top:8080/cas/serviceValidate');</span></span><br><span class="line">              </span><br><span class="line">       phpCAS::handleLogoutRequests();</span><br><span class="line">       phpCAS::forceAuthentication();</span><br><span class="line">       $options = <span class="keyword">array</span>(<span class="string">'doSessionExistsCheck'</span> =&gt; ($args-&gt;action==<span class="string">'doLogin'</span>));</span><br><span class="line">       $op = doCASAuthorize($db,$options);</span><br><span class="line">       $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">//zhanghl end</span></span><br><span class="line">    $doRenderLoginScreen = <span class="keyword">true</span>;</span><br><span class="line">    $gui-&gt;draw = <span class="keyword">true</span>;</span><br><span class="line">    $op = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// unfortunatelly we use $args-&gt;note in order to do some logic.</span></span><br><span class="line">    <span class="keyword">if</span>( ($args-&gt;note=trim($args-&gt;note)) == <span class="string">""</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>( $gui-&gt;authCfg[<span class="string">'SSO_enabled'</span>] )</span><br><span class="line">      &#123;</span><br><span class="line">        doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">        $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> ($gui-&gt;authCfg[<span class="string">'SSO_method'</span>]) </span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'CLIENT_CERTIFICATE'</span>:</span><br><span class="line">            $op = doSSOClientCertificate($db,$_SERVER,$gui-&gt;authCfg);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">case</span> <span class="string">'WEBSERVER_VAR'</span>:</span><br><span class="line">            <span class="comment">//DEBUGsyslogOnCloud('Trying to execute SSO using SAML');</span></span><br><span class="line">            $op = doSSOWebServerVar($db,$gui-&gt;authCfg);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//zhanghl start</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//zhanghl end</span></span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在<code>init_gui</code>函数内找到<code>switch($args-&gt;note)</code>分支语句，在<code>expired</code>分支下添加一行重定向调用</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($args-&gt;note) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'expired'</span>:</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION)) &#123;</span><br><span class="line">        session_start();</span><br><span class="line">      &#125;</span><br><span class="line">      session_unset();</span><br><span class="line">      session_destroy();</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'session_expired'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">      <span class="comment">// 添加重定向调用</span></span><br><span class="line">      redirect(TL_BASE_HREF .<span class="string">"login.php?destination="</span>.$args-&gt;destination);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'first'</span>:</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'your_first_login'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'lost'</span>:</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'passwd_lost'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      $gui-&gt;note = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="修改登出界面"><a href="#修改登出界面" class="headerlink" title="修改登出界面"></a>修改登出界面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /var/www/html/testlink/logout.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>$authCfg = config_get(&#39;authentication&#39;);</code>语句之后添加<code>CAS</code>的登出处理</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>($authCfg[<span class="string">'cas_debug_enable'</span>])</span><br><span class="line">   &#123;</span><br><span class="line">      phpCAS::setDebug($authCfg[<span class="string">'cas_debug_file'</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// Initialize phpCAS</span></span><br><span class="line">   phpCAS::client($authCfg[<span class="string">'cas_server_protocol'</span>], $authCfg[<span class="string">'cas_server_name'</span>], $authCfg[<span class="string">'cas_server_port'</span>], $authCfg[<span class="string">'cas_server_path'</span>]);</span><br><span class="line">   phpCAS::logout();</span><br><span class="line">&#125;</span><br><span class="line">redirect(<span class="string">"login.php?note=logout"</span>);</span><br></pre></td></tr></table></figure><h3 id="修改common-php全局引用文件"><a href="#修改common-php全局引用文件" class="headerlink" title="修改common.php全局引用文件"></a>修改<code>common.php</code>全局引用文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/common.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>require_once(&#39;tlsmarty.inc.php&#39;);</code>引用的前面增加对<code>CAS</code>的引用</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** TestLink CAS Authentication Ref */</span></span><br><span class="line">$authCfg = config_get(<span class="string">'authentication'</span>);</span><br><span class="line"><span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Load the CAS lib</span></span><br><span class="line">   <span class="keyword">require_once</span> <span class="string">'CAS.php'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvnthnmyaj31p818kn8o.jpg" alt></p><h3 id="修改认证函数"><a href="#修改认证函数" class="headerlink" title="修改认证函数"></a>修改认证函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/doAuthorize.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在开头<code>require_once</code>语句的后面添加<code>CAS</code>认证函数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// zhanghl start</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doCASAuthorize</span><span class="params">(&amp;$db,$options=null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">global</span> $g_tlLogger;</span><br><span class="line">   $result = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; tl::ERROR, <span class="string">'msg'</span> =&gt; <span class="keyword">null</span>);</span><br><span class="line">   $user = <span class="keyword">new</span> tlUser();</span><br><span class="line">   $user-&gt;login = $_SESSION[<span class="string">'phpCAS'</span>][<span class="string">'user'</span>];</span><br><span class="line">   $login_exists = ($user-&gt;readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) &gt;= tl::OK);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!$login_exists)</span><br><span class="line">   &#123;</span><br><span class="line">      $user = <span class="keyword">new</span> tlUser();</span><br><span class="line">      $user-&gt;login = $_SESSION[<span class="string">'phpCAS'</span>][<span class="string">'user'</span>];</span><br><span class="line">      $user-&gt;isActive = <span class="keyword">true</span>;</span><br><span class="line">      $user-&gt;authentication = <span class="string">'LDAP'</span>;  <span class="comment">// force for auth_does_password_match</span></span><br><span class="line">      $user-&gt;setPassword($user-&gt;login);  <span class="comment">// write password on DB anyway</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//$user-&gt;emailAddress = $_SESSION['phpCAS']['attributes']['mail'];</span></span><br><span class="line">   <span class="comment">//$user-&gt;firstName = $_SESSION['phpCAS']['attributes']['sn'];</span></span><br><span class="line">   <span class="comment">//$user-&gt;lastName = $_SESSION['phpCAS']['attributes']['givenName'];</span></span><br><span class="line">   $doLogin = ($user-&gt;writeToDB($db) == tl::OK);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>( $doLogin )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// Need to do set COOKIE following Mantis model</span></span><br><span class="line">      $auth_cookie_name = config_get(<span class="string">'auth_cookie'</span>);</span><br><span class="line">      $expireOnBrowserClose=<span class="keyword">false</span>;</span><br><span class="line">      setcookie($auth_cookie_name,$user-&gt;getSecurityCookie(),$expireOnBrowserClose,<span class="string">'/'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Disallow two sessions within one browser</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'currentUser'</span>]) &amp;&amp; !is_null($_SESSION[<span class="string">'currentUser'</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">         $result[<span class="string">'msg'</span>] = lang_get(<span class="string">'login_msg_session_exists1'</span>) .</span><br><span class="line">            <span class="string">' &lt;a style="color:white;" href="logout.php"&gt;'</span> .</span><br><span class="line">            lang_get(<span class="string">'logout_link'</span>) . <span class="string">'&lt;/a&gt;'</span> . lang_get(<span class="string">'login_msg_session_exists2'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// Setting user's session information</span></span><br><span class="line">         $_SESSION[<span class="string">'currentUser'</span>] = $user;</span><br><span class="line">         $_SESSION[<span class="string">'lastActivity'</span>] = time();</span><br><span class="line"></span><br><span class="line">         $g_tlLogger-&gt;endTransaction();</span><br><span class="line">         $g_tlLogger-&gt;startTransaction();</span><br><span class="line">         setUserSession($db,$user-&gt;login, $user-&gt;dbID,$user-&gt;globalRoleID,$user-&gt;emailAddress,$user-&gt;locale,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">         $result[<span class="string">'status'</span>] = tl::OK;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// zhanghl end</span></span><br></pre></td></tr></table></figure><h3 id="修改全局配置文件-可选"><a href="#修改全局配置文件-可选" class="headerlink" title="修改全局配置文件 (可选)"></a>修改全局配置文件 (可选)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>增加<code>CAS</code>认证属性</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** CAS server properties */</span></span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_enable'</span>] = <span class="keyword">false</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_name'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_port'</span>] = <span class="number">8080</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_path'</span>] = <span class="string">'cas'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_file'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_protocol'</span>] = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><p><strong><em>Note：此选项用以设置默认属性值，主要用来日后查阅，可以不写，<code>/var/www/html/testlink/custom_config.inc.php</code>文件相同的属性配置会覆盖生效。</em></strong></p><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/CAS/Client.php</span></span><br></pre></td></tr></table></figure><blockquote><p>将如下几个函数中的<code>https</code>改为<code>http</code>即可</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getServerBaseURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// the URL is build only when needed</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>]) ) &#123;</span><br><span class="line">        <span class="comment">// $this-&gt;_server['base_url'] = 'https://' . $this-&gt;_getServerHostname();</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] = <span class="string">'http://'</span> . <span class="keyword">$this</span>-&gt;_getServerHostname();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_getServerPort()!=<span class="number">443</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="string">':'</span></span><br><span class="line">                .<span class="keyword">$this</span>-&gt;_getServerPort();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="keyword">$this</span>-&gt;_getServerURI();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getCallbackURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// the URL is built when needed only</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_callback_url) ) &#123;</span><br><span class="line">        $final_uri = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">        <span class="comment">// $final_uri = 'https://';</span></span><br><span class="line">        $final_uri = <span class="string">'http://'</span>;</span><br><span class="line">        $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">        $request_uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">        $request_uri = preg_replace(<span class="string">'/\?.*$/'</span>, <span class="string">''</span>, $request_uri);</span><br><span class="line">        $final_uri .= $request_uri;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_callback_url = $final_uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_callback_url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phpCAS::traceBegin();</span><br><span class="line">    <span class="comment">// the URL is built when needed only</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_url) ) &#123;</span><br><span class="line">        $final_uri = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">        <span class="comment">// $final_uri = ($this-&gt;_isHttps()) ? 'https' : 'http';</span></span><br><span class="line">        $final_uri = (<span class="keyword">$this</span>-&gt;_isHttps()) ? <span class="string">'http'</span> : <span class="string">'http'</span>;</span><br><span class="line">        $final_uri .= <span class="string">'://'</span>;</span><br><span class="line"></span><br><span class="line">        $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">        $request_uri= explode(<span class="string">'?'</span>, $_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="number">2</span>);</span><br><span class="line">        $final_uri.= $request_uri[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($request_uri[<span class="number">1</span>]) &amp;&amp; $request_uri[<span class="number">1</span>]) &#123;</span><br><span class="line">            $query_string= <span class="keyword">$this</span>-&gt;_removeParameterFromQueryString(<span class="string">'ticket'</span>, $request_uri[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the query string still has anything left,</span></span><br><span class="line">            <span class="comment">// append it to the final URI</span></span><br><span class="line">            <span class="keyword">if</span> ($query_string !== <span class="string">''</span>) &#123;</span><br><span class="line">                $final_uri.= <span class="string">"?$query_string"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        phpCAS::trace(<span class="string">"Final URI: $final_uri"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setURL($final_uri);</span><br><span class="line">    &#125;</span><br><span class="line">    phpCAS::traceEnd(<span class="keyword">$this</span>-&gt;_url);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>debug</code>调试目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/testlink</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/testlink</span></span><br></pre></td></tr></table></figure><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvougi1woj32221fcdv4.jpg" alt></p><p>如图所示，正常跳转到<code>CAS</code>的登录界面，地址变成了<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Ftestlink%2Flogin.php</code>，输入用户名密码后点击登录</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt></p><p>如图登陆成功后正常获取用户名，点击左上角的登出按钮后，正常退出到<code>CAS</code>登出页面</p><p>![image-20181205173735167](/Users/canvas/Library/Application Support/typora-user-images/image-20181205173735167.png)</p><p>至此，<code>TestLink</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      TestLink 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://blog.cloudops.ml/tags/LDAP/"/>
    
      <category term="TestLink" scheme="https://blog.cloudops.ml/tags/TestLink/"/>
    
  </entry>
  
  <entry>
    <title>MantisBT 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://blog.cloudops.ml/MantisBT-integrate-with-ldap-and-CAS.html"/>
    <id>https://blog.cloudops.ml/MantisBT-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-03T07:07:11.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>MantisBT 版本：2.18</li><li>Mantis URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wL21hbnRpcw==" title="http://devops.iamzhl.top/mantis">http://devops.iamzhl.top/mantis<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改MantisBT配置文件"><a href="#修改MantisBT配置文件" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><blockquote><p>添加以下配置项</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MantisBT Authentication and LDAP Settings #</span></span><br><span class="line">$g_login_method = LDAP;</span><br><span class="line">$g_reauthentication = ON;</span><br><span class="line">$g_reauthentication_expiry = TOKEN_EXPIRY_AUTHENTICATED;</span><br><span class="line">$g_ldap_server = <span class="string">'ldap://devops.iamzhl.top:389'</span>;</span><br><span class="line">$g_ldap_root_dn = <span class="string">'ou=People,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$g_ldap_protocol_version = <span class="number">3</span>;</span><br><span class="line">$g_ldap_organization = <span class="string">''</span>;</span><br><span class="line">$g_ldap_bind_dn = <span class="string">'cn=Manager,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$g_ldap_bind_passwd = <span class="string">'123456'</span>;</span><br><span class="line">$g_ldap_uid_field = <span class="string">'uid'</span>;</span><br><span class="line">$g_ldap_realname_field = <span class="string">'cn'</span>;</span><br><span class="line">$g_use_ldap_realname = ON;</span><br><span class="line">$g_use_ldap_email = ON;</span><br></pre></td></tr></table></figure><p>打开<code>MantisBT</code>网址，输入用户名密码点击登录</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/dd/a754582a7218fd2860d31fb543c667.jpg" alt></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/07/158dfd797dce0fa01335dd8d9b5085.jpg" alt></p><p>登陆成功后，正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5d/e2fd0f937861208615ce61fae90423.jpg" alt></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到登录界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5e/e198803ba7693b67b5e6c5fc075ab5.jpg" alt></p><p>至此，<code>MantisBT</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><h3 id="下载phpCAS放到MantisBT下"><a href="#下载phpCAS放到MantisBT下" class="headerlink" title="下载phpCAS放到MantisBT下"></a>下载<code>phpCAS</code>放到<code>MantisBT</code>下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># chown -R apache:apache phpCAS-1.3.6</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6 /var/www/html/mantis/phpCAS</span></span><br></pre></td></tr></table></figure><h3 id="修改MantisBT配置文件-1"><a href="#修改MantisBT配置文件-1" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/config/config_inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>CAS</code>认证需要的变量(请按照自己的<code>LDAP</code>服务器进行修改)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MantisBT Authentication With CAS Settings #</span></span><br><span class="line">$g_login_method = CAS;</span><br><span class="line">$g_cas_server = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$g_cas_port = <span class="number">8080</span>;</span><br><span class="line">$g_cas_uri = <span class="string">'/cas'</span>;</span><br><span class="line">$g_cas_validate = <span class="string">''</span>;</span><br><span class="line">$g_cas_version = <span class="string">'2.0'</span>;</span><br><span class="line">$g_cas_debug = <span class="string">'/var/www/html/mantis/cas.log'</span>;</span><br><span class="line">$g_cas_saml_attributes = OFF;</span><br><span class="line">$g_cas_saml_map = <span class="keyword">array</span>( <span class="string">'name'</span> =&gt; <span class="string">''</span>, <span class="string">'mail'</span> =&gt; <span class="string">''</span> );</span><br><span class="line">$g_cas_use_ldap = ON;</span><br><span class="line">$g_ldap_mantis_uid  = <span class="string">'uid'</span>;</span><br><span class="line">$g_cas_ldap_update  = OFF;</span><br><span class="line">$g_cas_ldap_update_fields = <span class="string">''</span>;</span><br><span class="line">$g_cas_ldap_update_map    = <span class="string">''</span>;</span><br><span class="line">$g_ldap_language_field = <span class="string">''</span>;</span><br><span class="line">$g_ldap_language_keys = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><h3 id="修改登录页面"><a href="#修改登录页面" class="headerlink" title="修改登录页面"></a>修改登录页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> );</span><br><span class="line"><span class="comment">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span></span><br><span class="line"><span class="keyword">if</span>( auth_is_user_authenticated() &amp;&amp; !current_user_is_anonymous() ) &#123;</span><br><span class="line">print_header_redirect( config_get( <span class="string">'default_home_page'</span> ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在判断变量 f_install 的判断语句之后添加下面的判断语句来判断验证方式，若为 CAS ，则利用 auth_cas_get_name 函数来处理</span></span><br><span class="line"><span class="keyword">if</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line"><span class="comment"># This will detour to the CAS login page if needed</span></span><br><span class="line">$f_password = <span class="string">''</span>;</span><br><span class="line">$f_username = auth_cas_get_name();</span><br><span class="line"><span class="comment"># User is always authenticated by this point</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login_password_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span></span><br><span class="line"><span class="keyword">if</span>( auth_is_user_authenticated() &amp;&amp; !current_user_is_anonymous() ) &#123;</span><br><span class="line">print_header_redirect( config_get( <span class="string">'default_home_page'</span> ) );</span><br><span class="line">&#125;</span><br><span class="line">$f_username              = gpc_get_string( <span class="string">'username'</span>, <span class="string">''</span> );</span><br><span class="line"><span class="comment"># zhanghl start</span></span><br><span class="line"><span class="keyword">if</span>( $f_username == <span class="string">''</span> ) &#123;</span><br><span class="line">        $f_username = $staffid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># zhanghl end</span></span><br></pre></td></tr></table></figure><h3 id="修改登出页面"><a href="#修改登出页面" class="headerlink" title="修改登出页面"></a>修改登出页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/logout_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> );</span><br><span class="line"><span class="comment"># Cache the current logout redirect page as it will be cleared by auth_logout()</span></span><br><span class="line"><span class="comment">//$t_logout_redirect = auth_logout_redirect_page();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//auth_logout();</span></span><br><span class="line">phpCAS::setDebug();</span><br><span class="line">phpCAS::setVerbose(<span class="keyword">true</span>);</span><br><span class="line">phpCAS::handleLogoutRequests();</span><br><span class="line">phpCAS::logout();</span><br><span class="line"></span><br><span class="line"><span class="comment">//print_header_redirect( $t_logout_redirect, true, false );</span></span><br><span class="line">print_header_redirect( config_get( <span class="string">'logout_redirect_page'</span> ), <span class="keyword">true</span>, <span class="keyword">false</span> );</span><br></pre></td></tr></table></figure><h3 id="修改验证逻辑"><a href="#修改验证逻辑" class="headerlink" title="修改验证逻辑"></a>修改验证逻辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/core/authentication_api.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在变量 g_cache_current_user_id 的定义后面添加以下函数，定义 CAS 的登录逻辑</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Initialize phpCAS.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment"># phpCAS must be installed in the include path</span></span><br><span class="line">       <span class="comment"># or in the Mantis directory.</span></span><br><span class="line">       <span class="keyword">require_once</span>(<span class="string">'/var/www/html/mantis/phpCAS/CAS.php'</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">static</span> $s_initialized=<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (! $s_initialized ) &#123;</span><br><span class="line">               phpCAS::setDebug( config_get( <span class="string">'cas_debug'</span> ) );</span><br><span class="line">              <span class="comment">## These should be set in config_inc.php</span></span><br><span class="line">               $t_server_version = config_get( <span class="string">'cas_version'</span> );</span><br><span class="line">               $t_server_cas_server = config_get( <span class="string">'cas_server'</span> );</span><br><span class="line">               $t_server_port = config_get( <span class="string">'cas_port'</span> );</span><br><span class="line">               $t_server_uri = config_get( <span class="string">'cas_uri'</span> );</span><br><span class="line">               $t_start_session = (boolean)<span class="keyword">FALSE</span>; <span class="comment"># Mantis takes care of its own session</span></span><br><span class="line"></span><br><span class="line">               phpCAS::client($t_server_version, $t_server_cas_server, $t_server_port, $t_server_uri, $t_start_session);</span><br><span class="line">               <span class="keyword">if</span> ($t_server_version == <span class="string">"S1"</span>)</span><br><span class="line">                       phpCAS::setServerSamlValidateURL( config_get( <span class="string">'cas_validate'</span> ) );</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                       phpCAS::setServerProxyValidateURL( config_get( <span class="string">'cas_validate'</span> ) );</span><br><span class="line">               <span class="keyword">if</span> (method_exists(<span class="string">'phpCAS'</span>, <span class="string">'setNoCasServerValidation'</span>)) &#123;</span><br><span class="line">                       <span class="comment">// no SSL validation for the CAS server</span></span><br><span class="line">                       phpCAS::setNoCasServerValidation();</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               $s_initialized = <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Fetches the user's CAS name, authenticating if needed.</span></span><br><span class="line"><span class="comment">* Can translate CAS login name to Mantis username through LDAP.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_get_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment"># Get CAS username from phpCAS</span></span><br><span class="line">       auth_cas_init();</span><br><span class="line">       phpCAS::forceAuthentication();</span><br><span class="line">       $t_cas_id = phpCAS::getUser();</span><br><span class="line">       $t_cas_attribs = phpCAS::getAttributes();</span><br><span class="line"></span><br><span class="line">       <span class="comment"># If needed, translate the CAS username through LDAP</span></span><br><span class="line">       $t_username = $t_cas_id;</span><br><span class="line">       <span class="keyword">if</span> (config_get( <span class="string">'cas_use_ldap'</span>, <span class="keyword">false</span> )) &#123;</span><br><span class="line">               $t_username = auth_cas_ldap_translate( $t_cas_id );</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">elseif</span> (config_get( <span class="string">'cas_saml_attributes'</span>, <span class="keyword">false</span> )) &#123;</span><br><span class="line">               $t_cas_attribmap = config_get( <span class="string">'cas_saml_map'</span>, <span class="keyword">array</span>() );</span><br><span class="line">               $t_cas_attrib_name = $t_cas_attribs[$t_cas_attribmap[<span class="string">'name'</span>]];</span><br><span class="line">               $t_cas_attrib_mail = $t_cas_attribs[$t_cas_attribmap[<span class="string">'mail'</span>]];</span><br><span class="line">               <span class="keyword">if</span> ( user_get_id_by_name($t_cas_id) == <span class="keyword">false</span> ) &#123;</span><br><span class="line">                       user_create( $t_cas_id, <span class="string">''</span>, $t_cas_attrib_mail, <span class="keyword">null</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, $t_cas_attrib_name );</span><br><span class="line">       &#125;</span><br><span class="line">       &#125;</span><br><span class="line">                               </span><br><span class="line">       <span class="keyword">return</span> $t_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Takes an ID string, and looks up the LDAP directory to find</span></span><br><span class="line"><span class="comment">* the matching username for Mantis.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Optionally, also update the user information in the Mantis user</span></span><br><span class="line"><span class="comment">* table.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $p_cas_id string Typically, the username given by phpCAS.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $p_update_user bool Whether or not to update user details from LDAP.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_ldap_translate</span><span class="params">( $p_cas_id, $p_update_user=<span class="string">''</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Please make sure the Mantis CAS and LDAP settings are set in config_inc.php</span></span><br><span class="line"></span><br><span class="line">       $t_ldap_organization    = config_get( <span class="string">'ldap_organization'</span> );</span><br><span class="line">       $t_ldap_root_dn         = config_get( <span class="string">'ldap_root_dn'</span> );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Required fields in LDAP for CAS</span></span><br><span class="line">       $t_ldap_language_field = config_get( <span class="string">'ldap_language_field'</span>, <span class="string">''</span> );</span><br><span class="line">       $t_ldap_uid_field = config_get( <span class="string">'ldap_uid_field'</span>, <span class="string">'uid'</span> ) ;</span><br><span class="line">       $t_ldap_mantis_uid = config_get( <span class="string">'ldap_mantis_uid'</span>, <span class="string">'uid'</span> );</span><br><span class="line">       $t_ldap_required = <span class="keyword">array</span>( $t_ldap_uid_field, $t_ldap_mantis_uid, <span class="string">'dn'</span> );</span><br><span class="line">       <span class="keyword">if</span> ($t_ldap_language_field) &#123;</span><br><span class="line">               <span class="comment">// Add language field to attributes list only if it is configured.</span></span><br><span class="line">               $t_ldap_required[] = $t_ldap_language_field;</span><br><span class="line">       &#125;</span><br><span class="line">       $t_ldap_required = array_combine( $t_ldap_required, $t_ldap_required );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># User-defined fields to fetch from LDAP...</span></span><br><span class="line">       $t_ldap_fields = explode( <span class="string">','</span>, config_get( <span class="string">'cas_ldap_update_fields'</span> ) );</span><br><span class="line">       $t_ldap_fields = array_combine( $t_ldap_fields, $t_ldap_fields );</span><br><span class="line">       <span class="comment"># ...which are mapped to Mantis user fields</span></span><br><span class="line">       $t_ldap_map = explode( <span class="string">','</span>, config_get( <span class="string">'cas_ldap_update_map'</span> ) );</span><br><span class="line">       $t_ldap_map = array_combine( $t_ldap_map, $t_ldap_map );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Build LDAP search filter, attribute list from CAS ID</span></span><br><span class="line">       $t_search_filter = <span class="string">"(&amp;$t_ldap_organization($t_ldap_uid_field=$p_cas_id))"</span>;</span><br><span class="line">       $t_search_attrs = array_values($t_ldap_required + $t_ldap_fields);      <span class="comment"># array union</span></span><br><span class="line"></span><br><span class="line">       <span class="comment"># Use Mantis ldap_api to connect to LDAP</span></span><br><span class="line">       $t_ds = ldap_connect_bind();</span><br><span class="line">       $t_sr   = ldap_search( $t_ds, $t_ldap_root_dn, $t_search_filter, $t_search_attrs );</span><br><span class="line">       $t_info = ldap_get_entries( $t_ds, $t_sr );</span><br><span class="line">       <span class="comment"># Parse the LDAP entry to find the Mantis username</span></span><br><span class="line">       <span class="keyword">if</span> ( $t_info ) &#123;</span><br><span class="line">               <span class="comment"># Get Mantis username</span></span><br><span class="line">               $t_username = $t_info[<span class="number">0</span>][$t_ldap_mantis_uid][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">               <span class="comment"># @@@ The fact that we got here means the user is authenticated</span></span><br><span class="line">               <span class="comment"># @@@ by CAS, and has an LDAP entry.</span></span><br><span class="line">               <span class="comment"># @@@ We might as well update other user details since we are here.</span></span><br><span class="line"></span><br><span class="line">               <span class="comment"># If no argument given, check settings</span></span><br><span class="line">               <span class="keyword">if</span> ( <span class="string">''</span> == $p_update_user ) &#123;</span><br><span class="line">                       $p_update_user = config_get( <span class="string">'cas_ldap_update'</span>, <span class="keyword">FALSE</span> );</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment"># If there's a user record, then update it</span></span><br><span class="line">               <span class="keyword">if</span> ( $p_update_user ) &#123;</span><br><span class="line">                       <span class="comment"># Only proceed if the field map arrays are the same length</span></span><br><span class="line">                       $t_field_map = array_combine( $t_ldap_fields, $t_ldap_map );</span><br><span class="line">                       <span class="keyword">if</span> ($t_field_map) &#123;</span><br><span class="line">                               <span class="comment"># If user is new, then we must create their account before updating it</span></span><br><span class="line">                               <span class="comment"># @@@ ( make sure $g_allow_blank_email == ON )</span></span><br><span class="line">                               $t_userid = user_get_id_by_name($t_username);</span><br><span class="line">                               <span class="keyword">if</span> ( <span class="keyword">false</span> == $t_userid ) &#123;</span><br><span class="line">                                       user_create( $t_username, <span class="string">''</span> );</span><br><span class="line">                                       <span class="comment"># @@@ Wow, this is pretty lame</span></span><br><span class="line">                                       $t_userid = user_get_id_by_name($t_username);</span><br><span class="line">                               &#125;</span><br><span class="line">                               <span class="comment"># @@@ maybe we can optimize this to write all fields at once?</span></span><br><span class="line">                             <span class="keyword">foreach</span> ( $t_field_map <span class="keyword">as</span> $key=&gt;$t_userfield ) &#123;</span><br><span class="line">                                     <span class="keyword">if</span> (<span class="keyword">isset</span>($t_info[<span class="number">0</span>][$key][<span class="number">0</span>])) &#123;</span><br><span class="line">                                             user_set_field( $t_userid, $t_userfield, $t_info[<span class="number">0</span>][$key][<span class="number">0</span>] );</span><br><span class="line">                                     &#125;</span><br><span class="line">                             &#125;</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       <span class="comment">// Update user's overall language preference</span></span><br><span class="line">                       <span class="keyword">if</span> ($t_ldap_language_field) &#123;</span><br><span class="line">                               $t_language = $t_info[<span class="number">0</span>][$t_ldap_language_field][<span class="number">0</span>];</span><br><span class="line">                               <span class="comment">// Map the LDAP language field to Mantis' language field if needed</span></span><br><span class="line">                               $t_language_keys = config_get( <span class="string">'ldap_language_keys'</span>, <span class="string">''</span>);</span><br><span class="line">                               $t_language_values = config_get( <span class="string">'ldap_language_values'</span>, <span class="string">''</span>);</span><br><span class="line">                               $t_language_map = array_combine(</span><br><span class="line">                                       explode(<span class="string">','</span>, $t_language_keys),</span><br><span class="line">                                       explode(<span class="string">','</span>, $t_language_values)</span><br><span class="line">                               );</span><br><span class="line">                               <span class="keyword">if</span> (<span class="keyword">isset</span>($t_language_map[$t_language])) &#123;</span><br><span class="line">                                       $t_language = $t_language_map[$t_language];</span><br><span class="line">                               &#125;</span><br><span class="line">                               user_pref_set_pref($t_userid, <span class="string">'language'</span>, $t_language);</span><br><span class="line">                       &#125;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       ldap_free_result( $t_sr );</span><br><span class="line">       ldap_unbind( $t_ds );</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> $t_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Logs out of CAS, redirecting to Mantis on re-login.</span></span><br><span class="line"><span class="comment">* User should already be logged out of Mantis by the time this is called.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> auth_logout()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_logout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       $t_path = config_get(<span class="string">'path'</span>);</span><br><span class="line">       auth_cas_init();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (method_Exists(<span class="string">'phpCAS'</span>, <span class="string">'logoutWithUrl'</span>)) &#123;</span><br><span class="line">               phpCAS::logoutWithUrl($t_path);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               phpCAS::logout($t_path);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// zhanghl end</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改 auth_auto_create_user 函数实现 CAS 自动创建用户</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_auto_create_user</span><span class="params">( $p_username, $p_password )</span> </span>&#123;</span><br><span class="line">$t_login_method = config_get_global( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// if( $t_login_method == BASIC_AUTH ) &#123;</span></span><br><span class="line"><span class="keyword">if</span> ( in_array( $t_login_method, <span class="keyword">array</span>( BASIC_AUTH, CAS ) ) ) &#123;</span><br><span class="line"><span class="comment"># attempt to create the user if using BASIC_AUTH or CAS</span></span><br><span class="line">$t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( $t_login_method == LDAP &amp;&amp; ldap_authenticate_by_username( $p_username, $p_password ) ) &#123;</span><br><span class="line">$t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$t_auto_create = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line"><span class="comment"># Redirect to CAS page to logout</span></span><br><span class="line">auth_cas_logout();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $t_auto_create ) &#123;</span><br><span class="line"><span class="comment"># attempt to create the user</span></span><br><span class="line">$t_cookie_string = user_create( $p_username, md5( $p_password ) );</span><br><span class="line"><span class="keyword">if</span>( $t_cookie_string === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="comment"># it didn't work</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ok, we created the user, get the row again</span></span><br><span class="line"><span class="keyword">return</span> user_get_id_by_name( $p_username );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_clean();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_attempt_login</span><span class="params">( $p_username, $p_password, $p_perm_login = false )</span> </span>&#123;</span><br><span class="line">$t_user_id = auth_get_user_id_from_login_name( $p_username );</span><br><span class="line">$t_login_method = config_get( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $t_user_id === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( in_array( $t_login_method, <span class="keyword">array</span>( BASIC_AUTH, CAS ) ) ) &#123;</span><br><span class="line">            <span class="comment"># attempt to create the user if using BASIC_AUTH or CAS</span></span><br><span class="line">            <span class="comment"># ( note: CAS must have $g_allow_blank_email == ON )</span></span><br><span class="line"> $t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">$t_user_id = auth_auto_create_user( $p_username, $p_password );</span><br><span class="line"><span class="keyword">if</span>( $t_user_id === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># max. failed login attempts achieved...</span></span><br><span class="line"><span class="keyword">if</span>( !user_is_login_request_allowed( $t_user_id ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># check for anonymous login</span></span><br><span class="line"><span class="keyword">if</span>( !user_is_anonymous( $t_user_id ) ) &#123;</span><br><span class="line"><span class="comment"># anonymous login didn't work, so check the password</span></span><br><span class="line"><span class="keyword">if</span>( !auth_does_password_match( $t_user_id, $p_password ) ) &#123;</span><br><span class="line">user_increment_failed_login_count( $t_user_id );</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> auth_login_user( $t_user_id, $p_perm_login );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_logout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $g_cache_current_user_id, $g_cache_cookie_valid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear cached userid</span></span><br><span class="line">user_clear_cache( $g_cache_current_user_id );</span><br><span class="line">current_user_set( <span class="keyword">null</span> );</span><br><span class="line">$g_cache_cookie_valid = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear cookies, if they were set</span></span><br><span class="line"><span class="keyword">if</span>( auth_clear_cookies() ) &#123;</span><br><span class="line">helper_clear_pref_cookies();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( HTTP_AUTH == config_get_global( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">auth_http_set_logout_pending( <span class="keyword">true</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">elseif</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">        <span class="comment"># Redirect to CAS page to logout</span></span><br><span class="line">        auth_cas_logout();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_clean();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_automatic_logon_bypass_form</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>( config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">                <span class="keyword">case</span> HTTP_AUTH:</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">case</span> CAS:</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//return config_get_global( 'login_method' ) == HTTP_AUTH;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_does_password_match</span><span class="params">( $p_user_id, $p_test_password )</span> </span>&#123;</span><br><span class="line">$t_configured_login_method = config_get_global( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( LDAP == $t_configured_login_method ) &#123;</span><br><span class="line"><span class="keyword">return</span> ldap_authenticate( $p_user_id, $p_test_password );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">elseif</span> ( CAS == $t_configured_login_method ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( !auth_can_use_standard_login( $p_user_id ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_password = user_get_field( $p_user_id, <span class="string">'password'</span> );</span><br><span class="line">$t_login_methods = <span class="keyword">array</span>(</span><br><span class="line">MD5,</span><br><span class="line">CRYPT,</span><br><span class="line">PLAIN,</span><br><span class="line">BASIC_AUTH,</span><br><span class="line">CAS,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>( $t_login_methods <span class="keyword">as</span> $t_login_method ) &#123;</span><br><span class="line"><span class="comment"># pass the stored password in as the salt</span></span><br><span class="line"><span class="keyword">if</span>( auth_process_plain_password( $p_test_password, $t_password, $t_login_method ) == $t_password ) &#123;</span><br><span class="line"><span class="comment"># Do not support migration to PLAIN, since this would be a crazy thing to do.</span></span><br><span class="line"><span class="comment"># Also if we do, then a user will be able to login by providing the MD5 value</span></span><br><span class="line"><span class="comment"># that is copied from the database.  See #8467 for more details.</span></span><br><span class="line"><span class="keyword">if</span>( ( $t_configured_login_method != PLAIN &amp;&amp; $t_login_method == PLAIN ) ||</span><br><span class="line">( $t_configured_login_method != BASIC_AUTH &amp;&amp; $t_login_method == BASIC_AUTH ) ) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for migration to another login method and test whether the password was encrypted</span></span><br><span class="line"><span class="comment"># with our previously insecure implementation of the CRYPT method</span></span><br><span class="line"><span class="keyword">if</span>( ( $t_login_method != $t_configured_login_method ) || (( CRYPT == $t_configured_login_method ) &amp;&amp; mb_substr( $t_password, <span class="number">0</span>, <span class="number">2</span> ) == mb_substr( $p_test_password, <span class="number">0</span>, <span class="number">2</span> ) ) ) &#123;</span><br><span class="line">user_set_password( $p_user_id, $p_test_password, <span class="keyword">true</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_reauthenticate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//if( !auth_reauthentication_enabled() || BASIC_AUTH == config_get_global( 'login_method' ) || HTTP_AUTH == config_get_global( 'login_method' ) ) &#123;</span></span><br><span class="line"><span class="keyword">if</span>( !auth_reauthentication_enabled() || in_array(config_get(<span class="string">'login_method'</span>), <span class="keyword">array</span>(BASIC_AUTH, HTTP_AUTH, CAS)) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_auth_token = token_get( TOKEN_AUTHENTICATED );</span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">null</span> != $t_auth_token ) &#123;</span><br><span class="line">token_touch( $t_auth_token[<span class="string">'id'</span>], auth_reauthentication_expiry() );</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$t_anon_account = auth_anonymous_account();</span><br><span class="line">$t_anon_allowed = auth_anonymous_enabled();</span><br><span class="line"></span><br><span class="line">$t_user_id = auth_get_current_user_id();</span><br><span class="line">$t_username = user_get_username( $t_user_id );</span><br><span class="line"></span><br><span class="line"><span class="comment"># check for anonymous login</span></span><br><span class="line"><span class="keyword">if</span>( ON == $t_anon_allowed &amp;&amp; $t_anon_account == $t_username ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_request_uri = string_url( $_SERVER[<span class="string">'REQUEST_URI'</span>] );</span><br><span class="line"></span><br><span class="line">$t_query_params = http_build_query(</span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line"><span class="string">'reauthenticate'</span> =&gt; <span class="number">1</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; $t_username,</span><br><span class="line"><span class="string">'return'</span> =&gt; $t_request_uri,</span><br><span class="line">),</span><br><span class="line"><span class="string">''</span>, <span class="string">'&amp;'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># redirect to login page</span></span><br><span class="line">print_header_redirect( auth_credential_page( $t_query_params ) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新建login-cas-php处理拦截利用CAS认证登录"><a href="#新建login-cas-php处理拦截利用CAS认证登录" class="headerlink" title="新建login_cas.php处理拦截利用CAS认证登录"></a>新建<code>login_cas.php</code>处理拦截利用<code>CAS</code>认证登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  vi /var/www/html/mantis/phpCAS/login_cas.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'CAS.php'</span> );</span><br><span class="line">define(<span class="string">'CAS_ENABLE'</span>, <span class="keyword">true</span>);</span><br><span class="line">$cas_host = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$cas_context = <span class="string">'/cas'</span>;</span><br><span class="line">$cas_port = <span class="number">8080</span>;</span><br><span class="line">$cas_real_hosts = <span class="keyword">array</span> (</span><br><span class="line"><span class="string">'devops.iamzhl.top'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">phpCAS::setDebug();</span><br><span class="line">phpCAS::setVerbose(<span class="keyword">true</span>);</span><br><span class="line">phpCAS::client(CAS_VERSION_2_0, $cas_host, $cas_port, $cas_context);</span><br><span class="line">phpCAS::setNoCasServerValidation();</span><br><span class="line">phpCAS::handleLogoutRequests(<span class="keyword">true</span>, $cas_real_hosts);</span><br><span class="line">phpCAS::forceAuthentication();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/phpCAS/source/CAS/Client.php</span></span><br></pre></td></tr></table></figure><blockquote><p>将如下几个函数中的https改为http即可</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getServerBaseURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// the URL is build only when needed</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>]) ) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_server['base_url'] = 'https://' . $this-&gt;_getServerHostname();</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] = <span class="string">'http://'</span> . <span class="keyword">$this</span>-&gt;_getServerHostname();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_getServerPort()!=<span class="number">443</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="string">':'</span></span><br><span class="line">                .<span class="keyword">$this</span>-&gt;_getServerPort();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="keyword">$this</span>-&gt;_getServerURI();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getCallbackURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// the URL is built when needed only</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_callback_url) ) &#123;</span><br><span class="line">            $final_uri = <span class="string">''</span>;</span><br><span class="line">            <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">            <span class="comment">//$final_uri = 'https://';</span></span><br><span class="line">            $final_uri = <span class="string">'http://'</span>;</span><br><span class="line">            $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">            $request_uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">            $request_uri = preg_replace(<span class="string">'/\?.*$/'</span>, <span class="string">''</span>, $request_uri);</span><br><span class="line">            $final_uri .= $request_uri;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_callback_url = $final_uri;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_callback_url;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public function getURL()</span><br><span class="line">    &#123;</span><br><span class="line">        phpCAS::traceBegin();</span><br><span class="line">        // the URL is built when needed only</span><br><span class="line">        if ( empty($this-&gt;_url) ) &#123;</span><br><span class="line">            $final_uri = &apos;&apos;;</span><br><span class="line">            // remove the ticket if present in the URL</span><br><span class="line">            //$final_uri = ($this-&gt;_isHttps()) ? &apos;https&apos; : &apos;http&apos;;</span><br><span class="line">            $final_uri = ($this-&gt;_isHttps()) ? &apos;http&apos; : &apos;http&apos;;</span><br><span class="line">            $final_uri .= &apos;://&apos;;</span><br><span class="line"></span><br><span class="line">            $final_uri .= $this-&gt;_getClientUrl();</span><br><span class="line">            $request_uri        = explode(&apos;?&apos;, $_SERVER[&apos;REQUEST_URI&apos;], 2);</span><br><span class="line">            $final_uri          .= $request_uri[0];</span><br><span class="line"></span><br><span class="line">            if (isset($request_uri[1]) &amp;&amp; $request_uri[1]) &#123;</span><br><span class="line">                $query_string= $this-&gt;_removeParameterFromQueryString(&apos;ticket&apos;, $request_uri[1]);</span><br><span class="line"></span><br><span class="line">                // If the query string still has anything left,</span><br><span class="line">                // append it to the final URI</span><br><span class="line">                if ($query_string !== &apos;&apos;) &#123;</span><br><span class="line">                    $final_uri  .= &quot;?$query_string&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            phpCAS::trace(&quot;Final URI: $final_uri&quot;);</span><br><span class="line">            $this-&gt;setURL($final_uri);</span><br><span class="line">        &#125;</span><br><span class="line">        phpCAS::traceEnd($this-&gt;_url);</span><br><span class="line">        return $this-&gt;_url;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>log</code>目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/mantis</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/mantis</span></span><br></pre></td></tr></table></figure><p>打开<code>MantisBT</code>网址，正常跳转至<code>CAS</code>登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Fmantis%2Flogin_page.php</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/fa/f707556ce41d95b71052d07834f5d8.jpg" alt></p><p>如图，输入用户名密码后点击登录，正常登陆后跳转至<code>MantisBT</code>主页，并且正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/49/1365298ec15c90fbf95612a38606ed.jpg" alt></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到<code>CAS</code>的登出界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/85/2d25e40bdf97b6f06dad6239cf3167.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      MantisBT 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://blog.cloudops.ml/tags/LDAP/"/>
    
      <category term="MantisBT" scheme="https://blog.cloudops.ml/tags/MantisBT/"/>
    
  </entry>
  
  <entry>
    <title>Gerrit 整合 ldap 和 CAS 单点登录</title>
    <link href="https://blog.cloudops.ml/Gerrit-integrate-with-ldap-and-CAS.html"/>
    <id>https://blog.cloudops.ml/Gerrit-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-03T01:42:41.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Gerrit 版本：2.16</li><li>Gerrit URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgy" title="http://devops.iamzhl.top:82">http://devops.iamzhl.top:82<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改-gerrit-config"><a href="#修改-gerrit-config" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/review_site/etc/gerrit.config</span></span><br></pre></td></tr></table></figure><blockquote><p>请根据自己的<code>LDAP</code>服务器信息进行定制</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[auth]</span><br><span class="line">        type = LDAP</span><br><span class="line">[ldap]</span><br><span class="line">        server = ldap://devops.iamzhl.top:389</span><br><span class="line">        username = cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">        password = passwd</span><br><span class="line">        accountBase = ou=People,dc=iamzhl,dc=top</span><br><span class="line">        groupBase = ou=People,dc=iamzhl,dc=top</span><br><span class="line">        accountFullName = uid</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gerrit restart</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:8081</code>，进入到<code>Gerrit</code>主页面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt></p><p>点击右上角<code>Sign in</code>，进入登录界面，输入<code>LDAP</code>服务器中的用户名和密码，然后点击<code>Sign in</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5e/3a439fb1bcfae0116018eaca7dd987.jpg" alt></p><p>登录成功后跳转到用户主页面，正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/3d/ea561210f011755f97aec7c4a90b59.jpg" alt></p><p>点击用户名 -&gt; Sign Out，正常退出</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt></p><p>至此，<code>Gerrit</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS"><a href="#整合-CAS" class="headerlink" title="整合 CAS"></a>整合 CAS</h2><h3 id="修改-gerrit-config-1"><a href="#修改-gerrit-config-1" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/review_site/etc/gerrit.config</span></span><br></pre></td></tr></table></figure><p>修改<code>[auth]</code>部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[auth]</span><br><span class="line">        type = HTTP</span><br><span class="line">        httpHeader = X-Forwarded-Gerrit</span><br><span class="line">        logoutUrl = http://devops.iamzhl.top:8080/cas/logout</span><br></pre></td></tr></table></figure><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install mod_auth_cas</span></span><br></pre></td></tr></table></figure><p>配置<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf.d/auth_cas.conf</span></span><br></pre></td></tr></table></figure><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LogLevel Debug</span><br><span class="line">CASDebug On</span><br><span class="line">CASVersion 2</span><br><span class="line">CASTimeout 1740</span><br><span class="line">CASIdleTimeout 1740</span><br><span class="line">CASSSOEnabled On</span><br><span class="line">CASCookiePath /var/cache/httpd/mod_auth_cas/</span><br><span class="line">CASLoginURL http://devops.iamzhl.top:8080/cas/login</span><br><span class="line">CASValidateURL http://devops.iamzhl.top:8080/cas/serviceValidate</span><br></pre></td></tr></table></figure><h3 id="修改-apache-配置文件"><a href="#修改-apache-配置文件" class="headerlink" title="修改 apache 配置文件"></a>修改 apache 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><blockquote><p>添加反向代理</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个监听端口 82 用作 Gerrit 的代理主机</span><br><span class="line">Listen 82</span><br><span class="line"></span><br><span class="line"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><br><span class="line">LoadModule auth_cas_module modules/mod_auth_cas.so</span><br><span class="line"></span><br><span class="line"># 设置 Gerrit 的虚拟主机</span><br><span class="line">&lt;VirtualHost *:82&gt;</span><br><span class="line">    ServerName devops.iamzhl.top</span><br><span class="line">    ServerAdmin 15563836030@163.com</span><br><span class="line"></span><br><span class="line">    CASRootProxiedAs http://devops.iamzhl.top:82</span><br><span class="line"></span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    ProxyVia Off</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">    &lt;Proxy *&gt;</span><br><span class="line">          Order deny,allow</span><br><span class="line">          Allow from all</span><br><span class="line">    &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Location &quot;/login/&quot;&gt;</span><br><span class="line">        AuthType CAS</span><br><span class="line">        AuthName &quot;Welcome To Gerrit Code Review&quot;</span><br><span class="line">        Require valid-user</span><br><span class="line">        CASAuthNHeader X-Forwarded-Gerrit</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">    AllowEncodedSlashes On</span><br><span class="line"></span><br><span class="line">    ProxyPass / http://devops.iamzhl.top:8081/</span><br><span class="line">    ProxyPassReverse / http://devops.iamzhl.top:8081</span><br><span class="line"></span><br><span class="line">    ErrorLog /var/log/gerrit/error.log</span><br><span class="line">    CustomLog /var/log/gerrit/access.log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/gerrit</span></span><br><span class="line"><span class="comment"># gerrit restart</span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:82</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2FzL2xvZ2luP3NlcnZpY2U9aHR0cCUzYSUyZiUyZmRldm9wcy5pYW16aGwudG9wJTNhODIlMmY=" title="http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f">http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f<i class="fa fa-external-link"></i></span></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/dc/a298cbb27df3f031b6a75d41b8ae3b.jpg" alt></p><p>输入用户名密码后，点击登录，登陆成功，地址是<code>http://devops.iamzhl.top:82//#/dashboard/self</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/6b/7e1c3e774f6d188f2a2a7203776be1.jpg" alt></p><p>点击用户名 -&gt; Sign Out，就会登出</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/a2/726b245663641d5b6aaf1eef3e17bf.jpg" alt></p><p>登出界面如下，地址是<code>http://devops.iamzhl.top:8080/cas/logout</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt></p><p>至此，<code>Gerrit</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Gerrit 整合 ldap 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
      <category term="Gerrit" scheme="https://blog.cloudops.ml/tags/Gerrit/"/>
    
      <category term="ldap" scheme="https://blog.cloudops.ml/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://blog.cloudops.ml/SonarQube-integrate-with-ldap-and-CAS.html"/>
    <id>https://blog.cloudops.ml/SonarQube-integrate-with-ldap-and-CAS.html</id>
    <published>2018-11-30T05:23:17.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li><code>SonarQube</code>版本：7.4</li><li><code>SonarQube</code> URL: <span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjkwMDA=" title="http://devops.iamzhl.top:9000">http://devops.iamzhl.top:9000<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合LDAP"><a href="#整合LDAP" class="headerlink" title="整合LDAP"></a>整合<code>LDAP</code></h2><p>修改<code>sonar</code>配置文件<code>sonar.properties</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/<span class="built_in">local</span>/sonarqube-7.4/conf/sonar.properties</span><br></pre></td></tr></table></figure><p>找到下面的部分修改<code>LDAP</code>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># LDAP CONFIGURATION</span><br><span class="line"></span><br><span class="line"># Enable the LDAP feature</span><br><span class="line"># sonar.security.realm=LDAP</span><br><span class="line"></span><br><span class="line"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><br><span class="line"># sonar.authenticator.downcase=true</span><br><span class="line"></span><br><span class="line"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><br><span class="line"># ldap.url=ldap://localhost:10389</span><br><span class="line"></span><br><span class="line"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line"># ldap.bindDn=cn=sonar,ou=users,o=mycompany</span><br><span class="line"></span><br><span class="line"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line"># ldap.bindPassword=secret</span><br><span class="line"></span><br><span class="line"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><br><span class="line"># ldap.authentication=simple</span><br></pre></td></tr></table></figure><p>修改如下(请将具体信息按照自己的<code>LDAP</code>服务器信息进行修改):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># LDAP CONFIGURATION</span><br><span class="line"></span><br><span class="line"># Enable the LDAP feature</span><br><span class="line">sonar.security.realm=LDAP</span><br><span class="line"></span><br><span class="line"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><br><span class="line"># sonar.authenticator.downcase=true</span><br><span class="line"></span><br><span class="line"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><br><span class="line">ldap.url=ldap://devops.iamzhl.top:389</span><br><span class="line"></span><br><span class="line"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line">ldap.bindDn=cn=Manager,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line">ldap.bindPassword=passwd</span><br><span class="line"></span><br><span class="line"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><br><span class="line">ldap.authentication=simple</span><br><span class="line"></span><br><span class="line"># See :</span><br><span class="line">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/digest.html</span><br><span class="line">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/crammd5.html</span><br><span class="line"># (optional)</span><br><span class="line"># ldap.realm=example.org</span><br><span class="line"></span><br><span class="line"># Context factory class (optional)</span><br><span class="line"># ldap.contextFactoryClass=com.sun.jndi.ldap.LdapCtxFactory</span><br><span class="line"></span><br><span class="line"># Enable usage of StartTLS (default : false)</span><br><span class="line"># ldap.StartTLS=true</span><br><span class="line"></span><br><span class="line"># Follow or not referrals. See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html (default: true)</span><br><span class="line"># ldap.followReferrals=false</span><br><span class="line"></span><br><span class="line"># USER MAPPING</span><br><span class="line"></span><br><span class="line"># Distinguished Name (DN) of the root node in LDAP from which to search for users (mandatory)</span><br><span class="line">ldap.user.baseDn=ou=People,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># LDAP user request. (default: (&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;)) )</span><br><span class="line"># ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br><span class="line">ldap.user.request=(&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;))</span><br><span class="line"></span><br><span class="line"># Attribute in LDAP defining the user’s real name. (default: cn)</span><br><span class="line"># ldap.user.realNameAttribute=name</span><br><span class="line">ldap.user.realNameAttribute=cn</span><br><span class="line"></span><br><span class="line"># Attribute in LDAP defining the user’s email. (default: mail)</span><br><span class="line"># ldap.user.emailAttribute=email</span><br><span class="line">ldap.user.emailAttribute=mail</span><br><span class="line"></span><br><span class="line"># GROUP MAPPING</span><br><span class="line"></span><br><span class="line"># Distinguished Name (DN) of the root node in LDAP from which to search for groups. (optional, default: empty)</span><br><span class="line"># ldap.group.baseDn=cn=groups,dc=example,dc=org</span><br><span class="line">ldap.group.baseDn=ou=People,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># LDAP group request (default: (&amp;(objectClass=groupOfUniqueNames)(uniqueMember=&#123;dn&#125;)) )</span><br><span class="line"># ldap.group.request=(&amp;(objectClass=group)(member=&#123;dn&#125;))</span><br><span class="line">ldap.group.request=(&amp;(objectClass=posixGroup)(memberUid=&#123;uid&#125;))</span><br><span class="line"></span><br><span class="line"># Property used to specifiy the attribute to be used for returning the list of user groups in the compatibility mode. (default: cn)</span><br><span class="line"># ldap.group.idAttribute=sAMAccountName</span><br></pre></td></tr></table></figure><p>修改完成后，重启<code>sonar</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sonar restart</span><br></pre></td></tr></table></figure><p>打开<code>sonar</code>网址，输入<code>LDAP</code>中的用户名和密码后点击登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/89/7728c5a52a96a6841a426155062a56.jpg" alt></p><p>登陆成功后，正常获取用户名</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/dd/53d39dc0858679e2a4949419417678.jpg" alt></p><p>至此，<code>SonarQube</code>整合<code>LDAP</code>完成</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><code>SonarQube</code>提供了一种<code>SSO</code>机制，可以用来作为单点登录的实现方式，就是使用<code>HTTP header</code>的方式，而<code>CAS</code>也提供了一种用于<code>apache</code>服务的认证方式，这就是<code>mod_auth_cas</code>，思路很简单，我们利用<code>apache</code>反向代理，做一个端口用于虚拟主机来转发<code>SonarQube</code>服务，然后在这个虚拟主机内部加入<code>mod_auth_cas</code>提供的认证拦截，同时在里面指定一个<code>HTTP header</code>用于发送认证后的请求到<code>SonarQube</code>，然后，<code>SonarQube</code>接收到这个请求后，发现正是自己设定的<code>HTTP header</code>，于是予以通过认证。这就是整个认证流程，下面开始介绍整合方法。</p><h3 id="SonarQube修改"><a href="#SonarQube修改" class="headerlink" title="SonarQube修改"></a><code>SonarQube</code>修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/<span class="built_in">local</span>/sonarqube-7.4/conf/sonar.properties</span><br></pre></td></tr></table></figure><p>修改如下部分(就是将<code>SSO AUTHENTICATION</code>部分的参数取消注释，令其生效)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># SSO AUTHENTICATION</span><br><span class="line"></span><br><span class="line"># Enable authentication using HTTP headers</span><br><span class="line">sonar.web.sso.enable=true</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user login.</span><br><span class="line"># Only alphanumeric, &apos;.&apos; and &apos;@&apos; characters are allowed</span><br><span class="line">sonar.web.sso.loginHeader=X-Forwarded-Login</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user name</span><br><span class="line">sonar.web.sso.nameHeader=X-Forwarded-Name</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user email (optional)</span><br><span class="line">sonar.web.sso.emailHeader=X-Forwarded-Email</span><br><span class="line"></span><br><span class="line"># Name of the header to get the list of user groups, separated by comma (optional).</span><br><span class="line"># If the sonar.sso.groupsHeader is set, the user will belong to those groups if groups exist in SonarQube.</span><br><span class="line"># If none of the provided groups exists in SonarQube, the user will only belong to the default group.</span><br><span class="line"># Note that the default group will always be set.</span><br><span class="line">sonar.web.sso.groupsHeader=X-Forwarded-Groups</span><br><span class="line"></span><br><span class="line"># Interval used to know when to refresh name, email and groups.</span><br><span class="line"># During this interval, if for instance the name of the user is changed in the header, it will only be updated after X minutes.</span><br><span class="line">sonar.web.sso.refreshIntervalInMinutes=5</span><br></pre></td></tr></table></figure><p>修改<code>app.d5dba530.chunk.js</code>，解决登出问题，不同的版本不同，<code>7.2.1</code>的在<code>main</code>开头的一个<code>js</code>文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/sonarqube-7.4/web/js/app.d5dba530.chunk.js</span></span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t.handleLogout = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="comment">// e.preventDefault(), t.context.router.push("/sessions/logout") </span></span><br><span class="line">t.context.router.push(<span class="string">"/sessions/logout"</span>)  <span class="comment">//去掉e.preventDefault()方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r.createElement(<span class="string">"li"</span>, <span class="literal">null</span>, r.createElement(<span class="string">"a"</span>, &#123;</span><br><span class="line"><span class="comment">//href: "#",</span></span><br><span class="line">href: <span class="string">"http://192.168.6.99:8080/cas/logout"</span>,  <span class="comment">//将此注销按钮的href改为CAS服务器的登出页面</span></span><br><span class="line">onClick: <span class="keyword">this</span>.handleLogout</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install mod_auth_cas</span></span><br></pre></td></tr></table></figure><p>配置<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf.d/auth_cas.conf</span></span><br></pre></td></tr></table></figure><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LogLevel Debug</span><br><span class="line">CASDebug On</span><br><span class="line">CASVersion 2</span><br><span class="line">CASTimeout 1740</span><br><span class="line">CASIdleTimeout 1740</span><br><span class="line">CASSSOEnabled On</span><br><span class="line">CASCookiePath /var/cache/httpd/mod_auth_cas/</span><br><span class="line">CASLoginURL http://devops.iamzhl.top:8080/cas/login</span><br><span class="line">CASValidateURL http://devops.iamzhl.top:8080/cas/serviceValidate</span><br></pre></td></tr></table></figure><h3 id="apache修改"><a href="#apache修改" class="headerlink" title="apache修改"></a><code>apache</code>修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><p>添加虚拟主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个监听端口 83 用作 SonarQube 的代理主机</span><br><span class="line">Listen 83</span><br><span class="line"></span><br><span class="line"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><br><span class="line">LoadModule auth_cas_module modules/mod_auth_cas.so</span><br><span class="line"></span><br><span class="line"># 设置 SonarQube 的虚拟主机</span><br><span class="line">&lt;VirtualHost *:83&gt;</span><br><span class="line">        ServerName devops.iamzhl.top</span><br><span class="line">        ServerAdmin 15563836030@163.com</span><br><span class="line"></span><br><span class="line">        CASRootProxiedAs http://devops.iamzhl.top:83</span><br><span class="line"></span><br><span class="line">        ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">        ProxyPass / http://devops.iamzhl.top:9000/</span><br><span class="line">        ProxyPassReverse / http://devops.iamzhl.top:9000/</span><br><span class="line">        ProxyPass /sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPassReverse /sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPass /api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPassReverse /api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line"></span><br><span class="line">        ErrorLog /var/log/sonar/error.log</span><br><span class="line">        CustomLog /var/log/sonar/access.log common</span><br><span class="line"></span><br><span class="line">        &lt;Location /&gt;</span><br><span class="line">                AuthName &quot;Welcome to devops sonar&quot;</span><br><span class="line">                CASAuthNHeader X-Forwarded-Login</span><br><span class="line">                Authtype CAS</span><br><span class="line">                require valid-user</span><br><span class="line">        &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Proxy *&gt;</span><br><span class="line">                Order deny,allow</span><br><span class="line">                Allow from all</span><br><span class="line">        &lt;/Proxy&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/sonar</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/sonar</span></span><br><span class="line"><span class="comment"># su sonar</span></span><br><span class="line">$ sonar restart</span><br><span class="line"><span class="comment"># su </span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:83</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a83%2f</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0b/b05aa63a31ffc624e42290d71c68e8.jpg" alt></p><p>输入用户名密码后点击登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6d/548f70b5aba6e4399e06ae288adfa9.jpg" alt></p><p>如图所示，登陆成功，地址是<code>http://devops.iamzhl.top:83/projects</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e1/463c767ddd0147ed54fba65d91a0f7.jpg" alt></p><p>如上图所示，点击注销，就会登出并跳转至<code>CAS</code>的登出界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt></p><p>至此，<code>SonarQube</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      SonarQube 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://blog.cloudops.ml/tags/LDAP/"/>
    
      <category term="SonarQube" scheme="https://blog.cloudops.ml/tags/SonarQube/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins 整合 LDAP 以及 CAS 单点登录</title>
    <link href="https://blog.cloudops.ml/Jenkins-integrate-with-ldap-and-CAS.html"/>
    <id>https://blog.cloudops.ml/Jenkins-integrate-with-ldap-and-CAS.html</id>
    <published>2018-11-30T02:17:09.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Jenkins 版本：2.138.3</li><li>Jenkins 安装方式： Tomcat 容器部署 war 包</li><li>Jenkins 地址：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvamVua2lucw==" title="http://devops.iamzhl.top:8080/jenkins">http://devops.iamzhl.top:8080/jenkins<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><p>首先去 Jenkins 插件官网下载 LDAP 和 CAS 插件</p><ul><li>LDAP：<span class="exturl" data-url="aHR0cHM6Ly91cGRhdGVzLmplbmtpbnMuaW8vZG93bmxvYWQvcGx1Z2lucy9sZGFwLw==" title="https://updates.jenkins.io/download/plugins/ldap/">https://updates.jenkins.io/download/plugins/ldap/<i class="fa fa-external-link"></i></span></li><li>CAS：<span class="exturl" data-url="aHR0cHM6Ly91cGRhdGVzLmplbmtpbnMuaW8vZG93bmxvYWQvcGx1Z2lucy9jYXMtcGx1Z2luLw==" title="https://updates.jenkins.io/download/plugins/cas-plugin/">https://updates.jenkins.io/download/plugins/cas-plugin/<i class="fa fa-external-link"></i></span></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/46/53fb1f3e3cfa00c055965bc99c7fbd.jpg" alt></p><p>如图，点击<code>系统管理</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/86/4f0c2ebaef58a3c719397b0adfbc5b.jpg" alt></p><p>点击插件管理 -&gt; 高级 -&gt; 上传插件(选择文件)</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/65/bfd2b91d856ca8132434b2da51de6e.jpg" alt></p><p>弹出选择文件的对话框后，首先选择我们下载好的 LDAP 插件，然后点击上传，然后就会跳转到安装界面，我们勾选<code>安装完成后重启Jenkins(空闲时)</code>，等待一会Jenkins安装插件完成后就会重启</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c5/7cf7ef11ecd49b19b07ea7333cc26a.jpg" alt></p><p>输入用户名密码登录后，依次打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选 LDAP，点击<code>Advanced Server Configuration</code>,开始配置 LDAP 服务器的绑定信息</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/12/adf30303385802ce2fc45d175a7d16.jpg" alt></p><p>点击<code>Test LDAP settings</code>，测试<code>LDAP</code>配置是否可用，如下图，输入一个<code>LDAP</code>服务器中存在的用户账号和密码，点击<code>Test</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/93/bca0bd8c0ac21d1b2c4cffd7cea3bc.jpg" alt></p><p>如果测试成功，会打印出类似如下的信息</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f5/7453c8051a55d9622dbe1e461d1b25.jpg" alt></p><p>点击<code>应用</code>，然后点击<code>保存</code>。</p><p>测试一下，用<code>LDAP</code>中的用户进行登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1e/46a5ac15c7611eff4ade4830966565.jpg" alt></p><p>登陆成功，配置完成，到这里，<code>Jenkins</code>整合<code>LDAP</code>认证就完成了。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><p>首先安装<code>CAS</code>插件，和上面安装<code>LDAP</code>插件步骤一样，安装完<code>CAS</code>打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选<code>CAS (Central Authentication Service)</code>，如图所示，配置好<code>CAS</code>的<code>URL</code>和<code>CAS 协议</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b7/99ca653df5281634fed8a6dcc4f3c2.jpg" alt></p><p>然后点击<code>应用</code>-&gt;<code>保存</code>，注销，然后重新登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ce/bf7939fceebf45806037fd759179f4.jpg" alt></p><p>这时就可以跳转到<code>CAS</code>的登录界面了，输入用户名密码点击登录，就可以正常的登录进入<code>Jenkins</code>系统了。</p><p>至此，<code>Jenkins</code>整合<code>CAS</code>完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Jenkins 整合 LDAP 以及 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
      <category term="Jenkins" scheme="https://blog.cloudops.ml/tags/Jenkins/"/>
    
      <category term="LDAP" scheme="https://blog.cloudops.ml/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks-libev</title>
    <link href="https://blog.cloudops.ml/shadowsocks-libev.html"/>
    <id>https://blog.cloudops.ml/shadowsocks-libev.html</id>
    <published>2018-11-25T09:39:40.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>国外服务器一台</li><li>CentOS 操作系统</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install pcre pcre-devel git wget gcc gcc-c++</span></span><br><span class="line"><span class="comment"># cd ~ &amp;&amp; git clone https://github.com/shadowsocks/shadowsocks-libev.git</span></span><br><span class="line"><span class="comment"># cd shadowsocks-libev &amp;&amp; git submodule update --init --recursive</span></span><br><span class="line"><span class="comment"># yum install gettext gcc autoconf libtool automake make asciidoc xmlto c-ares-devel libev-devel</span></span><br><span class="line"><span class="comment"># echo "LIBSODIUM_VER=1.0.13" &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf LATEST.tar.gz</span></span><br><span class="line"><span class="comment"># pushd libsodium-stable</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># popd</span></span><br><span class="line"><span class="comment"># ldconfig</span></span><br><span class="line"><span class="comment"># echo "export MBEDTLS_VER=2.6.0" &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># cd ~ &amp;&amp; wget wget https://tls.mbed.org/download/mbedtls-2.14.0-apache.tgz</span></span><br><span class="line"><span class="comment"># tar xvf mbedtls-2.14.0-apache.tgz</span></span><br><span class="line"><span class="comment"># pushd mbedtls-2.14.0</span></span><br><span class="line"><span class="comment"># make SHARED=1 CFLAGS=-fPIC</span></span><br><span class="line"><span class="comment"># make DESTDIR=/usr install</span></span><br><span class="line"><span class="comment"># popd</span></span><br><span class="line"><span class="comment"># ldconfig</span></span><br><span class="line"><span class="comment"># cd shadowsocks-libev &amp;&amp; ./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># cd /usr/local &amp;&amp;  wget  https://nchc.dl.sourceforge.net/project/pcre/pcre/8.41/pcre-8.41.tar.gz</span></span><br><span class="line"><span class="comment"># tar -zxvf  pcre-8.41.tar.gz</span></span><br><span class="line"><span class="comment"># cd pcre-8.41 &amp;&amp; ./configure &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># cd /usr/local &amp;&amp; mkdir ssr &amp;&amp; cd ssr</span></span><br><span class="line"><span class="comment"># vi conf.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">"server"</span>:<span class="string">"your server ip"</span>,</span><br><span class="line">        <span class="attr">"server_port"</span>:<span class="number">7788</span>,</span><br><span class="line">        <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">        <span class="attr">"password"</span>:<span class="string">"your password for ssr"</span>,</span><br><span class="line">        <span class="attr">"timeout"</span>:<span class="number">60</span>,</span><br><span class="line">        <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ss-server -c /usr/local/ssr/conf.conf //运行</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d4/6463c41c237e134ade8219c099db8e.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/bin &amp;&amp; vi ssr //利用脚本后台运行</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">nohup ss-server -c /usr/local/ssr/conf.conf &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x /usr/local/bin/ssr</span></span><br><span class="line"><span class="comment"># ssr</span></span><br><span class="line"><span class="comment"># ps ax | grep ssr</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a4/ef69a4b5a7ca6de17e5744064ba11d.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      shadowsocks-libev
    
    </summary>
    
      <category term="study" scheme="https://blog.cloudops.ml/categories/study/"/>
    
    
      <category term="shadowsocks" scheme="https://blog.cloudops.ml/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装部署 openLDAP</title>
    <link href="https://blog.cloudops.ml/CentOS-install-openLDAP.html"/>
    <id>https://blog.cloudops.ml/CentOS-install-openLDAP.html</id>
    <published>2018-11-24T14:17:41.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>OpenLDAP 是轻型目录访问协议<code>Lightweight Directory Access Protocol</code> - <code>LDAP</code>的自由和开源的实现，在其<code>OpenLDAP</code>许可证下发行，并已经被包含在众多流行的<code>Linux</code>发行版中。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># yum -y install openldap-servers openldap-clients</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1c/02ad1e703c7187295361dbff3fad9c.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span></span><br><span class="line"><span class="comment"># chown ldap:ldap /var/lib/ldap/DB_CONFIG</span></span><br><span class="line"><span class="comment"># systemctl start slapd</span></span><br><span class="line"><span class="comment"># systemctl enable slapd</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/75/c5c970bd59e02ac7434f217a5f27a6.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi chrootpw.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># specify the password generated above for &quot;olcRootPW&quot; section</span><br><span class="line">dn: olcDatabase=&#123;0&#125;config,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;xxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif</span></span><br></pre></td></tr></table></figure><h2 id="导入基本模式"><a href="#导入基本模式" class="headerlink" title="导入基本模式"></a>导入基本模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif </span></span><br><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif </span></span><br><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif</span></span><br></pre></td></tr></table></figure><h2 id="在ldap的DB中设置域名"><a href="#在ldap的DB中设置域名" class="headerlink" title="在ldap的DB中设置域名"></a>在ldap的DB中设置域名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/de/9a4502a39d572493b8ae8d723a08ef.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi chdomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line"># specify the password generated above for &quot;olcRootPW&quot; section</span><br><span class="line">dn: olcDatabase=&#123;1&#125;monitor,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to * by dn.base=&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;</span><br><span class="line">  read by dn.base=&quot;cn=Manager,dc=iamzhl,dc=top&quot; read by * none</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcSuffix</span><br><span class="line">olcSuffix: dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcRootDN</span><br><span class="line">olcRootDN: cn=Manager,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;xxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by</span><br><span class="line">  dn=&quot;cn=Manager,dc=iamzhl,dc=top&quot; write by anonymous auth by self write by * none</span><br><span class="line">olcAccess: &#123;1&#125;to dn.base=&quot;&quot; by * read</span><br><span class="line">olcAccess: &#123;2&#125;to * by dn=&quot;cn=Manager,dc=iamzhl,dc=top&quot; write by * read</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi basedomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line">dn: dc=iamzhl,dc=top</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: dcObject</span><br><span class="line">objectclass: organization</span><br><span class="line">o: iamzhl</span><br><span class="line">dc: iamzhl</span><br><span class="line"></span><br><span class="line">dn: cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalRole</span><br><span class="line">cn: Manager</span><br><span class="line">description: Directory Manager</span><br><span class="line"></span><br><span class="line">dn: ou=People,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: People</span><br><span class="line"></span><br><span class="line">dn: ou=Group,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: Group</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f basedomain.ldif</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d1/46842e7f601199c0f78da4d97d30ad.jpg" alt></p><h2 id="添加一个用户"><a href="#添加一个用户" class="headerlink" title="添加一个用户"></a>添加一个用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd </span></span><br><span class="line"><span class="comment"># vi ldapuser.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># create new</span><br><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line">dn: uid=cent,ou=People,dc=iamzhl,dc=top</span><br><span class="line">objectClass: inetOrgPerson</span><br><span class="line">objectClass: posixAccount</span><br><span class="line">objectClass: shadowAccount</span><br><span class="line">cn: Cent</span><br><span class="line">sn: Linux</span><br><span class="line">userPassword: &#123;SSHA&#125;xxxxxxxxxxxxxxxxx</span><br><span class="line">loginShell: /bin/bash</span><br><span class="line">uidNumber: 1000</span><br><span class="line">gidNumber: 1000</span><br><span class="line">homeDirectory: /home/cent</span><br><span class="line"></span><br><span class="line">dn: cn=cent,ou=Group,dc=iamzhl,dc=top</span><br><span class="line">objectClass: posixGroup</span><br><span class="line">cn: Cent</span><br><span class="line">gidNumber: 1000</span><br><span class="line">memberUid: cent</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif</span></span><br></pre></td></tr></table></figure><h2 id="添加本机的用户和群组到ldap目录"><a href="#添加本机的用户和群组到ldap目录" class="headerlink" title="添加本机的用户和群组到ldap目录"></a>添加本机的用户和群组到ldap目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi ldapuser.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> extract <span class="built_in">local</span> users and groups who have 1000-9999 digit UID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> replace <span class="string">"SUFFIX=***"</span> to your own domain name</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> this is an example</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SUFFIX='dc=iamzhl,dc=top'</span><br><span class="line">LDIF='ldapuser.ldif'</span><br><span class="line"></span><br><span class="line">echo -n &gt; $LDIF</span><br><span class="line">GROUP_IDS=()</span><br><span class="line">grep "x:[1-9][0-9][0-9][0-9]:" /etc/passwd | (while read TARGET_USER</span><br><span class="line">do</span><br><span class="line">    USER_ID="$(echo "$TARGET_USER" | cut -d':' -f1)"</span><br><span class="line"></span><br><span class="line">    USER_NAME="$(echo "$TARGET_USER" | cut -d':' -f5 | cut -d' ' -f1,2)"</span><br><span class="line">    [ ! "$USER_NAME" ] &amp;&amp; USER_NAME="$USER_ID"</span><br><span class="line"></span><br><span class="line">    LDAP_SN="$(echo "$USER_NAME" | cut -d' ' -f2)"</span><br><span class="line">    [ ! "$LDAP_SN" ] &amp;&amp; LDAP_SN="$USER_NAME"</span><br><span class="line"></span><br><span class="line">    LASTCHANGE_FLAG="$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f3)"</span><br><span class="line">    [ ! "$LASTCHANGE_FLAG" ] &amp;&amp; LASTCHANGE_FLAG="0"</span><br><span class="line"></span><br><span class="line">    SHADOW_FLAG="$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f9)"</span><br><span class="line">    [ ! "$SHADOW_FLAG" ] &amp;&amp; SHADOW_FLAG="0"</span><br><span class="line"></span><br><span class="line">    GROUP_ID="$(echo "$TARGET_USER" | cut -d':' -f4)"</span><br><span class="line">    [ ! "$(echo "$&#123;GROUP_IDS[@]&#125;" | grep "$GROUP_ID")" ] &amp;&amp; GROUP_IDS=("$&#123;GROUP_IDS[@]&#125;" "$GROUP_ID")</span><br><span class="line"></span><br><span class="line">    echo "dn: uid=$USER_ID,ou=People,$SUFFIX" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: inetOrgPerson" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: posixAccount" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: shadowAccount" &gt;&gt; $LDIF</span><br><span class="line">    echo "sn: $LDAP_SN" &gt;&gt; $LDIF</span><br><span class="line">    echo "givenName: $(echo "$USER_NAME" | awk '&#123;print $1&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "cn: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "displayName: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "uidNumber: $(echo "$TARGET_USER" | cut -d':' -f3)" &gt;&gt; $LDIF</span><br><span class="line">    echo "gidNumber: $(echo "$TARGET_USER" | cut -d':' -f4)" &gt;&gt; $LDIF</span><br><span class="line">    echo "userPassword: &#123;crypt&#125;$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f2)" &gt;&gt; $LDIF</span><br><span class="line">    echo "gecos: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "loginShell: $(echo "$TARGET_USER" | cut -d':' -f7)" &gt;&gt; $LDIF</span><br><span class="line">    echo "homeDirectory: $(echo "$TARGET_USER" | cut -d':' -f6)" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowExpire: $(passwd -S "$USER_ID" | awk '&#123;print $7&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowFlag: $SHADOW_FLAG" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowWarning: $(passwd -S "$USER_ID" | awk '&#123;print $6&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowMin: $(passwd -S "$USER_ID" | awk '&#123;print $4&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowMax: $(passwd -S "$USER_ID" | awk '&#123;print $5&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowLastChange: $LASTCHANGE_FLAG" &gt;&gt; $LDIF</span><br><span class="line">    echo &gt;&gt; $LDIF</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for TARGET_GROUP_ID in "$&#123;GROUP_IDS[@]&#125;"</span><br><span class="line">do</span><br><span class="line">    LDAP_CN="$(grep ":$&#123;TARGET_GROUP_ID&#125;:" /etc/group | cut -d':' -f1)"</span><br><span class="line"></span><br><span class="line">    echo "dn: cn=$LDAP_CN,ou=Group,$SUFFIX" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: posixGroup" &gt;&gt; $LDIF</span><br><span class="line">    echo "cn: $LDAP_CN" &gt;&gt; $LDIF</span><br><span class="line">    echo "gidNumber: $TARGET_GROUP_ID" &gt;&gt; $LDIF</span><br><span class="line"></span><br><span class="line">    for MEMBER_UID in $(grep ":$&#123;TARGET_GROUP_ID&#125;:" /etc/passwd | cut -d':' -f1,3)</span><br><span class="line">    do</span><br><span class="line">        UID_NUM=$(echo "$MEMBER_UID" | cut -d':' -f2)</span><br><span class="line">        [ $UID_NUM -ge 1000 -a $UID_NUM -le 9999 ] &amp;&amp; echo "memberUid: $(echo "$MEMBER_UID" | cut -d':' -f1)" &gt;&gt; $LDIF</span><br><span class="line">    done</span><br><span class="line">    echo &gt;&gt; $LDIF</span><br><span class="line">done</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sh ldapuser.sh </span></span><br><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d5/aaa70f4f22ad6ee40fa74bf027bd4b.jpg" alt></p><h2 id="利用Apache-Directory-Studio进行管理"><a href="#利用Apache-Directory-Studio进行管理" class="headerlink" title="利用Apache Directory Studio进行管理"></a>利用Apache Directory Studio进行管理</h2><p>Apache Directory Studio 是一个 LDAP 的工具平台，用来连接到任何 LDAP 服务器并进行管理和开发工作。其可以实现以下功能：</p><ul><li>LDAP浏览器</li><li>LDIF编辑器</li><li>嵌入式 ApacheDS</li><li>ACI编辑器</li><li>属性管理</li></ul><p>下面以新建连接和新增用户为例进行演示</p><p>如图，点击 New Connection 新建一个 ldap 连接</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/12/d782ef026127039c48173727402ae1.jpg" alt></p><p>依次输入连接名、主机名以及端口号后点击<code>Next</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b4/8238cc5d14bd32906fb1bf4d2fb726.jpg" alt></p><p>再依次输入绑定的<code>DN</code>和密码后点击<code>Finish</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6d/33932a9dccd444922051239295a40e.jpg" alt></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/70/749184f3907b06951093fc2a944e42.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt></p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>本文多处参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlbndlbnhpb25nL2FydGljbGUvZGV0YWlscy83Njg1NTA0Nw==" title="https://blog.csdn.net/wenwenxiong/article/details/76855047">centos7下ldap服务搭建<i class="fa fa-external-link"></i></span>，感谢<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlbndlbnhpb25n" title="https://blog.csdn.net/wenwenxiong">wenwenxiong<i class="fa fa-external-link"></i></span>的分享。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS安装部署 openLDAP
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="openLDAP" scheme="https://blog.cloudops.ml/tags/openLDAP/"/>
    
  </entry>
  
  <entry>
    <title>CAS 5.3.4 安装部署</title>
    <link href="https://blog.cloudops.ml/CAS-5-3-4-install-and-deploy.html"/>
    <id>https://blog.cloudops.ml/CAS-5-3-4-install-and-deploy.html</id>
    <published>2018-11-24T12:59:49.000Z</published>
    <updated>2019-08-11T14:11:07.323Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:31 GMT+0800 (中国标准时间) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CAS</code>全称<code>Central Authentication Service</code>，中央认证服务，一种独立开放指令协议。CAS 是 Yale 大学发起的一个开源项目，旨在为 Web 应用系统提供一种可靠的单点登录方法，CAS 在 2004 年 12 月正式成为 JA-SIG 的一个项目，目前是一种企业级的单点登录解决方案。</p><h2 id="协议介绍"><a href="#协议介绍" class="headerlink" title="协议介绍"></a>协议介绍</h2><p>关于 oauth2.0 的原理及介绍可以参考<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTQvMDUvb2F1dGhfMl8wLmh0bWw=" title="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html">理解OAuth 2.0 - 阮一峰的网络日志<i class="fa fa-external-link"></i></span>，这里不做赘述。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p><code>CAS</code>是基于Spring写的，因此需要准备Java环境，官方提供了一种非常好用的编译方法，我们在使用时可以根据自己的需求来决定依赖的选择，本文主要以openLDAP和oauth为例。编译时需要maven环境。运行时需要 Tomcat 容器，因此需要提前准备好 Tomcat 环境。后续我们会整合 openLDAP 做统一用户管理，因此请先安装好 openLDAP。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>首先去项目地址下载编译模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/apereo/cas-overlay-template</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/apereo/cas-overlay-template</span></span><br><span class="line"><span class="comment"># cd cas-overlay-template</span></span><br><span class="line"><span class="comment"># vi pom.xml</span></span><br></pre></td></tr></table></figure><p>找到下面的部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-webapp$&#123;app.server&#125;&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;type&gt;war&lt;/type&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    ...Additional dependencies may be placed here...</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>将注释的部分替换为我们需要的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-webapp$&#123;app.server&#125;&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;type&gt;war&lt;/type&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-oauth-webflow&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;mysql.driver.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jdbc-drivers&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-rest&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-ldap&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jpa-ticket-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jpa-service-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-rest-services&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-json-service-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>上面例子中我添加了openLDAP oauth2.0 mysql的依赖，具体请按照自己需求选择。</p><blockquote><p>添加 MySQL 需要指定 connector-java 连接器的版本</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mysql.driver.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql.driver.version</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编辑好pom文件后，执行下面的命令开始编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mvn clean package</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/42/20e1a20a856b8d98083544240e949b.jpg" alt></p><p>过程很长，需要联网。如上图所示，编译完成后，会在此目录下生成一个 target 目录，我们需要的 war 包就在里面。</p><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>安装过程就比较简单了，将 war 包保存至 Tomcat 下 webapps 目录下，然后运行 Tomcat 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># startup.sh</span></span><br><span class="line"><span class="comment"># tail -f /usr/local/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b7/bfb043dc833a972751ad396ccc63c5.jpg" alt></p><p>运行完成后日志如上图所示，然后我们打开 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MDgwL2Nhcw==" title="http://localhost:8080/cas">http://localhost:8080/cas<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/91/6097314bc496dd2404ecc7ccac8a28.jpg" alt></p><p>默认的用户名密码为 casuser / Mellon，输入用户名密码点击登录，登录成功后如图跳转至登录成功页面</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/41/4c9e1c4a3a9632ffd3475df7798005.jpg" alt></p><p>安装至此完成</p><h2 id="开启-oauth-2-0-授权"><a href="#开启-oauth-2-0-授权" class="headerlink" title="开启 oauth 2.0 授权"></a>开启 oauth 2.0 授权</h2><blockquote><p>application.properties 增加配置文件如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cas.authn.oauth.refreshToken.timeToKillInSeconds=2592000</span><br><span class="line">cas.authn.oauth.code.timeToKillInSeconds=30</span><br><span class="line">cas.authn.oauth.code.numberOfUses=1</span><br><span class="line">cas.authn.oauth.accessToken.releaseProtocolAttributes=true</span><br><span class="line">cas.authn.oauth.accessToken.timeToKillInSeconds=7200</span><br><span class="line">cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=28800</span><br><span class="line">cas.authn.oauth.grants.resourceOwner.requireServiceHeader=true</span><br><span class="line">cas.authn.oauth.userProfileViewType=NESTED</span><br></pre></td></tr></table></figure><blockquote><p>增加 OAUTH-1002.json service 注册文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/servies/OAUTH-1002.json</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;@class&quot; : &quot;org.apereo.cas.support.oauth.services.OAuthRegisteredService&quot;,</span><br><span class="line">  &quot;clientId&quot;: &quot;20181124&quot;,</span><br><span class="line">  &quot;clientSecret&quot;: &quot;123456&quot;,</span><br><span class="line">  &quot;serviceId&quot; : &quot;^(https|http|imaps)://.*&quot;,</span><br><span class="line">  &quot;name&quot; : &quot;OAuthService&quot;,</span><br><span class="line">  &quot;id&quot; : 1002</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>重启 Tomcat 测试</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown.sh                   </span></span><br><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line"><span class="comment"># startup.sh </span></span><br><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>重启完成后，我们利用本博客作为目标访问网址进行测试，浏览器打开 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MDgwL2Nhcy9vYXV0aDIuMC9hdXRob3JpemU/cmVzcG9uc2VfdHlwZT1jb2RlJmFtcDtjbGllbnRfaWQ9MjAxODExMjQmYW1wO3JlZGlyZWN0X3VyaT1odHRwczovL2Jsb2cuaWFtemhsLnRvcA==" title="http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top">http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top<i class="fa fa-external-link"></i></span></p><p>发现跳转了一个示例网址</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b1/603980e19d03912f2c01b3a7c94b80.jpg" alt></p><p>这时我们需要设置一下两个变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>加入下面两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cas.server.name=http://devops.iamzhl.top:8080/cas</span><br><span class="line">cas.server.prefix=$&#123;cas.server.name&#125;</span><br></pre></td></tr></table></figure><p>请将 devops.iamzhl.top 改为你的 ip，然后重启 Tomcat 再次测试</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/66/574e93fdcc2b8ab686a46ec772627d.jpg" alt></p><p>这次能正常跳转了，但是出现了<code>未认证授权的服务</code>，这是因为我们没有开启 http 协议支持，因此只要再让我们的 CAS Server 支持 http 认证就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>添加下面两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cas.tgc.secure=false</span><br><span class="line">cas.serviceRegistry.initFromJson=true</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/services/HTTPSandIMAPS-10000001.json</span></span><br></pre></td></tr></table></figure><p>将<code>&quot;serviceId&quot; : &quot;^(https|imaps)://.*&quot;,</code>改为<code>&quot;serviceId&quot; : &quot;^(https|http|imaps)://.*&quot;,</code>，如图</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2b/cca4a5df53dd47b94e73664bdc8ff3.jpg" alt></p><p>再次登录测试</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f5/c1a598cd7ecd0a96df200f38659aec.jpg" alt></p><p>这次终于正常了，输入用户名密码点击登录，就会跳转到授权页面</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ae/c40e776bfcecf0ca8b48c4e9582dbc.jpg" alt></p><p>点击 Allow 即可成功授权跳转至本博客，我们会注意到 uri 会携带一个 code，这就是 CAS 目前在 oauth2.0 授权中最为完善的 code 授权模式了。</p><p>至此， CAS 5.3 集成 oauth2.0 的授权已经搭建完毕</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/13/f1a8df13c6ee93210a970833c5059a.jpg" alt></p><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>注释掉默认的 <code>cas.authn.accept.users</code> 认证方式并添加与<code>LDAP Server</code>连接的配置(请根据自己的<code>LDAP</code>服务器信息进行修改)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># CAS Authentication Credentials</span><br><span class="line">#</span><br><span class="line"># cas.authn.accept.users=casuser::Mellon</span><br><span class="line">cas.authn.ldap[0].principalAttributeList=sn,cn:commonName,givenName,eduPersonTargettedId:SOME_IDENTIFIER</span><br><span class="line">cas.authn.ldap[0].collectDnAttribute=false</span><br><span class="line">cas.authn.ldap[0].principalDnAttributeName=principalLdapDn</span><br><span class="line">cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true</span><br><span class="line">cas.authn.ldap[0].allowMissingPrincipalAttributeValue=true</span><br><span class="line">cas.authn.ldap[0].credentialCriteria=</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.uid=uid</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.displayName=displayName</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.cn=commonName</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.affiliation=groupMembership</span><br><span class="line">cas.authn.ldap[0].ldapUrl=ldap://devops.iamzhl.top:389</span><br><span class="line">cas.authn.ldap[0].bindDn=cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">cas.authn.ldap[0].bindCredential=passwd</span><br><span class="line">cas.authn.ldap[0].poolPassivator=BIND</span><br><span class="line">cas.authn.ldap[0].connectionStrategy=</span><br><span class="line">cas.authn.ldap[0].providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider</span><br><span class="line">cas.authn.ldap[0].connectTimeout=5000</span><br><span class="line">cas.authn.ldap[0].trustCertificates=</span><br><span class="line">cas.authn.ldap[0].keystore=</span><br><span class="line">cas.authn.ldap[0].keystorePassword=</span><br><span class="line">cas.authn.ldap[0].keystoreType=PKCS12</span><br><span class="line">cas.authn.ldap[0].minPoolSize=3</span><br><span class="line">cas.authn.ldap[0].maxPoolSize=10</span><br><span class="line">cas.authn.ldap[0].validateOnCheckout=true</span><br><span class="line">cas.authn.ldap[0].validatePeriodically=true</span><br><span class="line">cas.authn.ldap[0].validatePeriod=500</span><br><span class="line">cas.authn.ldap[0].validateTimeout=5000</span><br><span class="line">cas.authn.ldap[0].failFast=true</span><br><span class="line">cas.authn.ldap[0].idleTime=500</span><br><span class="line">cas.authn.ldap[0].prunePeriod=24</span><br><span class="line">cas.authn.ldap[0].blockWaitTime=5000</span><br><span class="line">cas.authn.ldap[0].useSsl=false</span><br><span class="line">cas.authn.ldap[0].useStartTls=false</span><br><span class="line">cas.authn.ldap[0].responseTimeout=8000</span><br><span class="line">cas.authn.ldap[0].allowMultipleDns=false</span><br><span class="line">cas.authn.ldap[0].name=</span><br><span class="line">cas.authn.ldap[0].type=AUTHENTICATED</span><br><span class="line">cas.authn.ldap[0].searchFilter=uid=&#123;user&#125;</span><br><span class="line">#cas.authn.ldap[0].enhanceWithEntryResolver=true</span><br><span class="line">cas.authn.ldap[0].derefAliases=NEVER</span><br><span class="line">cas.authn.ldap[0].dnFormat=uid=%s,ou=People,dc=iamzhl,dc=top</span><br><span class="line">cas.authn.ldap[0].baseDn=ou=People,dc=iamzhl,dc=top</span><br></pre></td></tr></table></figure><p>重启 Tomcat 查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown.sh</span></span><br><span class="line"><span class="comment"># startup.sh</span></span><br><span class="line"><span class="comment"># tail -f /usr/local/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f2/308f5dc1de191625e6087c1d040824.jpg" alt></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/70/749184f3907b06951093fc2a944e42.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt></p><p>打开 CAS 网址测试 <code>http://devops.iamzhl.top:8080/cas/login</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/48/9f8dc131728eda81cd522d5db954d4.jpg" alt></p><p>输入用户名密码登陆成功</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/89/2e8366b3accc1248a4043079a958a3.jpg" alt></p><p>日志输出如下</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c3/cf45af8f7ab6b3aa80267f95cb6a42.jpg" alt></p><p>至此，CAS 5.3 整合 openLDAP 结束。</p><h2 id="整合-MySQL-认证"><a href="#整合-MySQL-认证" class="headerlink" title="整合 MySQL 认证"></a>整合 MySQL 认证</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote><p>修改配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/tomcat/webapps/cas/WEB-INF/classes/application.properties</span><br></pre></td></tr></table></figure><blockquote><p>最后添加如下内容 (需要将静态认证关闭，即 cas.authn.accept.users 配置项注释掉即可)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># MySQL Authentication Credentials</span><br><span class="line">#</span><br><span class="line"># 定义查询用户名的 sql 语句</span><br><span class="line">cas.authn.jdbc.query[0].sql=select * from sys_user where username=?</span><br><span class="line"># 定义用户密码字段</span><br><span class="line">cas.authn.jdbc.query[0].fieldPassword=password</span><br><span class="line"># 定义提示修改密码字段</span><br><span class="line">cas.authn.jdbc.query[0].fieldExpired=expired</span><br><span class="line"># 定义禁用用户的字段</span><br><span class="line">cas.authn.jdbc.query[0].fieldDisabled=disabled</span><br><span class="line"># 使用的数据库方言</span><br><span class="line">cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect</span><br><span class="line"># 定义数据库类</span><br><span class="line">cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver</span><br><span class="line"># 使用的数据库</span><br><span class="line">cas.authn.jdbc.query[0].url=jdbc:mysql://localhost:3306/cas?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;useSSL=false</span><br><span class="line"># 使用的数据库用户</span><br><span class="line">cas.authn.jdbc.query[0].user=root</span><br><span class="line"># 数据库 root 用户密码</span><br><span class="line">cas.authn.jdbc.query[0].password=123456</span><br><span class="line"></span><br><span class="line">#默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密</span><br><span class="line">cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT</span><br><span class="line">cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8</span><br><span class="line">cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5</span><br></pre></td></tr></table></figure><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><blockquote><p>创建数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database cas;</span><br></pre></td></tr></table></figure><blockquote><p>创建表</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use cas</span><br><span class="line">mysql&gt; create table sys_user (</span><br><span class="line"> `id` int(11) not null auto_increment,</span><br><span class="line"> `username` varchar(30) not null,</span><br><span class="line"> `password` varchar(64) not null,</span><br><span class="line"> `email`    varchar(50),</span><br><span class="line"> `address`  varchar(100),</span><br><span class="line"> `age`      int,</span><br><span class="line"> `expired` int,</span><br><span class="line"> `disabled` int,</span><br><span class="line"> `locked` int,</span><br><span class="line">  primary key (`id`)</span><br><span class="line">) engine=innodb auto_increment=1 default charset=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>数据表字段说明:</p></blockquote><p><strong><em>id 为自增字段，username 为用户名，password 为账号密码，email 为邮件地址，address 为联系地址，age 为用户年龄，expired 为是否登录后提示修改密码，disabled 为是否禁用账号，locked 为是否锁定账号，其中 id 为主键自增。</em></strong></p><blockquote><p>配置完成后在数据表添加用户启动 Tomcat 进行测试即可。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into sys_user values (&apos;1&apos;, &apos;admin&apos;, &apos;e10adc3949ba59abbe56e057f20f883e&apos;, &apos;admin@example.com&apos;, &apos;北京顺义&apos;, 20, 0, 0, 0);</span><br></pre></td></tr></table></figure><p><strong><em>需要注意的是插入数据时，需要用密码的 MD5 值</em></strong></p><h2 id="自定义登出跳转界面"><a href="#自定义登出跳转界面" class="headerlink" title="自定义登出跳转界面"></a>自定义登出跳转界面</h2><p>某些时候，我们可能需要对登出进行定制，比如等出后跳转到等出界面，在<code>CAS 5.3</code>以后的版本中，直接修改前端的<code>HTML</code>页面无法完成登出的定制跳转，不过官方提供了更为方便的设置方法，我们可以通过修改配置文件<code>application.properties</code>来实现，在文件中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cas.logout.followServiceRedirects=true</span><br><span class="line">cas.logout.redirectParameter=service</span><br><span class="line">cas.logout.redirectUrl=https://default.cas.com</span><br><span class="line">cas.logout.confirmLogout=false</span><br><span class="line">cas.logout.removeDescendantTickets=true</span><br></pre></td></tr></table></figure><p><em>请根据需要将其中的<code>redirectUrl</code>改为要定制的登出跳转链接</em></p><h2 id="自定义默认的登录跳转界面"><a href="#自定义默认的登录跳转界面" class="headerlink" title="自定义默认的登录跳转界面"></a>自定义默认的登录跳转界面</h2><p>登出跳转可以定制，登录的也可以，有些时候，可能需要在直接访问的<code>CAS</code>的时候，登陆成功后直接跳转到指定的界面，比如直接访问<code>http://devops.iamzhl.top:8080/cas</code>，需要跳转到<code>http://devops.iamzhl.top/index.html</code>，那么就可以在<code>application.properties</code>中添加以下属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cas.view.defaultRedirectUrl=http://devops.iamzhl.top/index.html</span><br></pre></td></tr></table></figure><h2 id="自定义登录界面主题"><a href="#自定义登录界面主题" class="headerlink" title="自定义登录界面主题"></a>自定义登录界面主题</h2><p>在<code>cas/WEB-INF/classes/static/themes</code>中新建一个文件夹以要设置的主题名命名，比如<code>devops</code>，在此目录下建立<code>js</code>、<code>css</code>以及<code>images</code>等静态资源文件夹，将定制的静态资源保存好，结构如下</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzqqbpvu1cj31p818k4au.jpg" alt></p><p>然后在<code>application.properties</code>添加以下属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cas.theme.defaultThemeName=devops</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CAS 5.3.4 安装部署
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://blog.cloudops.ml/tags/CAS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 安装部署邮件服务器</title>
    <link href="https://blog.cloudops.ml/Install-and-deploy-mail-server-on-CentOS-7.html"/>
    <id>https://blog.cloudops.ml/Install-and-deploy-mail-server-on-CentOS-7.html</id>
    <published>2018-10-19T13:31:24.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h1 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h1><p>CentOS 7.2 1511</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install postfix</span></span><br></pre></td></tr></table></figure><p>如果机器已经安装了sendmail，需要将其卸载，下面两条命令均可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y remove sendmail</span></span><br><span class="line"><span class="comment"># rpm -e sendmail</span></span><br></pre></td></tr></table></figure><p>修改MTA(默认邮件代理)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alternatives --config mta</span></span><br></pre></td></tr></table></figure><p>检查是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alternatives --display mta</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/519a03d59c7bc4ff363f66a8620736.jpg" alt></p><p>这里我已经安装过postfix了</p><h2 id="安装dovecot"><a href="#安装dovecot" class="headerlink" title="安装dovecot"></a>安装dovecot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install dovecot</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/fd/d041b10136a8aea22008556cba508a.jpg" alt></p><h2 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/postfix/main.cf</span></span><br></pre></td></tr></table></figure><p>修改以下参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">myhostname = mail.zhanghl.cn  # 取消注释，设置hostname</span><br><span class="line">mydomain = zhanghl.cn  # 取消注释，设置域名</span><br><span class="line">myorigin = $mydomain  # 取消注释</span><br><span class="line">inet_interfaces = all  # 修改为all</span><br><span class="line">inet_protocols = ipv4  # 修改ipv4，如果支持ipv6，则可以为all</span><br><span class="line">mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain # 修改在最后添加$mydomain</span><br><span class="line">mynetworks = 127.0.0.0/8, 10.0.0.0/24  # 取消注释，指定内网和本地的IP地址范围</span><br><span class="line">home_mailbox = Maildir/  # 取消注释，邮件保存目录</span><br><span class="line">smtpd_banner = $myhostname ESMTP $mail_name ($mail_version)  # 取消注释，邮件服务器欢迎信息</span><br></pre></td></tr></table></figure><p>文件最后添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Setup max mail attachment to 10M</span><br><span class="line">message_size_limit = 10485760</span><br><span class="line"># Setup max capacity of Inbox to 1G</span><br><span class="line">mailbox_size_limit = 1073741824</span><br><span class="line"># SMTP Authentication</span><br><span class="line">smtpd_sasl_type = dovecot</span><br><span class="line">smtpd_sasl_path = private/auth</span><br><span class="line">smtpd_sasl_auth_enable = yes</span><br><span class="line">smtpd_sasl_security_options = noanonymous</span><br><span class="line">smtpd_sasl_local_domain = $myhostname</span><br><span class="line">smtpd_recipient_restrictions = permit_mynetworks,permit_auth_destination,permit_sasl_authenticated,reject</span><br></pre></td></tr></table></figure><p>启动并设置自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start postfix  //启动</span></span><br><span class="line"><span class="comment"># systemctl enable postfix  //自启动</span></span><br></pre></td></tr></table></figure><h2 id="配置dovecot"><a href="#配置dovecot" class="headerlink" title="配置dovecot"></a>配置dovecot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/dovecot.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = *  //取消注释并修改</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-auth.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">disable_plaintext_auth = no  //取消注释并修改</span><br><span class="line">auth_mechanisms = plain login  //修改添加login</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-mail.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail_location = maildir:~/Maildir  //修改设置邮件存储位置</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-master.conf</span></span><br></pre></td></tr></table></figure><p>取消注释并添加user和group属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">unix_listener /var/spool/postfix/private/auth &#123;</span><br><span class="line">    mode = 0666</span><br><span class="line">    user = postfix</span><br><span class="line">    group = postfix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动并设置自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start dovecot  //启动</span></span><br><span class="line"><span class="comment"># systemctl enable dovecot  //自启动</span></span><br></pre></td></tr></table></figure><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>添加一个子域名mail，A记录解析到服务器IP。</p><p>再添加一个MX记录，主机记录为空，记录值为上面解析的二级域名mail.zhanghl.cn，优先级10。</p><p>注意：解析生效可能需要一段时间。</p><p>也可以修改/etc/hosts添加邮件服务器域名实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e2/0e95d3345f60b59bffdf377e55fc3b.jpg" alt></p><h2 id="测试邮箱"><a href="#测试邮箱" class="headerlink" title="测试邮箱"></a>测试邮箱</h2><p>首先安装telnet，由于CentOS 7已经默认没有了xinetd和telnet，因此需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install xinetd telnet telnet-server</span></span><br></pre></td></tr></table></figure><p>设置xinetd启动并自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start xinetd</span></span><br><span class="line"><span class="comment"># systemctl enable xinetd</span></span><br></pre></td></tr></table></figure><p>利用telnet测试邮件服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">[zhanghl@centos-7 ~]$ telnet zhanghl.cn 25</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to zhanghl.cn.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">220 mail.zhanghl.cn ESMTP Postfix (2.10.1)</span><br><span class="line">mail from:zhanghl</span><br><span class="line">250 2.1.0 Ok</span><br><span class="line">rcpt to:root</span><br><span class="line">250 2.1.5 Ok</span><br><span class="line">data</span><br><span class="line">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">Hello, i<span class="string">'m zhanghl!</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">250 2.0.0 Ok: queued as 731144191B7F</span></span><br><span class="line"><span class="string">quit</span></span><br><span class="line"><span class="string">221 2.0.0 Bye</span></span><br><span class="line"><span class="string">Connection closed by foreign host.</span></span><br><span class="line"><span class="string">[zhanghl@centos-7 ~]$ telnet zhanghl.cn 110</span></span><br><span class="line"><span class="string">Trying 127.0.0.1...</span></span><br><span class="line"><span class="string">Connected to zhanghl.cn.</span></span><br><span class="line"><span class="string">Escape character is '</span>^]<span class="string">'.</span></span><br><span class="line"><span class="string">+OK Dovecot ready.</span></span><br><span class="line"><span class="string">user zhanghl</span></span><br><span class="line"><span class="string">+OK</span></span><br><span class="line"><span class="string">pass 123456</span></span><br><span class="line"><span class="string">+OK Logged in.</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">+OK 1 messages:</span></span><br><span class="line"><span class="string">1 2381</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 1</span></span><br><span class="line"><span class="string">+OK 2381 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;&gt;</span></span><br><span class="line"><span class="string">X-Original-To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Delivered-To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Received: by mail.zhanghl.cn (Postfix)</span></span><br><span class="line"><span class="string">id 61E594191B92; Fri, 19 Oct 2018 22:44:27 +0800 (CST)</span></span><br><span class="line"><span class="string">Date: Fri, 19 Oct 2018 22:44:27 +0800 (CST)</span></span><br><span class="line"><span class="string">From: MAILER-DAEMON@zhanghl.cn (Mail Delivery System)</span></span><br><span class="line"><span class="string">Subject: Undelivered Mail Returned to Sender</span></span><br><span class="line"><span class="string">To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Auto-Submitted: auto-replied</span></span><br><span class="line"><span class="string">MIME-Version: 1.0</span></span><br><span class="line"><span class="string">Content-Type: multipart/report; report-type=delivery-status;</span></span><br><span class="line"><span class="string">boundary="731144191B7F.1539960267/mail.zhanghl.cn"</span></span><br><span class="line"><span class="string">Message-Id: &lt;20181019144427.61E594191B92@mail.zhanghl.cn&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is a MIME-encapsulated message.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Notification</span></span><br><span class="line"><span class="string">Content-Type: text/plain; charset=us-ascii</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is the mail system at host mail.zhanghl.cn.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I'</span>m sorry to have to inform you that your message could not</span><br><span class="line">be delivered to one or more recipients. It<span class="string">'s attached below.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For further assistance, please send mail to postmaster.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you do so, please include this problem report. You can</span></span><br><span class="line"><span class="string">delete your own text from the attached returned message.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                   The mail system</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;root@zhanghl.cn&gt; (expanded from &lt;root&gt;): maildir delivery failed: create</span></span><br><span class="line"><span class="string">    maildir file /root/Maildir/tmp/1539960267.P14995.centos-7.shared:</span></span><br><span class="line"><span class="string">    Permission denied</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Delivery report</span></span><br><span class="line"><span class="string">Content-Type: message/delivery-status</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reporting-MTA: dns; mail.zhanghl.cn</span></span><br><span class="line"><span class="string">X-Postfix-Queue-ID: 731144191B7F</span></span><br><span class="line"><span class="string">X-Postfix-Sender: rfc822; zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Arrival-Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Final-Recipient: rfc822; root@zhanghl.cn</span></span><br><span class="line"><span class="string">Original-Recipient: rfc822;root</span></span><br><span class="line"><span class="string">Action: failed</span></span><br><span class="line"><span class="string">Status: 5.2.0</span></span><br><span class="line"><span class="string">Diagnostic-Code: X-Postfix; maildir delivery failed: create maildir file</span></span><br><span class="line"><span class="string">    /root/Maildir/tmp/1539960267.P14995.centos-7.shared: Permission denied</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Undelivered Message</span></span><br><span class="line"><span class="string">Content-Type: message/rfc822</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Return-Path: &lt;zhanghl@zhanghl.cn&gt;</span></span><br><span class="line"><span class="string">Received: from mail.zhanghl.cn (mail.zhanghl.cn [127.0.0.1])</span></span><br><span class="line"><span class="string">by mail.zhanghl.cn (Postfix) with SMTP id 731144191B7F</span></span><br><span class="line"><span class="string">for &lt;root&gt;; Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20181019144410.731144191B7F@mail.zhanghl.cn&gt;</span></span><br><span class="line"><span class="string">Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string">From: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hello, i'</span>m zhanghl!</span><br><span class="line"></span><br><span class="line">--731144191B7F.1539960267/mail.zhanghl.cn--</span><br><span class="line">.</span><br><span class="line">quit</span><br><span class="line">+OK Logging out.</span><br><span class="line">Connection closed by foreign host.</span><br><span class="line">[zhanghl@centos-7 ~]$</span><br></pre></td></tr></table></figure><h2 id="使用邮箱"><a href="#使用邮箱" class="headerlink" title="使用邮箱"></a>使用邮箱</h2><p>一切都弄好以后，就可以使用Foxmail等第三方软件来收发邮件了。在这里需要说一下，系统用户就是邮件的用户，例如root，就是一个邮箱用户，邮箱是<span class="exturl" data-url="bWFpbHRvOnJvb3RAemhhbmdobC5jbg==" title="mailto:root@zhanghl.cn">root@zhanghl.cn<i class="fa fa-external-link"></i></span>，密码就是root的密码，所以需要创建用户，只要使用useradd创建用户，再使用passwd设置密码。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS 7安装部署邮件服务器
    
    </summary>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Linux" scheme="https://blog.cloudops.ml/categories/%E8%BF%90%E7%BB%B4/Linux/"/>
    
    
      <category term="运维" scheme="https://blog.cloudops.ml/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Linux" scheme="https://blog.cloudops.ml/tags/Linux/"/>
    
      <category term="SMTP" scheme="https://blog.cloudops.ml/tags/SMTP/"/>
    
      <category term="Mail Server" scheme="https://blog.cloudops.ml/tags/Mail-Server/"/>
    
  </entry>
  
  <entry>
    <title>TestLink安装部署</title>
    <link href="https://blog.cloudops.ml/TestLink-install-and-deploy.html"/>
    <id>https://blog.cloudops.ml/TestLink-install-and-deploy.html</id>
    <published>2018-08-26T11:51:29.000Z</published>
    <updated>2019-03-11T16:21:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Aug 14 2019 14:43:32 GMT+0800 (中国标准时间) --><h1 id="TestLink安装部署"><a href="#TestLink安装部署" class="headerlink" title="TestLink安装部署"></a><center>TestLink安装部署</center></h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum -y install mysql mysql-server mysql-devel</span></span><br></pre></td></tr></table></figure><p>启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p>获取安装MySQL时的初始密码并登录MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; set password for root@localhost=password(&apos;root&apos;);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt></p><p>创建testlink用户并创建testlink要用的数据库并把testlink数据库的所有权限赋给testlink用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER &apos;testlink&apos;@&apos;%&apos; IDENTIFIED BY &apos;root&apos;;</span><br><span class="line">mysql&gt; CREATE DATABASE testlink; </span><br><span class="line">mysql&gt; GRANT ALL ON testlink.* TO &apos;testlink&apos;@&apos;%&apos;; </span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>设置MySQL启动与自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable mysqld    //自启动</span></span><br><span class="line"><span class="comment"># systemctl start mysqld     //启动</span></span><br></pre></td></tr></table></figure><h2 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd</span></span><br></pre></td></tr></table></figure><h3 id="启动自启动"><a href="#启动自启动" class="headerlink" title="启动自启动"></a>启动自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable httpd  //自启动</span></span><br><span class="line"><span class="comment"># systemctl start httpd   //启动</span></span><br></pre></td></tr></table></figure><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line"><span class="comment"># yum -y install `yum search php | grep php56w | grep -v "===" | grep -v mysqlnd | awk -F '.' '&#123;print $1&#125;'`</span></span><br></pre></td></tr></table></figure><h3 id="测试一下PHP环境"><a href="#测试一下PHP环境" class="headerlink" title="测试一下PHP环境"></a>测试一下PHP环境</h3><p>写一个phpinfo测试php环境是否正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /var/www/html/info.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器打开<code>http://IP:httpd端口/info.php</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/bf/a51c4fe3482af30d3b54a102c5a844.jpg" alt></p><p>如图，PHP环境安装完成。</p><p>*<em>Note: *</em><br>PHP无法正确解析，网页显示源码的解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/php.ini</span><br></pre></td></tr></table></figure><p>将short_open_tag = Off修改为short_open_tag = On，然后重启httpd服务即可</p><h2 id="安装TestLink"><a href="#安装TestLink" class="headerlink" title="安装TestLink"></a>安装TestLink</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://jaist.dl.sourceforge.net/project/testlink/TestLink%201.9/TestLink%201.9.18/testlink-1.9.18.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="解压重命名"><a href="#解压重命名" class="headerlink" title="解压重命名"></a>解压重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zxvf testlink-1.9.18.tar.gz</span></span><br><span class="line"><span class="comment"># mv testlink-1.9.18 testlink</span></span><br><span class="line"><span class="comment"># mv testlink /var/www/html/</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/www/html/testlink</span></span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sed -i -e "s/AllowOverride None/AllowOverride All/g" /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># sed -i -e "s/DirectoryIndex index.html/DirectoryIndex index.html index.php index.shtm/g" /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># sed -i -e "s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 2400/g" /etc/php.ini</span></span><br><span class="line"><span class="comment"># sed -i -e "s/max_execution_time = 30/max_execution_time = 120/g" /etc/php.ini</span></span><br><span class="line"><span class="comment"># service httpd restart</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/49/3c7f4c9291a6c276e5dad2200d5571.jpg" alt></p><h3 id="新建一些PHP环境要求必备的文件夹并赋予适当权限"><a href="#新建一些PHP环境要求必备的文件夹并赋予适当权限" class="headerlink" title="新建一些PHP环境要求必备的文件夹并赋予适当权限"></a>新建一些PHP环境要求必备的文件夹并赋予适当权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /var/www/html/testlink/gui/templates_c</span></span><br><span class="line"><span class="comment"># mkdir -p /var/testlink/logs/</span></span><br><span class="line"><span class="comment"># mkdir -p /var/testlink/upload_area/</span></span><br><span class="line"><span class="comment"># chmod 777 /var/www/html/testlink/gui/templates_c</span></span><br><span class="line"><span class="comment"># chmod 777 /var/testlink/logs/</span></span><br><span class="line"><span class="comment"># chmod 777 /var/testlink/upload_area/</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/23/c132221e0b416226f6f7df1e63b12c.jpg" alt></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>浏览器打开<code>http://IP:port/testlink/install</code>(将IP换成自己主机IP，端口号换为自己主机的Apache服务端口号)。如图，点击New installation开始安装</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/da839143e11bec790a2a77f7247529.jpg" alt></p><p>选中同意协议，continue</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7c/b33fa4f939e6447fa43f36b5577b43.jpg" alt></p><p>进入系统环境检测阶段，这一步需要根据错误提示进行配置，前面已经在安装php和testlink时解决了，所以现在已经没有错误了，图中橙色的提示可以忽略，点击continue</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/8c/84dad1406d9a22e95913b060326730.jpg" alt></p><p>如图，设定数据库管理员登录账户密码，自定义TestLink的数据库登录账户密码，其余均保持默认，点击Process TestLink Setup</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/58/736d782618beafcda69918ffca7749.jpg" alt></p><p><strong>这里有一点提示，如上图中黑体所说 ，需要手动导入<code>udf0</code>结尾的<code>sql</code>文件，只需在<code>mysql</code>命令行中执行<code>source /var/www/html/testlink/install/sql/mysql/testlink_create_udf0.sql</code>即可，需要说明的是，需要手动修改其中的<code>use</code>字段，如下图，修改为<code>mysql</code>新建的<code>testlink</code>数据库名</strong></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fytosr0ucnj31p818kk2a.jpg" alt></p><p><em>如果安装到最后出现了打印数据库调试信息，请检查<code>php</code>的<code>mysql</code>模块，命令是<code>php -m | grep mysql</code>，如下图则是正常的</em></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fytouqtrwgj31p818k7a4.jpg" alt></p><p><em>如果提示动态库无法加载之类的错误，只需重新安装<code>php-mysql</code>，然后重启<code>php-fpm</code>和<code>httpd</code>即可</em></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>安装完成网址输入<span class="exturl" data-url="aHR0cDovL0lQL3Rlc3RsaW5r5Y2z5Y+v6Ieq5Yqo6Lez6L2s5Yiw55m75b2V6aG16Z2i77yM6buY6K6k55So5oi3YWRtaW4vYWRtaW4=" title="http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin">http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin<i class="fa fa-external-link"></i></span></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      TestLink安装部署
    
    </summary>
    
      <category term="Linux" scheme="https://blog.cloudops.ml/categories/Linux/"/>
    
      <category term="运维" scheme="https://blog.cloudops.ml/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="TestLink" scheme="https://blog.cloudops.ml/tags/TestLink/"/>
    
  </entry>
  
</feed>
