<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Dont Starve Hamlet 饥荒 mac 版生存游戏</title>
      <link href="/Don-t-Starve.html"/>
      <url>/Don-t-Starve.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>威尔逊在《Don’t Starve: Hamlet》中发现了一个失落的贵族小镇，坐落在一个不祥的热带丛林中。 通过养猪场，房屋，新物品，生物群落等来熟悉城市生活，或者深入探究古老的废墟，并尝试在此单人游戏中寻宝。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/jihuang.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-20</td><td align="center">Don’t Starve: Hamlet</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="天翼云"><a href="#天翼云" class="headerlink" title="天翼云"></a>天翼云</h3><p>地址: <a href="https://cloud.189.cn/t/AZVBBz6fE3aa" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/AZVBBz6fE3aa</a><br>密码：jp0c</p><h3 id="套陆专用分享站"><a href="#套陆专用分享站" class="headerlink" title="套陆专用分享站"></a>套陆专用分享站</h3><blockquote><p>建议使用 <a href="https://blog.tlhub.cn/Motrix.html"><code>Motrix</code></a> 或 <code>IDM</code> 等支持多线程下载的工具进行安装</p></blockquote><p>地址: <a href="https://od.cloudops.ml/tlhub.cn/Games/dontstarve_steam_1.0__blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">https://od.cloudops.ml/tlhub.cn/Games/dontstarve_steam_1.0__blog.tlhub.cn.dmg</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 饥荒 </tag>
            
            <tag> Don&#39;t Starve </tag>
            
            <tag> Hamlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numi 3.27 漂亮的自然语言计算器</title>
      <link href="/Numi.html"/>
      <url>/Numi.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Numi 是一款 macOS 上漂亮的自然语言计算器工具。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200520112541.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-20</td><td align="center">3.27</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bf4f1i" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bf4f1i</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://numi.app/" target="_blank" rel="noopener external nofollow noreferrer">Numi 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numi </tag>
            
            <tag> 计算器 </tag>
            
            <tag> 自然语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wireshark 3.2.4 网络协议分析工具</title>
      <link href="/Wireshark.html"/>
      <url>/Wireshark.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Wireshark 是世界上使用最广泛的网络协议分析器。它使您可以从微观角度查看网络中发生的事情，它是许多商业和非营利性企业，政府机构和教育机构的事实上（通常是法律上）的标准。得益于全球网络专家的自愿贡献，Wireshark 的发展得以蓬勃发展，并且是 Gerald Combs 在 1998 年启动的项目的延续。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><p>Wireshark 具有丰富的功能，其中包括：</p><ul><li>深入检查数百种协议，一直在增加</li><li>实时捕获和离线分析</li><li>标准三窗格数据包浏览器</li><li>多平台：在 Windows，Linux，macOS，Solaris，FreeBSD，NetBSD 和许多其他操作系统上运行</li><li>捕获的网络数据可以通过 GUI 或 TTY 模式的 TShark 实用程序进行浏览</li><li>业界最强大的显示过滤器</li><li>丰富的 VoIP 分析</li><li>读取/写入许多不同的捕获文件格式：tcpdump（libpcap），Pcap NG，Catapult DCT2000，Cisco Secure IDS iplog，Microsoft Network Monitor，Network GeneralSniffer®（压缩和未压缩），Sniffer®Pro 和 NetXray®，Network Instruments Observer ，NetScreen 侦听，Novell LANalyzer，RADCOM WAN/LAN 分析器，Shomiti/Finisar Surveyor，Tektronix K12xx，Visual Networks Visual UpTime，WildPackets EtherPeek/TokenPeek/AiroPeek等</li><li>使用 gzip 压缩的捕获文件可以即时解压缩</li><li>可以从以太网，IEEE 802.11，PPP/HDLC，ATM，蓝牙，USB，令牌环，帧中继，FDDI 等读取实时数据（取决于您的平台）</li><li>对许多协议的解密支持，包括 IPsec，ISAKMP，Kerberos，SNMPv3，SSL/TLS，WEP 和 PA/WPA2</li><li>可以将着色规则应用于数据包列表，以进行快速，直观的分析</li><li>输出可以导出为 XML，PostScript®，CSV 纯文本</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200520112132.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-20</td><td align="center">3.2.4</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bf4f2j" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bf4f2j</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://www.wireshark.org/" target="_blank" rel="noopener external nofollow noreferrer">Wireshark 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wireshark </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sensei 1.2.1 Mac 新一代性能优化及清理工具</title>
      <link href="/Sensei.html"/>
      <url>/Sensei.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Sensei 1.2.0 是一款 Mac 新一代性能优化及清理工具。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="高级清理工具"><a href="#高级清理工具" class="headerlink" title="高级清理工具"></a>高级清理工具</h3><p>Sensei 中超快的清理功能将帮助您查找和删除占用存储空间的不必要文件，从而释放GB的存储空间，而又不会触碰您的个人文件。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214208.png" alt=""></p><h3 id="存储概览"><a href="#存储概览" class="headerlink" title="存储概览"></a>存储概览</h3><ul><li><p>使用存储概览了解有关存储的更多信息。 在概述中，您可以查看所有连接的磁盘驱动器，并查看有关它们的详细信息以及它们与其他存储单元的关系。</p></li><li><p>使用分区映射资源管理器，您还可以浏览单个磁盘的分区。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214138.png" alt=""></p><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><p>使用磁盘基准测试功能可以快速测量驱动器的读写速度。 同时支持内部，外部硬盘驱动器或固态驱动器。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214121.png" alt=""></p><h3 id="强有力的磁盘健康分析"><a href="#强有力的磁盘健康分析" class="headerlink" title="强有力的磁盘健康分析"></a>强有力的磁盘健康分析</h3><ul><li>磁盘运行状况报告功能利用 S.M.A.R.T 变量分析来评估驱动器的当前状态，并估计其剩余使用寿命。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214046.png" alt=""></p><h3 id="实时-I-O-统计"><a href="#实时-I-O-统计" class="headerlink" title="实时 I/O 统计"></a>实时 I/O 统计</h3><ul><li>统计信息功能显示驱动器的所有可用 I/O 统计信息，使您可以实时监视存储性能。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214023.png" alt=""></p><h3 id="轻松实现-SSD-性能和寿命"><a href="#轻松实现-SSD-性能和寿命" class="headerlink" title="轻松实现 SSD 性能和寿命"></a>轻松实现 SSD 性能和寿命</h3><ul><li>只需轻按一下开关，即可提高 SSD 的性能和使用寿命。 Sensei 中的 Trim Enabler 是我们最流行的 Mac 版 SSD 实用程序的最新版本。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519214006.png" alt=""></p><h4 id="彻底清除应用程序"><a href="#彻底清除应用程序" class="headerlink" title="彻底清除应用程序"></a>彻底清除应用程序</h4><ul><li>智能卸载程序功能将发现 Mac 上隐藏的所有应用程序，并帮助您正确卸载它们，而不会留下任何辅助工具或其他剩余文件。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213940.png" alt=""></p><h3 id="强有力的硬件工具"><a href="#强有力的硬件工具" class="headerlink" title="强有力的硬件工具"></a>强有力的硬件工具</h3><p>了解有关 Mac 内部的更多信息，并使用 Sensei 中强大的硬件实用程序监视其状态和运行状况。</p><h4 id="仪表盘"><a href="#仪表盘" class="headerlink" title="仪表盘"></a>仪表盘</h4><p>使用转速仪表盘全面了解 Mac 中的所有热传感器。 实时监控您的风扇速度和温度，并确定故障传感器。 第一季度将提供风扇控制功能。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213621.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213908.png" alt=""></p><h4 id="电池健康"><a href="#电池健康" class="headerlink" title="电池健康"></a>电池健康</h4><p>电池是现代便携式 Mac 机中最早出现故障的部件之一。 电池功能使您可以查看内部电池的完整规格，并分析其当前的健康状况。 因此，您可以始终保持 Mac 的健康状态，并最大限度地延长 Mac 的使用寿命。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213853.png" alt=""></p><h4 id="GPU-信息监测"><a href="#GPU-信息监测" class="headerlink" title="GPU 信息监测"></a>GPU 信息监测</h4><p>此功能是 macOS 的第一个 GPU 查看器。 详细了解内部或外部 GPU 的规格，并实时监控其性能。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213822.png" alt=""></p><h3 id="优化功能"><a href="#优化功能" class="headerlink" title="优化功能"></a>优化功能</h3><p>通过提供一种简便的方法来管理 Mac 启动项 - 甚至通常隐藏在您身后的启动项，Optimizer 功能将帮助您提高 Mac 的性能和启动速度。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213444.png" alt=""></p><h3 id="和其他工具对比"><a href="#和其他工具对比" class="headerlink" title="和其他工具对比"></a>和其他工具对比</h3><ul><li>Sensei 是用于 Mac 性能的多功能工具，其功能涵盖硬件和软件。 这是它与您可能熟悉的其他一些应用程序的比较方式。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213405.png" alt=""></p><h3 id="多语言支持"><a href="#多语言支持" class="headerlink" title="多语言支持"></a>多语言支持</h3><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519213323.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-21</td><td align="center">1.2.1</td></tr><tr><td align="center">2020-5-19</td><td align="center">1.2.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bf35yf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bf35yf</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://sensei.app/" target="_blank" rel="noopener external nofollow noreferrer">Sensei 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sensei </tag>
            
            <tag> 优化 </tag>
            
            <tag> 清理 </tag>
            
            <tag> 监测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMind 10.1.3 思如泉涌 • 成竹在图</title>
      <link href="/XMind.html"/>
      <url>/XMind.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="大纲视图"><a href="#大纲视图" class="headerlink" title="大纲视图"></a>大纲视图</h3><ul><li>在这里，你可以将内容自由切换成大纲视图或思维导图模式，利用它来管理列表，整理目标和任务，你会成为团队中的佼佼者。</li></ul><h3 id="风格编辑器"><a href="#风格编辑器" class="headerlink" title="风格编辑器"></a>风格编辑器</h3><ul><li>你可以根据自己的喜好调整主题的样式，把字体、线条和颜色设置成自己喜欢的样子，保存好后就可以重复使用了。</li></ul><h3 id="增强图片导出"><a href="#增强图片导出" class="headerlink" title="增强图片导出"></a>增强图片导出</h3><ul><li>我们为导出图片提供了更多的可能性，例如允许同时导出所有画布，选择更大的尺寸以及导出透明背景，让你轻松插入至 Keynote 或 PPT 中使用。</li></ul><h3 id="文件链接"><a href="#文件链接" class="headerlink" title="文件链接"></a>文件链接</h3><ul><li>令人惊讶的是，只需要使用一张思维导图，就可以管理你电脑中所有的文件，当你需要搜索某个文件时，单击导图中的主题，你便会被带到文件所在的位置。</li></ul><h3 id="ZEN-模式"><a href="#ZEN-模式" class="headerlink" title="ZEN 模式"></a>ZEN 模式</h3><ul><li>ZEN 模式让你专注于思维导图本身。在 ZEN 模式下，你可以集中火力，全神贯注地进行思维的发散和整理，得出更好的解决方案。</li></ul><h3 id="方程"><a href="#方程" class="headerlink" title="方程"></a>方程</h3><ul><li>用 LaTeX 来帮助插入数学和部分化学公式，不仅为学术党们提供方便，也让知识梳理的过程变得简单高效，真酷。点击了解更多 XMind 方程支持哪些命令。</li></ul><h3 id="多种结构和主题"><a href="#多种结构和主题" class="headerlink" title="多种结构和主题"></a>多种结构和主题</h3><ul><li>我们在导图中提供鱼骨图、矩阵图、时间轴、组织结构图等来丰富你的思维结构。更有六边形、胶囊形、圆形等不同主题形状来强调你的想法。</li></ul><h3 id="…"><a href="#…" class="headerlink" title="…"></a>…</h3><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/zen-export-map@2x-40a32550b7.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/home-hero-ui@2x-f649b7aa98.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/zen-equation-lg-7c44931469.svg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/zen-filelink-1cadf872a1.svg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/zen-newui-lg@2x-9e7a9b60a5.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/zen-zmode-2@2x-260f92607e.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-18</td><td align="center">10.1.3</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="天翼云"><a href="#天翼云" class="headerlink" title="天翼云"></a>天翼云</h3><p>地址: <a href="https://cloud.189.cn/t/fUrEzujyqQfm" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/fUrEzujyqQfm</a><br>密码：5klb</p><h3 id="套陆专用分享站"><a href="#套陆专用分享站" class="headerlink" title="套陆专用分享站"></a>套陆专用分享站</h3><blockquote><p>建议使用 <a href="https://blog.tlhub.cn/Motrix.html"><code>Motrix</code></a> 或 <code>IDM</code> 等支持多线程下载的工具进行安装</p></blockquote><p>地址: <a href="https://od.cloudops.ml/tlhub.cn/XMind/XMind_10.1.3__blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">https://od.cloudops.ml/tlhub.cn/XMind/XMind_10.1.3__blog.tlhub.cn.dmg</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://www.xmind.cn" target="_blank" rel="noopener external nofollow noreferrer">官网正版</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XMind </tag>
            
            <tag> 思维导图 </tag>
            
            <tag> 脑图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Movist Pro 2.2.18 强大的视频播放器</title>
      <link href="/Movist-Pro.html"/>
      <url>/Movist-Pro.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Movist是一款易于使用且功能强大的电影播放器。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="美观便捷的用户界面"><a href="#美观便捷的用户界面" class="headerlink" title="美观便捷的用户界面"></a>美观便捷的用户界面</h3><ul><li><p>控制器既实用又方便，并且仅在鼠标指针接近时才会显示。 透明的标题栏和控制器使您可以更专注于观看体验。</p></li><li><p>主菜单实时显示各种状态，控制面板使您可以快速访问所需的所有功能。将鼠标移到搜索滑块上可以查看缩略图。</p></li><li><p>除了所有这些便利之外，我们还增加了美丽。它支持包括浅色和深色主题的现代 macOS 风格。</p></li></ul><h3 id="性能提升"><a href="#性能提升" class="headerlink" title="性能提升"></a>性能提升</h3><ul><li><p>Movist 支持 H.265/HEVC 编解码器的硬件加速解码。您可以舒适地欣赏 4K UHD 图像。</p></li><li><p>此外，它经过优化以消耗最少的能量。CPU 使用率降低了一半。</p></li></ul><h3 id="网络视频"><a href="#网络视频" class="headerlink" title="网络视频"></a>网络视频</h3><ul><li><p>您可以使用 Movist 观看网页中包含的视频。只需单击 Safari 工具栏上的按钮(提供了 Safari 扩展程序)。您当然可以手动输入 Internet 地址或拖动 Internet 链接。</p></li><li><p>您可以选择画质，查看字幕并使用所有 Movist 功能。您可以将其添加到播放列表中，然后可以从最近打开的列表中再次打开它。</p></li></ul><h3 id="当您打开媒体时"><a href="#当您打开媒体时" class="headerlink" title="当您打开媒体时"></a>当您打开媒体时</h3><ul><li><p>打开媒体时，有许多默认的首选项适用。</p></li><li><p>您可以指定默认的跟踪语言。例如，韩语的视频和音频，英文字幕或如果有英语音轨，则可以设置不显示字幕。</p></li><li><p>您可以指定自己喜欢的视频质量，滤波器，均衡器等。您还可以还原上一次播放的时间，以便从那里观看。</p></li></ul><h3 id="同时显示多首曲目"><a href="#同时显示多首曲目" class="headerlink" title="同时显示多首曲目"></a>同时显示多首曲目</h3><ul><li><p>您可以同时查看多种语言的字幕。您还可以为每种语言设置不同的位置和样式。</p></li><li><p>您还可以同时为视频和音频选择多个轨道。例如，如果汽车黑匣子的前后视频都包含在一个文件中，则可以同时查看前后视频。</p></li></ul><h3 id="使用信箱"><a href="#使用信箱" class="headerlink" title="使用信箱"></a>使用信箱</h3><ul><li><p>如果可能，Movist 将在信箱空间中显示字幕。字幕不仅掩盖了视频，而且还提高了可见度。</p></li><li><p>Movist 会自动调整信箱的高度以便字幕以行为单位进行布局。您还可以设置要在信箱中显示的行数。</p></li></ul><h3 id="听字幕"><a href="#听字幕" class="headerlink" title="听字幕"></a>听字幕</h3><ul><li><p>Movist 可以大声朗读字幕。如果您看不到字幕，请立即收听。</p></li><li><p>可以不显示屏幕而只说字幕，并且可以控制讲话速度。您还可以根据说话速度自动调整播放/暂停。最好将它用于语言学习。</p></li><li><p>不需要复杂的设置。只需按下 <code>语音</code> 按钮即可。</p></li></ul><h3 id="便捷的播放列表"><a href="#便捷的播放列表" class="headerlink" title="便捷的播放列表"></a>便捷的播放列表</h3><ul><li><p>当您打开文件时，Movist 会创建一个播放列表，然后在同一文件夹中查找并填充系列和字幕文件。您也可以手动添加和删除文件。</p></li><li><p>您可以保存播放列表并稍后再调用。您不需要管理播放列表文件。Movist 管理所有这些。只需给播放列表起个名字即可。</p></li></ul><h3 id="网络服务器"><a href="#网络服务器" class="headerlink" title="网络服务器"></a>网络服务器</h3><ul><li>您可以立即播放视频，而无需从网络服务器下载。支持 SMB，SFTP，FTP，WebDAV（包括 HTTPS）。由于 Movist Pro 自动处理缓冲，即使网络不稳定，您可以观看视频而无需缓冲。</li></ul><h3 id="HDR-色调映射"><a href="#HDR-色调映射" class="headerlink" title="HDR 色调映射"></a>HDR 色调映射</h3><ul><li>新相机拍摄的 HDR 视频的颜色是看起来很虚弱，在监视器上被洗掉了。Movist 尝试重现 HDR 颜色，尽可能在非 HDR 显示器上使用。</li></ul><h3 id="还有…"><a href="#还有…" class="headerlink" title="还有…"></a>还有…</h3><ul><li>自2016年以来，MacBook（Pro）不再具有音频光学输出插孔。 而且大多数廉价的 USB 音频设备都不支持 macOS 上的数字输出。但是，Movist 在这些设备中本身支持数字输出，允许按原样输出 ac3，dts 数据。 请继续使用现有的光纤输出扬声器。</li><li>您可以播放音乐文件。 欣赏专辑封面。</li><li>更准确的颜色，包括 10 位颜色支持。</li><li>您可以缩放，旋转和翻转视频。</li><li>您可以将各种 CoreImage 滤镜应用于视频。</li><li>支持音频均衡器。</li><li>您可以为每个音频输出设备设置通道数，延迟和数字输出，并设置默认音频输出设备。</li><li>观看 3D 电影时，字幕以 3D 形式显示。</li><li>您可以自定义快捷键。</li><li>支持 MacBook Pro 的 TouchBar。</li><li>您可以选择 FFmpeg/QuickTime 解码器。</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_interface_en.jpg" alt=""></p><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517233948.png"><source id="mp4" src="https://movistprime.com/resources/images/performance_en.mp4" type="video/mp4"></video><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_internet_en.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_open_en.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_multitrack_en.jpg" alt=""></p><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517235007.png"><source id="mp4" src="https://movistprime.com/resources/images/letterbox_en.mp4" type="video/mp4"></video><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_speech_en.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_playlist_en.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_network_server.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/movistpro_hdr_tone_mapping.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/etc_en.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">2.2.18</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bewv4j" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bewv4j</a><br>密码: a9ox</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Movist Pro </tag>
            
            <tag> 播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SoundControl 2.4.3 音频控制管理工具</title>
      <link href="/SoundControl.html"/>
      <url>/SoundControl.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>SoundControl 是一个独一无二的可以为您的 mac 设备添加高级音频控制的应用程序。通过每个应用的音量，均衡器，平衡和音频路由，独立控制每个应用的音频。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li><p>独立控制应用的音量。</p></li><li><p>将键盘音量控件添加到 DisplayPort 监视器，HDMI TV 和接收器以及其他缺少它们的设备。</p></li><li><p>使用系统范围的EQ或在每个应用程序上设置不同的 EQ。每个均衡器可以是 10 或 31 个频段。</p></li><li><p>触控栏 TouchBar 支持。</p></li><li><p>分别调整每个应用程序的左右平衡。 还可以选择下混音为单声道，使您可以将所有音频移至左或右声道。</p></li><li><p>设置热键以控制前景应用程序的音量，静音和均衡器。 甚至还有一个热键可以使所有后台应用程序静音。</p></li><li><p>将应用程序音频重新路由到任何音频输出设备。</p></li><li><p>将 iTunes 发送到外部 USB 设备，而其他应用程序则使用 MacBook 的内置扬声器。</p></li><li><p>兼容 macOS 10.11 – 10.15。</p></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517230130.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517231008.png" alt=""></p><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517231008.png"><source id="mp4" src="https://staticz.com/wp-content/uploads/2018/06/soundcontroldemo.m4v" type="video/mp4"></video><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">2.4.3</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedlgh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlgh</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SoundControl </tag>
            
            <tag> 音频管理 </tag>
            
            <tag> HDMI </tag>
            
            <tag> 音频控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VideoProc 3.6 一站式视频编辑软件</title>
      <link href="/VideoProc.html"/>
      <url>/VideoProc.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>快速轻松地编辑，转换和调整大型4K视频，音频和 DVD 的大小。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li><p>唯一全 GPU 加速的视频编辑软件<br>VideoProc 是排名第一的快速视频处理软件，在由英特尔®，AMD® 和 NVIDIA® GPU 完全支持的三级硬件加速方面达到了顶峰，可在不影响质量的情况下提供流畅的（4K）视频编辑和转码。</p></li><li><p>剪切，裁切，合并，效果–简单编辑可放大您的画面<br>通过 GoPro，DJI，智能手机等轻松，无损地处理和修饰您的高清/4K 大型素材。</p></li><li><p>简易和高级编辑全部包含在工具箱中<br>无论您是经验丰富的专业人士还是刚入门的人，4K 视频编辑器都可以帮助您以简化的工作流程编辑 HD/4K 视频。</p></li><li><p>从 iPhone，GoPro，DJI，相机处理 4K/HD 视频<br>VideoProc 可以处理您用 GoPro，DJI，iPhone，Android，便携式摄像机或任何其他 4k 摄像机（DSLR 或无反光镜）拍摄的任何视频。</p></li><li><p>简单但功能强大的屏幕录像机组件<br>对于游戏玩家，体育爱好者，教育工作者和现场爱好者来说，VideoProc 是记录游戏玩法，演示，网络研讨会，Skype 通话，流媒体视频以及创建视频博客，截屏视频，播客，软件评论和视频说明的必备工具。 与您的观众和队友互动。</p></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224314.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224507.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224542.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224602.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224637.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517224815.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/div14-img01.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/div15-face02.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/div15-face03.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/div15-face04.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/div15-face06.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">3.6</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedl5g" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedl5g</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VideoProc </tag>
            
            <tag> 视频编辑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iThoughtsX 5.20.1 优秀的思维导图工具</title>
      <link href="/iThoughtsX.html"/>
      <url>/iThoughtsX.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>iThoughtsX 是一款功能强大的思维导图工具，支持 Windows Mac iOS, 可以跨设备，跨平台同步。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/iThoughtsX_tlhub_screen.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">5.20</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedlpg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlpg</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维导图 </tag>
            
            <tag> 脑图 </tag>
            
            <tag> iThoughtsX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelPowerGadget 3.7.0 CPU 监测工具</title>
      <link href="/IntelPowerGadget.html"/>
      <url>/IntelPowerGadget.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Intel Power Gadget 是因特尔官方出品的一款 CPU 实时监控的小工具。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517220933.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">3.7.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedlri" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlri</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://software.intel.com/content/www/us/en/develop/articles/intel-power-gadget.html" target="_blank" rel="noopener external nofollow noreferrer">IntelPowerGadget 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IntelPowerGadget </tag>
            
            <tag> CPU </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAJViewerMac 1.5 CAJ 文献阅读器</title>
      <link href="/CAJViewerMac.html"/>
      <url>/CAJViewerMac.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>CAJViewer 是光盘国家工程研究中心、清华同方知网(北京)技术有限公司 CAJViewer 系列产品，它充分吸取了当前市场上各种同类主流产品的优点，经过长时间市场调查和系统设计而成，兼容 CAJ 和 PDF 等文件。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517231907.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">1.5</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedm0h" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedm0h</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAJViewer </tag>
            
            <tag> CAJViewerMac </tag>
            
            <tag> CAJ </tag>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BetterZip 4.2.5.1558 功能强大、操作简单的解压缩软件</title>
      <link href="/BetterZip.html"/>
      <url>/BetterZip.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>BetterZip 是一款功能强大、操作简单的解压缩软件。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>支持新系统 Mac OS 10.15 Catalina</li><li>支持超过 30 种存档格式 </li><li>无需解压，快速预览</li><li>强大的AES-256加密，保护您的数据 </li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/newfeatures_2.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517220238.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">4.2.5.1558</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedm5c" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedm5c</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BetterZip </tag>
            
            <tag> 压缩 </tag>
            
            <tag> 解压 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS SDKs</title>
      <link href="/macOS-SDKs.html"/>
      <url>/macOS-SDKs.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>本站持续收集 macOS SDK，方便您下载使用，目前已收集的版本如下：</p><ul><li>10.10</li><li>10.11</li><li>10.12</li><li>10.13</li><li>10.14</li><li>10.15</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517203730.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">10.10 - 10.15</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01bedm9g" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedm9g</a><br>密码: bdai</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> mac </tag>
            
            <tag> SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alfred 4 4.0.9 1144 效率神器</title>
      <link href="/Alfred.html"/>
      <url>/Alfred.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Alfred 是 macOS 上屡获殊荣的应用程序，可通过热键，关键字，文本扩展等功能提高效率。 搜索 Mac 和网络，并通过自定义操作控制 Mac 来提高生产力。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="搜索和浏览"><a href="#搜索和浏览" class="headerlink" title="搜索和浏览"></a>搜索和浏览</h3><ul><li><p>启动应用程序并在 Mac 或 Web 上查找文件。Alfred 了解如何使用 Mac 并优先考虑结果。</p></li><li><p>通过使用热键，关键字并自定义搜索 Mac 和活动历史记录的方式，可以节省大量时间。</p></li><li><p>进入并浏览，预览文件并对其进行操作，而无需将手指从键盘上移开。</p></li></ul><h3 id="输入少，做的多"><a href="#输入少，做的多" class="headerlink" title="输入少，做的多"></a>输入少，做的多</h3><ul><li><p>借助 Alfred 的剪贴板历史记录和代码片段功能，无需一遍又一遍地键入相同的URL或响应。</p></li><li><p>使用剪贴板历史记录可以找到您先前复制的任何文本，图像或文件，然后再次粘贴。</p></li><li><p>创建您自己的代码片段，并输入一个简短的缩写，以将其自动扩展为全文代码片段，从长远来看，您可以节省数小时的输入时间！</p></li></ul><h3 id="扩展和自动化"><a href="#扩展和自动化" class="headerlink" title="扩展和自动化"></a>扩展和自动化</h3><ul><li><p>借助 Alfred 的 Powerpack，可使用功能强大的工作流程来更高效地执行任务，并减少重复的手动任务。</p></li><li><p>将热键，关键字和操作链接在一起以创建自己的工作流程； 无需编写任何代码即可创建工作流。 我们创建者社区已共享的数千种导入工作流。</p></li></ul><h3 id="控制您的音乐"><a href="#控制您的音乐" class="headerlink" title="控制您的音乐"></a>控制您的音乐</h3><ul><li><p>你是老板，通过使用 Alfred 与 macOS 的深度集成来控制 Mac，从而提高工作效率。 迅速对文件和联系人采取措施，控制音乐播放器并调度系统命令。</p></li><li><p>为您的一天增添些乐趣； 借助适用于 iOS 的 Alfred Remote，将 iPhone 或 iPad 变成 Mac  的命令中心。</p></li><li><p>另外，看看其他音乐服务（例如 Spotify）的许多工作流程。</p></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517215227.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517215757.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517215642.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517215006.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517215201.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">4.0.9(1144)</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01befueb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befueb</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Alfred </tag>
            
            <tag> 效率 </tag>
            
            <tag> 增强 </tag>
            
            <tag> Powerpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BetterTouchTool 3.365 鼠标触控板增强工具</title>
      <link href="/BetterTouchTool.html"/>
      <url>/BetterTouchTool.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>BetterTouchTool 是一款功能强大的功能强大的应用程序，可让您自定义增强 Mac 上的各种输入设备。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><p>目前，BetterTouchTool 支持：</p><ul><li>Macbook Trackpad</li><li>Magic Trackpad 1 &amp; 2</li><li>Magic Mouse 1 &amp; 2</li><li>Touch Bar customization</li><li>Siri/Apple Remote</li><li>Normal Mouse Gestures</li><li>Normal Mouse Buttons</li><li>Keyboard Shortcuts</li><li>Key Sequences / Text Triggers</li><li>BTT Remote (iOS) Triggers</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517213434.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517213615.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">3.365</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01befuhe" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befuhe</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 增强 </tag>
            
            <tag> BetterTouchTool </tag>
            
            <tag> 鼠标 </tag>
            
            <tag> 触控板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keka 1.1.29 好用的压缩解压工具</title>
      <link href="/Keka.html"/>
      <url>/Keka.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Keka 是一款 mac 平台上好用的压缩解压工具，支持加密、分卷等实用功能。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>简单强大</li></ul><p>您甚至不需要打开 Keka 来压缩文件，将其保存在扩展坞中并从那里使用它。<br>只需将文件和文件夹拖放到 Dock 图标或 Keka 窗口即可创建它们的压缩包。</p><ul><li>注重隐私</li></ul><p>只需设置密码并创建高度加密的文件即可安全地共享。<br>对 7z 文件使用AES-256加密规范<br>Zip 文件的 Zip 2.0 旧版加密规范。</p><ul><li>分卷压缩</li></ul><p>如果文件确实很大，并且它们不适合您的邮件或服务器，则将它们分成几部分。<br>不用担心，它们仍然可以解压生成您的原始文件:)</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">1.1.29</td></tr><tr><td align="center">2020-5-19</td><td align="center">1.1.28</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01befuna" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befuna</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 压缩 </tag>
            
            <tag> 解压 </tag>
            
            <tag> Keka </tag>
            
            <tag> 分卷 </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paste 2.5.6 剪贴板增强工具</title>
      <link href="/Paste.html"/>
      <url>/Paste.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Paste 是 Mac，iPhone 和 iPad 上全球最受欢迎的剪贴板管理器。它可以存储您复制的所有内容，并使剪贴板在所有设备上井井有条，而无需跳动。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>Paste 相当于上千个剪贴板</li></ul><p>Paste 可以提升你的剪贴板容量并且提供非常舒适的用户界面。</p><ul><li>成为你系统和工作的一部分</li></ul><p>Paste 会保留你复制的一切内容，当你需要时可以轻松访问它们。</p><ul><li>Pinboards</li></ul><p>你可以通过记事板让一切竟然有序，比如新建列表以及按照你喜欢的顺序贴上你喜欢的内容。</p><ul><li>只要你想，就能收到</li></ul><p>没有内容会丢失，因为 Paste 知道它在哪。简单输入几个字，Paste 就会找到你想找的内容。</p><ul><li>在后台工作</li></ul><p>Paste 会在后台工作并且会在菜单栏显示图标，当你需要使用它的时候请使用快捷键或者点击图标即可。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211712.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211755.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517210842.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211303.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211324.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211338.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211447.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517211604.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">2.5.6</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01befv4h" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befv4h</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Paste </tag>
            
            <tag> 剪贴板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pap.er 3.5 专为 Mac 设计的壁纸应用</title>
      <link href="/Pap-er.html"/>
      <url>/Pap-er.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Pap.er 是一款专为 Mac 设计的壁纸应用，拥有它您可以每天享受来自全球新鲜精美的壁纸。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li><p>每日更新</p></li><li><p>最热排行</p></li><li><p>实施更新</p></li><li><p>特色壁纸</p></li><li><p>常驻顶栏</p></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517210324.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">3.5</td></tr></tbody></table><blockquote><p>近期更新：</p></blockquote><ol><li>修复多项已知问题，强烈推荐更新</li><li>壁纸下载速度提升</li><li>兼容 macOS 10.15 Catalina</li><li>当前的随机壁纸可在「我的壁纸」找到及保存</li></ol><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="蓝奏云"><a href="#蓝奏云" class="headerlink" title="蓝奏云"></a>蓝奏云</h3><p>地址: <a href="https://taolu.lanzous.com/b01befuzc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befuzc</a></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://paper.meiyuan.in/" target="_blank" rel="noopener external nofollow noreferrer">Pap.er 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>GeekBench 5.1.1 mac 跑分软件</title>
      <link href="/GeekBench.html"/>
      <url>/GeekBench.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Geekbench 官方版是一款专业的系统检测工具，界面简洁明晰、操作方便快捷，是 mac 平台上最常用的测试程序。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="CPU-跑分"><a href="#CPU-跑分" class="headerlink" title="CPU 跑分"></a>CPU 跑分</h3><p>Geekbench 5 可以测量处理器的单核和多核性能，从检查电子邮件，拍照到播放音乐，甚至一次都可以完成。 Geekbench 5 的 CPU 基准测试可测量包括增强现实和机器学习在内的新应用程序领域的性能，因此您将了解系统与前沿技术的距离。</p><h3 id="图形计算"><a href="#图形计算" class="headerlink" title="图形计算"></a>图形计算</h3><p>使用 Compute Benchmark 测试系统在游戏，图像处理或视频编辑方面的潜力。 通过支持 OpenCL，CUDA 和 Metal API 来测试 GPU 的性能。 Geekbench 5 的新增功能是对下一代跨平台图形和计算 API Vulkan 的支持。</p><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p>Geekbench 5 是专为跨平台比较而设计的，可让您比较设备，操作系统和处理器体系结构之间的系统性能。 Geekbench 5 支持 Android，iOS，macOS，Windows 和 Linux。</p><h3 id="GeekBench-浏览器"><a href="#GeekBench-浏览器" class="headerlink" title="GeekBench 浏览器"></a>GeekBench 浏览器</h3><p>将您的结果上传到 Geekbench 浏览器以与他人共享，或者让全世界知道您的设备可以运行多快（或慢）！ 您可以通过创建一个帐户在一个地方跟踪所有结果，并在任何设备上轻松找到它们。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/macos-result-dark.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/macos-home-dark.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">5.1.1</td></tr><tr><td align="center">2020-5-7</td><td align="center">5.1.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="天翼云"><a href="#天翼云" class="headerlink" title="天翼云"></a>天翼云</h3><p>地址: <a href="https://cloud.189.cn/t/VFVj6frAZ3qa" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/VFVj6frAZ3qa</a><br>密码：kf9a</p><h3 id="套陆专用分享站"><a href="#套陆专用分享站" class="headerlink" title="套陆专用分享站"></a>套陆专用分享站</h3><blockquote><p>建议使用 <a href="https://blog.tlhub.cn/Motrix.html"><code>Motrix</code></a> 或 <code>IDM</code> 等支持多线程下载的工具进行安装</p></blockquote><p>地址: <a href="https://od.cloudops.ml/tlhub.cn/GeekBench/Geekbench_5_5.1.1__blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">https://od.cloudops.ml/tlhub.cn/GeekBench/Geekbench_5_5.1.1__blog.tlhub.cn.dmg</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GeekBench </tag>
            
            <tag> 跑分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Parallels Desktop 15.1.3 47255 Mac 最强大的虚拟机</title>
      <link href="/Parallels-Desktop.html"/>
      <url>/Parallels-Desktop.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="在-Mac-上运行-Windows"><a href="#在-Mac-上运行-Windows" class="headerlink" title="在 Mac 上运行 Windows"></a>在 Mac 上运行 Windows</h3><ul><li><p>在 Mac 虚拟机中跨多个操作系统开发和测试</p></li><li><p>访问 Microsoft Office for Windows 和 Internet Explorer</p></li><li><p>快速：运行 Windows 应用程序不会减慢 Mac 的运行速度</p></li><li><p>将文件、应用程序及更多内容从 PC 快速移动到 Mac®</p></li></ul><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="快速、强大、便捷"><a href="#快速、强大、便捷" class="headerlink" title="快速、强大、便捷"></a>快速、强大、便捷</h3><p>无论您是需要运行无 Mac 版本的 Windows 程序，还是需要从 PC 切换到 Mac 并需要传输数据，Parallels Desktop 都能满足您的需求。</p><h3 id="无缝"><a href="#无缝" class="headerlink" title="无缝"></a>无缝</h3><p>在 MacBook®、MacBook Pro®、iMac®、iMac Pro®、Mac mini® 或 Mac Pro® 上同时使用 Windows 与 macOS®（无需重启）。在 Mac 与 Windows 应用程序之间共享文件和文件夹、复制粘贴图像和文本并拖放文件。</p><h3 id="轻松安装"><a href="#轻松安装" class="headerlink" title="轻松安装"></a>轻松安装</h3><p>Parallels Desktop 会自动检测您开始使用所需的内容，以便您在几分钟内启动并运行。如果您需要 Windows，系统将提示您下载并安装 Windows 10 或选择现有的 Windows、Linux、Ubuntu 或 Boot Camp® 安装。</p><h3 id="速度极快"><a href="#速度极快" class="headerlink" title="速度极快"></a>速度极快</h3><p>图形和资源密集型 Windows 应用程序可以毫不费力地运行，不会减慢 Mac 的运行速度。运行要求最为苛刻的应用程序，如 Adobe® Photoshop®、Visual Studio®、SketchUp® 或 AutoDesk Revit。</p><h3 id="视图任选"><a href="#视图任选" class="headerlink" title="视图任选"></a>视图任选</h3><p>不显示 Windows 但仍在融合 (Coherence) 模式下使用其应用程序。如果您是初次使用 Mac，可以将 Windows 设置为占据整个屏幕，就像是在使用 Windows PC 一样。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517133515.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517133550.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517133611.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200517133637.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-17</td><td align="center">15.1.3(47255)</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="天翼云"><a href="#天翼云" class="headerlink" title="天翼云"></a>天翼云</h3><p>地址: <a href="https://cloud.189.cn/t/jIJBFje63Qjq" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/jIJBFje63Qjq</a><br>密码：4pcv</p><h3 id="套陆专用分享站"><a href="#套陆专用分享站" class="headerlink" title="套陆专用分享站"></a>套陆专用分享站</h3><blockquote><p>建议使用 <a href="https://blog.tlhub.cn/Motrix.html"><code>Motrix</code></a> 或 <code>IDM</code> 等支持多线程下载的工具进行安装</p></blockquote><p><a href="https://od.cloudops.ml/tlhub.cn/Parallels%20Desktop/Parallels_Desktop_15.1.3-47255_Toolbox_3.8.1-2969_by_TNT_blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">https://od.cloudops.ml/tlhub.cn/Parallels%20Desktop/Parallels_Desktop_15.1.3-47255_Toolbox_3.8.1-2969_by_TNT_blog.tlhub.cn.dmg</a></p><h2 id="购买正版"><a href="#购买正版" class="headerlink" title=" 购买正版"></a><i class="fa fa-database" aria-hidden="true"></i> 购买正版</h2><p><a href="http://www.parallels.cn/products/desktop/" target="_blank" rel="noopener external nofollow noreferrer">http://www.parallels.cn/products/desktop/</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Parallels Desktop </tag>
            
            <tag> PD </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boxy SVG 3.38.1 可缩放矢量图形编辑器</title>
      <link href="/Boxy-SVG.html"/>
      <url>/Boxy-SVG.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>SVG 是用于在网络上存储矢量图形的标准格式，如图标，图表，地图，信息图表和插图。Boxy SVG 的目标是为非技术用户以及专业 Web 设计人员和 Web 开发人员创建最佳 SVG 编辑器。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200515153240.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-15</td><td align="center">3.38.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bensib" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bensib</a><br>密码: 2vbi</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Boxy SVG </tag>
            
            <tag> SVG </tag>
            
            <tag> 矢量 </tag>
            
            <tag> 设计 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MWeb 3.3.9 专业的 Markdown 写作、记笔记、静态博客生成软件</title>
      <link href="/MWeb.html"/>
      <url>/MWeb.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>MWeb 是一款专业的 Markdown 写作、记笔记、静态博客生成软件。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="软件本身："><a href="#软件本身：" class="headerlink" title="软件本身："></a>软件本身：</h3><ul><li>使用原生的 macOS 技术打造，追求与系统的完美结合。</li><li>原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。</li></ul><h3 id="Markdown-语法："><a href="#Markdown-语法：" class="headerlink" title="Markdown 语法："></a>Markdown 语法：</h3><ul><li>使用 Github Flavored Markdown 语法，简称 GFM 语法。</li><li>支持表格、TOC、LaTeX、代码块、任务列表、脚注等。</li><li>画图库支持 mermaid, viz, echarts, plantuml, sequence, flow。</li></ul><h3 id="Markdown-辅助："><a href="#Markdown-辅助：" class="headerlink" title="Markdown 辅助："></a>Markdown 辅助：</h3><ul><li>支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内。</li><li>在兼容 Markdown 语法的情况下支持设置图片宽度。</li><li>好用的表格插入和 LaTeX 书写辅助。</li></ul><h3 id="Markdown-输出："><a href="#Markdown-输出：" class="headerlink" title="Markdown 输出："></a>Markdown 输出：</h3><ul><li>支持导出为图片、HTML、Epub、PDF、RTF、Docx。</li><li>支持发布到 Wordpress、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记、Blogger、Medium、Tumblr。</li><li>图片上传服务（图床）支持 Google Photos、Imgur、七牛云、又拍云和自定义的图床服务。</li></ul><h3 id="Markdown-笔记："><a href="#Markdown-笔记：" class="headerlink" title="Markdown 笔记："></a>Markdown 笔记：</h3><ul><li>强大的文档库支持分类树和标签管理文档，文档可归类于多个分类，可以把分类整个导出为 Epub、PDF 和生成静态网站。非常合适用于笔记、个人知识收集、管理和输出。</li><li>快速笔记：随意增加笔记及图片等素材，支持以天为单位把增加的素材组合在一个文档内，方便整理及记录历史收集情况。</li><li>快速搜索：目前已支持全局快捷键调出搜索。</li></ul><h3 id="外部-Markdown-文档："><a href="#外部-Markdown-文档：" class="headerlink" title="外部 Markdown 文档："></a>外部 Markdown 文档：</h3><ul><li>外部 Markdown 文档使用外部模式管理。外部模式使用目录树的方式编辑和管理你的 Markdown 文档，还能很好的支持 gitbook、JekyII、hexo 等等编辑和图片插入。</li></ul><h3 id="更多特性"><a href="#更多特性" class="headerlink" title="更多特性"></a>更多特性</h3><ul><li>自定义编辑器主题</li><li>自定义预览样式（CSS）</li><li>自定义静态网站模板</li><li>拼写检查</li><li>文档历史版本</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/Screen-Shot-1.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/Screen-Shot-2.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/Screen-Shot-3.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/Screen-Shot-4.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/Screen-Shot-5.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-15</td><td align="center">3.3.9</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedlmd" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlmd</a><br>密码: b958</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MWeb </tag>
            
            <tag> Markdown </tag>
            
            <tag> 静态博客 </tag>
            
            <tag> 记笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 VB-2004 官方 MVS (MSDN) 初始镜像 19041.208</title>
      <link href="/Windows-10-2004.html"/>
      <url>/Windows-10-2004.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Windows 10 VB-2004 官方 MVS (MSDN) 初始镜像 19041.208</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">2004 19041.208</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="简体中文-消费者版（初始-19041-208）"><a href="#简体中文-消费者版（初始-19041-208）" class="headerlink" title="简体中文 - 消费者版（初始 - 19041.208）"></a>简体中文 - 消费者版（初始 - 19041.208）</h3><p><strong><em>家庭版、家庭单语言版、教育版、专业版、专业教育版、专业工作站版 (6)</em></strong></p><blockquote><p>下载地址：</p></blockquote><ul><li><p>64 位</p><pre class="line-numbers language-text"><code class="language-text">天翼云: https://cloud.189.cn/t/va6rQbRZrERv磁力链接：ed2k://|file|cn_windows_10_consumer_editions_version_2004_x64_dvd_0c2eefdb.iso|5634521088|2BF3344104ECDB5AF5FD5FD92B289655|/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>32 位</p><pre class="line-numbers language-text"><code class="language-text">天翼云: https://cloud.189.cn/t/I7nEv2iy6Rzi磁力链接：ed2k://|file|cn_windows_10_consumer_editions_version_2004_x86_dvd_f9233032.iso|3717070848|AD7B874F6143FA01F8D5C8298A9FBCD4|/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><blockquote><p>验证</p></blockquote><ul><li><p>64 位</p><pre class="line-numbers language-text"><code class="language-text">MD5:    6bb51e57e7c2ec0c9de7abfff8a9e7a6SHA1:    64940d6fbc0f24971349c8e03be508285ea29722<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>32 位</p><pre class="line-numbers language-text"><code class="language-text">MD5:    8dd86a1a45cd1b0c4cb6daf64e34c067SHA1:    e85c5bba63858b37ecbe8270a308b0369be87d0b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="简体中文-商业版（初始-19041-208）"><a href="#简体中文-商业版（初始-19041-208）" class="headerlink" title="简体中文 - 商业版（初始 - 19041.208）"></a>简体中文 - 商业版（初始 - 19041.208）</h3><p><strong><em>教育版、企业版、专业版、专业教育版、专业工作站版 (5)***</em></strong></p><blockquote><p>下载地址：</p></blockquote><ul><li><p>64 位</p><pre class="line-numbers language-text"><code class="language-text">天翼云: https://cloud.189.cn/t/BfIr6nF3MZby磁力链接：ed2k://|file|cn_windows_10_business_editions_version_2004_x64_dvd_c59a4f91.iso|5527756800|DB83A470A0BC079844A9F553E8C8A44F|/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>32 位</p><pre class="line-numbers language-text"><code class="language-text">天翼云: https://cloud.189.cn/t/QzEruqZje2ai磁力链接：ed2k://|file|cn_windows_10_business_editions_version_2004_x86_dvd_16dd936b.iso|3648514048|B6E6EFE7ACF59E1FA0159F6483EC6B06|/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><blockquote><p>验证</p></blockquote><ul><li><p>64 位</p><pre class="line-numbers language-text"><code class="language-text">MD5:    3c4da086657215c8d2729259db7ef7bdSHA1:    ed65cc6f3b4f90fdbdab949ba6286708e8dcf0f1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>32 位</p><pre class="line-numbers language-text"><code class="language-text">MD5:    25dc7c4974f6caf44ea5f0c89c31c0c5SHA1:    5e8d355db00d647f96e57ab0fa9518752c1e32af<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="MD5-SHA1-值截图"><a href="#MD5-SHA1-值截图" class="headerlink" title="MD5 SHA1 值截图"></a>MD5 SHA1 值截图</h3><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200514115720.png" alt=""></p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><strong><em>注：本文资源下载链接转载至远景论坛 <a href="http://i.pcbeta.com/space-uid-51967.html" target="_blank" rel="noopener external nofollow noreferrer">ananhaid</a> 大佬，大佬辛苦。</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 镜像 </tag>
            
            <tag> Windows 10 </tag>
            
            <tag> Windows </tag>
            
            <tag> 2004 </tag>
            
            <tag> MSDN </tag>
            
            <tag> 微软 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office 2019 for Mac</title>
      <link href="/Office-2019-for-Mac.html"/>
      <url>/Office-2019-for-Mac.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Office 2019 Mac 版下载。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">2019.16.37VL</td></tr><tr><td align="center">2020-5-7</td><td align="center">2019.16.33VL</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://cloud.189.cn/t/nM3yyemaEvam" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/nM3yyemaEvam</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
            <tag> 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transmit 强大的 ftp 客户端</title>
      <link href="/Transmit.html"/>
      <url>/Transmit.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Transmit是一款功能齐全的FTP客户端，兼容FTP，SFTP和TLS/SSL协议。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513194516.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">5.6.3</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedlef" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlef</a><br>密码: dlcu</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Transmit </tag>
            
            <tag> ftp </tag>
            
            <tag> scp </tag>
            
            <tag> 远程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>One Switch 万能开关</title>
      <link href="/One-Switch.html"/>
      <url>/One-Switch.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>One Switch 是由国内知名开发者 TualatriX 带来的最新作品，功能小巧精简，设计优雅，犹如一块多功能的遥控器，通过状态栏快捷菜单即可「一键」快速实现保持亮屏、切换 AirPods、切换黑暗模式等功能。在简单试用后，我毫不犹豫的删除了 Mac 上安装的一些独立小工具，因为 One Switch 近乎完美的实现了 「All in one」。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><p>通过点击顶部菜单栏的应用图标，便可唤出众多快捷开关。将屏幕保持常亮、灵活切换夜间模式、隐藏桌面，或者打开勿扰模式、显示隐藏文件、调整分辨率，这些原本需要多步完成的动作，都可一键搞定。除此之外，开关库还将在迭代更新中不断扩充。<br>目前可以一键完成下列操作:</p><p>● 配置勿扰模式<br>● 打开夜览、原彩显示<br>● 选择耳机连接、播放音乐<br>● 显示器休眠<br>● 锁定键盘、屏幕.<br>● 屏幕清洁<br>● …</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193822.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193648.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193709.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193721.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">1.12</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01behjmf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01behjmf</a><br>密码: 81b2</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> One Switch </tag>
            
            <tag> 开关合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat Premium 老牌强大的数据库管理工具</title>
      <link href="/Navicat-Premium.html"/>
      <url>/Navicat-Premium.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Navicat premium 是一款数据库管理工具。将此工具连接数据库，你可以从中看到各种数据库的详细信息。包括报错，等等。当然，你也可以通过他，登陆数据库，进行各种操作。Navicat Premium 可以让你以单一程式同时连线到 MySQL、SQLite、Oracle 及 PostgreSQL 等，让管理不同类型的数据库更加的方便。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><p>Navicat Premium 结合了其他 Navicat 成员的功能。有了这种连线到不同资料库类型的能力，Navicat Premium 支持在 MySQL、SQLite、Oracle 及 PostgreSQL 之间传输资料。它支持大部分的 MySQL、SQLite、Oracle 及 PostgreSQL 功能，包括预存程序、事件、触发器、函式、检视等。</p><p>Navicat Premium 可以让你简单并快速的在多种资料库系统间传输资料，或传输一份以 SQL 格式及编码设计的纯文字档。</p><p>不同的资料库的批次处理任务也可以设定排程并在指定的时间执行。其他功能包括汇入/汇出精灵、查询建立工具、报表产生器、资料同步、备份、工作排程及更多。</p><p>Navicat 的的功能足以提供专业开发人员的所有需求，但是对资料库伺服器的新手来说又相当容易学习。</p><p>Navicat Premium 有三种平台版本- Microsoft Windows、Mac OS X及Linux。它可以让使用者连接本地/远端服务器、提供一些实用的工具如资料/结构同步、导入导出、备份/回复及报表以协助管理资料的流程。</p><p>Navicat Premium(导航猫数据库管理)是一个可多重连线资料库的管理工具，Navicat Premium(导航猫数据库管理)可以让你以单一程式同时连线到MySQL、SQLite、Oracle 及 PostgreSQL 资料库，让管理不同类型的资料库更加的方便。 　Navicat Premium可以让你简单并快速的在多种资料库系统间传输资料，或传输一份以SQL格式及编码设计的纯文字档。</p><p>不同的资料库的批次处理任务也可以设定排程并在指定的时间执行。其他功能包括汇入/汇出精灵、查询建立工具、报表产生器、资料同步、备份、工作排程及更多。<br>Navicat的功能足以提供专业开发人员的所有需求，但是对资料库伺服器的新手来说又相当容易学习。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513195117.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">15.0.14</td></tr><tr><td align="center">2020-5-13</td><td align="center">15.0.15</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://cloud.189.cn/t/2m6jMrMj2yiy" target="_blank" rel="noopener external nofollow noreferrer">https://cloud.189.cn/t/2m6jMrMj2yiy</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQLServer </tag>
            
            <tag> Navicat </tag>
            
            <tag> Navicat Premium </tag>
            
            <tag> 数据库 </tag>
            
            <tag> Oracle </tag>
            
            <tag> PostgreSQL </tag>
            
            <tag> PG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft Remote Desktop mac 端微软远程连接工具</title>
      <link href="/Microsoft-Remote-Desktop.html"/>
      <url>/Microsoft-Remote-Desktop.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Microsoft Remote Desktop mac 端微软远程连接工具</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513192542.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">10.4.0beta</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01behgid" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01behgid</a><br>密码: 8jsg</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程连接 </tag>
            
            <tag> Remote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Folx Mac 上好用的下载工具</title>
      <link href="/Folx.html"/>
      <url>/Folx.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Folx 是一款下载管理软件，支持几乎所有的浏览器下载，是一款非常小巧，但是功能非常强大的下载工具。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>互联网下载管理器</li></ul><p>Folx 拥有与 Retina 显示屏支持的现代界面。它提供了独特的分类和存储下载内容的系统，并预览了下载的文件。</p><ul><li>智能标记系统</li></ul><p>任何下载都可以在 Folx 中分配一个标签或多个标签。这样 Folx 将在 Tags 面板中对下载进行排序。通过点击任何标签，您将显示其他标有相同标签的文件。感谢您的标记，您可以轻松地在 Mac 上找到任何下载的文件。</p><ul><li>独特的功能只在Folx中提供</li></ul><p>Folx 可以在 2 个线程中拆分下载，以加快下载速度; 可以自动恢复中断下载; 提供了多种添加下载任务的方式。</p><ul><li>Folx对你的浏览器很友善</li></ul><p>如果您遇到想要在网上下载的内容，Folx 可以自动捕获下载内容，或者只捕获特定类型的文件以供下载。Folx 还具有一个浏览器扩展，该扩展可以下载全部选项，下载选定内容并使用 Folx下 载。支持的浏览器有：Safari，Firefox，Opera，Chrome。</p><ul><li>在 Folx 中输入关键字</li></ul><p>它很容易成为最好的洪流搜索应用程序，因为没有你离开它的界面，Folx将一次搜索洪流追踪器的广泛列表。</p><ul><li>快速下载</li></ul><p>Folx PRO 可以将下载分成多达 20 个线程，这可以显著提高下载速度。</p><ul><li>速度控制</li></ul><p>通过手动调整或允许 Folx 自动执行此操作以实现最佳流量分配，获得对下载速度的全面控制。</p><ul><li>计划下载</li></ul><p>您可以选择最适合的时间开始下载，并设置 Folx 在完成下载后的行为方式：关闭系统，切换到休眠模式，或者直接退出 Folx。</p><ul><li>iTunes 集成</li></ul><p>所有使用 Folx 下载的音乐和视频都可以自动转到iTunes播放列表，并将名称指定为下载的标签。</p><ul><li>记住登录名和密码</li></ul><p>当从需要认证的网站开始新下载时，您可以要求Folx记住登录名和密码。下次 Folx 从本网站下载时，您不需要输入登录名和密码。您也可以在Folx中保留FTP和HTTP网站的密码。免费版 Folx 让你保存两个条目。也支持需要Web认证的网站。</p><ul><li>从 Internet 下载视频</li></ul><p>通过 Folx 下载网络上的视频，可以为下载的视频设置格式。您还可以下载年龄限制和私人视频。当你实际上不需要视频并且只想从中获得音轨时，Folx 就会有很大的帮助！下载可以在视频发现后立即手动执行，也可以按照特定时间表执行。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193350.png"><source id="mp4" src="https://mac.eltima.com/imgnew/products/folx/video/folxSearchFeature.mp4" type="video/mp4"></video><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513193504.png"><source id="mp4" src="https://youtu.be/5d5ygtd9Cuw" type="video/mp4"></video><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-13</td><td align="center">5.18</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01befujg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01befujg</a><br>密码: f542</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Folx </tag>
            
            <tag> Torrent </tag>
            
            <tag> 下载 </tag>
            
            <tag> 种子 </tag>
            
            <tag> 磁链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Pages 建设个人博客指南</title>
      <link href="/Hexo.html"/>
      <url>/Hexo.html</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>hexo 是一款快速、简洁且高效的博客框架，利用 hexo 可以快速建立自己的博客站点，其主题众多，可定义性极强，开发团队更新活跃，是目前最主流的博客建站框架之一。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li><p>超快速度</p><p>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p></li><li><p>支持 MarkDown</p><p>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p></li><li><p>一键部署</p><p>只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</p></li><li><p>插件和扩展性</p><p>强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</p></li></ul><h4 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h4><h4 id="安装-Node"><a href="#安装-Node" class="headerlink" title="安装 Node"></a>安装 Node</h4><p>去官网或者中文网下载安装双击安装即可。</p><ul><li><a href="http://nodejs.cn/download/" target="_blank" rel="noopener external nofollow noreferrer">nodejs 中文网</a></li><li><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener external nofollow noreferrer">nodejs 官网</a></li></ul><h4 id="安装-hexo-框架"><a href="#安装-hexo-框架" class="headerlink" title="安装 hexo 框架"></a>安装 hexo 框架</h4><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g$ hexo init blog$ <span class="token function">cd</span> blog$ <span class="token function">npm</span> <span class="token function">install</span>$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>命令解释</em></strong></p><ul><li>第一行全局安装 hexo 框架</li><li>第二行初始化 hexo 项目到 blog 目录</li><li>第三行进入 blog 目录</li><li>第四行安装依赖</li><li>第五行本地启动 hexo 服务，默认端口为 4000，可以利用 -p 参数指定，例如 <code>hexo server -p 1234</code></li></ul><p><strong><em>注：</em></strong></p><p>如果安装过慢导致失败，可以更换淘宝的 npm 源，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"> $ <span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>验证是否设置成功：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果返回如下结果则设置成功：</p><pre class="line-numbers language-bash"><code class="language-bash">https://registry.npm.taobao.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Hexo 安装完成后，具体的使用方法可以在官网查阅 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener external nofollow noreferrer">Hexo Docs</a>。</p><p>这里简单提下双线部署的问题，后面会详细介绍。为什么要双线部署，因为 GitHub 的国内环境并不是太好，访问非常慢，影响体验，因此我们选择 Coding + GitHub 双线部署的方式，国内流量走 Coding 的 Pages，国外就走 GitHub 的 Pages，这样一来，我们的博客无论境内境外都能拥有不错的访问速度和延迟。</p><p>双线部署需要配置 blog 的 <code>_config.yml</code> 文件，如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span>     <span class="token key atrule">coding</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//e.coding.net/iamzhl/iamzhl.coding.me.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span>    <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/athlonreg/athlonreg.github.io.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中仓库地址改为自己的，在部署之前去 GitHub 和 Coding 开一个仓库(GitHub 仓库名为<code>用户名.github.io</code>)，将链接修改一下就可以了。以上做好之后，在 blog 目录下执行以下命令将站点部署到仓库：</p><pre class="line-numbers language-bash"><code class="language-bash">$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署完成之后，前往 GitHub 仓库和 Coding 仓库打开 Pages 服务，就可以通过域名在线访问了。</p><h5 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h5><p>在建立的仓库点击 <code>Settings</code> 按钮进入仓库设置页面：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/a21ef36f2881182e.png" alt=""></p><p>然后滑到最下面找到 <code>GitHub Pages</code> 项：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/4cf887914cdb7ecd.png" alt=""></p><p>将 Source 改为 master branch，然后 GitHub 就会给一个名为 <code>用户名.github.io</code> 的二级域名作为的你博客网址。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/f201c1eae13c2bc8.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/a5cb3929e612e385.png" alt=""></p><p>这里由于我之前绑定过自定义域名，因此名称有所不同，请知悉。</p><h5 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h5><p>Coding 的 Pages 服务目前需要实名认证才可以用，实名完后需要在 <code>项目设置</code> -&gt; <code>功能开关</code> 里面打开 <code>持续集成</code> 和 <code>持续部署</code> 两项功能：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/YdtMse.png" alt=""></p><p>然后在项目的 <code>持续部署</code> 里面就可以设置静态网站(也就是 Pages 服务)了。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/YdtkZ9.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/d08a04ef8ca02772.png" alt=""></p><p>点击 <code>立即发布静态网站</code>，然后填写下面的相关信息点击保存</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/5367b5df2c83d1f5.png" alt=""></p><p>此时，Coding 就会给我们列出当前已经设置好的访问地址，首次发布时，需要手动点击 <code>立即部署</code> 按钮。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/dbb7162a880b910b.png" alt=""></p><h4 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h4><blockquote><p>主题官网 <a href="https://hexo.io/themes/" target="_blank" rel="noopener external nofollow noreferrer">Hexo Themes</a></p></blockquote><p>目前最常用也是最容易配置，维护最频繁的要数 Next 主题，地址为 <a href="https://github.com/next-theme/hexo-theme-next" target="_blank" rel="noopener external nofollow noreferrer">Next</a></p><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cd</span> blog$ <span class="token function">git</span> clone https://github.com/next-theme/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h4><p>安装完成后，Next 主题就在 blog 目录下的 themes 文件夹内，目录名为 next，修改 blog 目录下的 <code>_config.yml</code> 文件，将 theme 项改为 next。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Extensions</span><span class="token comment" spellcheck="true">## Plugins: https://hexo.io/plugins/</span><span class="token comment" spellcheck="true">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改完成后，就可以看看效果了。</p><h4 id="定制主题"><a href="#定制主题" class="headerlink" title="定制主题"></a>定制主题</h4><p>将主题启用完成之后，开始修改主题配置，定制自己的专属 Next。对于 Hexo 主题的配置，基本都是修改主题目录下 <code>_config.yml</code> 文件，每一项配置都有相应的注释解释，Next 官方也出了一篇文章，可以参考<a href="https://theme-next.js.org/docs/getting-started/" target="_blank" rel="noopener external nofollow noreferrer">Getting Started</a>。</p><h3 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h3><p>在域名的选择上，建议大家注册 .com、.cn、.net 等国际域名或国内域名，因为这种域名对后面的备案、SEO 优化等会带来诸多方便，比如 tlhub.cn 就是我注册的国内域名。如果你是一枚羊毛党，就想白嫖建站，那么可以利用 <a href="https://freenom.com" target="_blank" rel="noopener external nofollow noreferrer">Freenom</a> 来注册免费的 .ml、.gq、.cf、.tk 域名，需要谷歌邮箱。当然还是推荐去阿里云、腾讯云去注册常见的顶级域名，目前腾讯云有活动，.cn 域名首年十多块，还是挺便宜的，不过备案的话腾讯云要求企业认证，所以可以在阿里云购买，然后万能的 X 宝搜索 XX云服务号 就可以了。</p><h4 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a>DNS 解析</h4><p>首选 <a href="https://www.dnspod.cn/" target="_blank" rel="noopener external nofollow noreferrer">DNSPod</a>，其免费强大的 DNS 解析可以说是首屈一指的，而且现在活动个人专业版 DNS 解析套餐首年 6 块，当然了，个人用其实免费版也够了。</p><p>进入 DNSPod 控制台，依次进入 DNS 解析 -&gt;  我的域名 -&gt; 添加域名，将自己的域名添加进来，添加之后域名就出现在列表中了，但是状态是 DNS 错误，这时我们需要去域名商修改 NS 记录，记录值为提示信息后面的弹出框：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/2a534bf505221d76.png" alt=""></p><p>以阿里云为例，在域名管理控制台点击你的域名后面的管理，然后在跳转的页面中点击修改 DNS：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/3b60c49821b83134.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/d1825e929bc39ccb.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/7.png" alt=""></p><p>将前面 DNSPod 提示的两条记录修改好确认保存回到 DNSPod，点击提示信息的刷新，状态就变为正常了。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/6.png" alt=""></p><p>点击域名进入解析列表：</p><p>设置两条 CNAME 解析记录</p><table><thead><tr><th align="center">主机记录</th><th align="center">记录类型</th><th align="center">线路类型</th><th align="center">记录值</th><th align="center">权重</th><th align="center">MX 优先级</th><th align="center">TTL (秒)</th></tr></thead><tbody><tr><td align="center">blog</td><td align="center">CNAME</td><td align="center">默认</td><td align="center">ytenc2.coding-pages.com.</td><td align="center">-</td><td align="center">-</td><td align="center">600</td></tr><tr><td align="center">blog</td><td align="center">CNAME</td><td align="center">境外</td><td align="center">athlonreg.github.io.</td><td align="center">-</td><td align="center">-</td><td align="center">600</td></tr></tbody></table><p>主机记录 blog 表示二级域名解析，通过 blog.tlhub.cn 访问。记录类型 CNAME 表示解析到某个域名，线路类型为默认的记录值设为你的 Coding Pages 给出的域名，为境外的设置为 GitHub Pages 给出的域名，注意记录值后面有个 <code>.</code>。</p><p>解析记录设置好，还需要去两个仓库设置一下域名绑定。</p><h4 id="GitHub-1"><a href="#GitHub-1" class="headerlink" title="GitHub"></a>GitHub</h4><p>在 GitHub 仓库的设置页面找到 GitHub Pages 部分，在 Custom domain 下面的输入框输入自己刚才解析的域名，例如 <code>blog.tlhub.cn</code> ：</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/8.png" alt=""></p><p>GitHub 后台会自动帮你申请 SSL 证书，过小一会刷新一下页面看到如上图所示的 <code>Your site is published at https://xxx.xxx.xxx/</code> 就代表 GitHub 自定义域名成功了。</p><h4 id="Coding-1"><a href="#Coding-1" class="headerlink" title="Coding"></a>Coding</h4><p>在设置 Coding 的自定义域名之前请先将前面解析的境外记录暂停掉，否则 Coding 申请证书失败，无法正常使用 https，暂停之后，去 Coding 仓库的持续部署 -&gt; 静态网站，点击右侧的设置按钮进入设置页面，在下方的自定义域名部分输入自己的域名，点击绑定，Coding 会自动申请证书，过一小会刷新页面就会发现证书申请成功了，勾选 <code>强制 HTTPS</code> 即可。</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/9.png" alt=""></p><p>绑定完成之后就可以去 DNSPod 将刚才暂停的境外记录重新打开，这样就完成了博客的双线部署。</p><h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>如果有备案的打算，那么建议将备案放在最前面，因为后面备案的话要求关站，当然了，咱们的二级域名可以忽略，只需要将 <code>www</code> 和 <code>@</code> 根解析停掉就可以了。</p><h3 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h3><p>如果你想用免费的 CDN 的话，那么 CloudFlare 将是不二选择，其提供的一站式的 HTTPS + CDN + DDOS 等服务，而且免费，当然了国内目前速度不太好。</p><p>愿意为流量付费的可以考虑下面几个 CDN 加速</p><ul><li>百度云加速</li><li>又拍云</li><li>腾讯与</li></ul><h3 id="另外几个托管方案"><a href="#另外几个托管方案" class="headerlink" title="另外几个托管方案"></a>另外几个托管方案</h3><h4 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h4><p><a href="https://www.netlify.com/" target="_blank" rel="noopener external nofollow noreferrer">Netlify</a> 是一个主要做 CI/CD 的平台，也可以用来部署静态网站，而且其与 GitHub 拥有无缝的授权链接，结合持续集成的理念，配合自动化的 SSL 证书申请，也是一个非常不错的选择。</p><h4 id="fast-io"><a href="#fast-io" class="headerlink" title="fast.io"></a>fast.io</h4><p><a href="https://fast.io" target="_blank" rel="noopener external nofollow noreferrer">fast.io</a> 也可以用来托管静态网站，其也可以与 GitHub 授权链接，自动同步，自动SSL。</p><h3 id="托管方案对比"><a href="#托管方案对比" class="headerlink" title="托管方案对比"></a>托管方案对比</h3><p>说了这么多，到底哪个好？下面是我基于前面介绍的四种方式部署的站点，大家可以打开体验一下，自行对比。</p><table><thead><tr><th align="center">网站名称</th><th align="center">部署方式</th><th align="center">访问地址</th></tr></thead><tbody><tr><td align="center">套陆的部落阁</td><td align="center">Coding + Pages + DNSPod</td><td align="center"><a href="https://blog.tlhub.cn">https://blog.tlhub.cn</a></td></tr><tr><td align="center">套陆的部落阁</td><td align="center">Netlify</td><td align="center"><a href="https://www.hackintosh.online/" target="_blank" rel="noopener external nofollow noreferrer">https://www.hackintosh.online/</a></td></tr><tr><td align="center">套陆的部落阁</td><td align="center">Fast.io</td><td align="center"><a href="https://tlhub.imfast.io" target="_blank" rel="noopener external nofollow noreferrer">https://tlhub.imfast.io</a></td></tr><tr><td align="center">套陆的部落阁</td><td align="center">CloudFlare</td><td align="center"><a href="https://www.cloudops.ml" target="_blank" rel="noopener external nofollow noreferrer">https://www.cloudops.ml</a></td></tr></tbody></table><h3 id="关于-CloudFlare-的几项配置"><a href="#关于-CloudFlare-的几项配置" class="headerlink" title="关于 CloudFlare 的几项配置"></a>关于 CloudFlare 的几项配置</h3><p>这里将我自己之前用的配置截图说明：</p><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185617.png" alt=""></p><h4 id="SSL-TLS"><a href="#SSL-TLS" class="headerlink" title="SSL/TLS"></a>SSL/TLS</h4><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185641.png" alt=""></p><h4 id="速度"><a href="#速度" class="headerlink" title="速度"></a>速度</h4><ul><li><p>优化</p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185726.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185831.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185902.png" alt=""></p><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513185956.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513190022.png" alt=""></p><h4 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h4><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513190053.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513190105.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200513190155.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Pages </tag>
            
            <tag> blog </tag>
            
            <tag> 建站 </tag>
            
            <tag> 个人网站 </tag>
            
            <tag> 博客 </tag>
            
            <tag> Coding </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CarbonCopyCloner 5.1.17 比时间机器更好用的系统备份还原工具</title>
      <link href="/CarbonCopyCloner.html"/>
      <url>/CarbonCopyCloner.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Carbon Copy Cloner 简称 CCC，是 mac 上的硬盘克隆、同步、备份的最佳工具。你可以用它来执行计划任务、增量备份、整盘克隆恢复等功能。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>硬盘克隆</li><li>硬盘同步</li><li>硬盘备份</li><li>硬盘恢复</li><li>增量备份</li><li>计划任务</li><li>高速备份</li><li>高速还原</li><li>易于使用</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512203030.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512203052.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512203204.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-15</td><td align="center">5.1.17</td></tr><tr><td align="center">2020-5-7</td><td align="center">5.1.16</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedlzg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlzg</a><br>密码: b4mp</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CarbonCopyCloner </tag>
            
            <tag> CCC </tag>
            
            <tag> 备份 </tag>
            
            <tag> 时光机 </tag>
            
            <tag> 时间机器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GenI2C 自动生成 I2C 热补丁</title>
      <link href="/GenI2C.html"/>
      <url>/GenI2C.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>GenI2C 是一个自动的 SSDT 热补丁生成工具，让你的 ACPI 表适配 VoodooI2C，出自 <a href="https://github.com/williambj1" target="_blank" rel="noopener external nofollow noreferrer">Bat</a> 大佬</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li><p>VoodooI2C 信息</p><ul><li>加载状态</li><li>加载的目标驱动</li><li>提取日志</li><li>工作模式 (APIC, GPIO, 轮询)</li><li>显示 APIC/GPIO Pin</li></ul></li><li><p>生成 SSDT</p><ul><li>使用 External 来保持原生 Bios APIC Pin / GPIO Pin 注入</li><li>生成 I2C 总线速率补丁</li><li>生成 Skylake 架构 I2C 控制器补丁 (开发中🚧)</li><li>在需要手动计算 GPIO Pin 时自动生成 GpioInt</li><li>支持轮询模式 (只能使用 VoodooI2CHID)</li></ul></li><li><p>工具</p><ul><li>ACPI 反编译器</li></ul></li><li><p>VoodooI2C 诊断</p><ul><li>检查 CPU 架构支持</li><li>AppleIntelLpssI2C.kext/AppleIntelLpssI2CController.kext 屏蔽检测</li><li>检查 VoodooI2C 状态</li><li>检查 Magic Trackpad 2 模拟引擎状态</li><li>分析 VoodooI2C 日志</li></ul></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-12</td><td align="center">1.3.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedlvc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlvc</a><br>密码: 9ly5</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/williambj1/GenI2C" target="_blank" rel="noopener external nofollow noreferrer">GenI2C</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> GenI2C </tag>
            
            <tag> I2C </tag>
            
            <tag> 触摸板 </tag>
            
            <tag> SSDT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora 所见即所得的 Markdown 编辑器</title>
      <link href="/Typora.html"/>
      <url>/Typora.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是完全免费的。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>数学公式</li></ul><p>Typora 对于 [公式] 语法支持的非常完善，内置的渲染引擎堪称完美</p><ul><li>图片</li></ul><p>Typora 对于图片渲染的支持也十分到位，可以直接拖拽图片，支持 html 语法，所以可以进行缩放等操作。</p><ul><li>代码块</li></ul><p>代码展示是必不可少的功能，高亮显示也是完美。</p><ul><li>流程图</li></ul><p>Typora 可以直接在 markdown 中画流程图，而且语法简洁易懂。</p><ul><li>实时预览</li></ul><p>当你离开正在编辑的有格式的文本段后，Typora 会自动隐藏 Markdown 标记，只留下「所见即所得」的美妙。他们把这称为 Hybrid View。</p><ul><li>emoji 表情</li></ul><p>在 Typora 中，你可以用 :emoji: 的形式来打出 emoji，软件会自动给出图形的提示，还是比较好用的。</p><ul><li>LaTeX</li></ul><p>Typora 原生支持 LaTeX 语法。</p><ul><li>等等。。。</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512201207.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-12</td><td align="center">0.9.9.32.1</td></tr><tr><td align="center">2020-5-7</td><td align="center">0.9.9.28.5</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedlcd" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedlcd</a><br>密码: 4gjk</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> 所见即所得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ScreenFlow 强大的录屏软件</title>
      <link href="/ScreenFlow.html"/>
      <url>/ScreenFlow.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>ScreenFlow 是一款适用在 Mac 上的屏幕录制和编辑，ScreenFlow 是一款非常出色的屏幕录制应用程序，它可以记录任何内容，并在之后为您提供大量的编辑选项。ScreenFlow 具有最佳的屏幕录制功能 - 即使在视网膜显示屏上也是如此。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>多屏幕录制</li></ul><p>有时候一个屏幕是不够的！无论是你需要一个更大一点的空间，还是想一次显示多个程序窗口，还是你只是想录制你的所有显示器，现在你可以！</p><ul><li>时间轴工具面板</li></ul><p>抓手，缩放，刻刀和轨道选择现在降临到ScreenFlow中了！使用快捷键切换你的指针功能是你更加容易地导航时间轴，进行快速的轨道分割以及选择时间轴上的全部图层！</p><ul><li>剪辑编辑器</li></ul><p>在新的剪辑编辑中预览媒体剪辑并进行初剪。一旦你验证了你的媒体并修剪到想要的尺寸就可以直接把结果剪辑拖到时间轴上。</p><ul><li>代理</li></ul><p>如果你想在ScreenFlow中编辑大尺寸分辨率的文件，现在你可以编辑一个代理取代它！这是什么意思？你可以比以往任何时候都快地编辑和播放更加高要求的项目。</p><ul><li>新的鼠标指针点击特效</li></ul><p>我们已经更新了在屏幕录制属性中的雷达点击特效！调整尺寸，颜色，时长和模糊来创建完美的点击自定义。</p><ul><li>性能增强</li></ul><p>ScreenFlow 9改进了后台性能确保你使用ScreenFlow的体验是最好的。更新了捕获卡支持，缩略图改进和手动媒体管理等等。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512200712.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-12</td><td align="center">9.0.3</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedl3e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedl3e</a><br>密码: dh3u</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ScreenFlow </tag>
            
            <tag> 录屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks 科学上网工具</title>
      <link href="/Shadowsocks.html"/>
      <url>/Shadowsocks.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Shadowsocks 也称 SS、酸酸乳、小飞机、纸飞机、影梭，是目前主流的科学上网工具。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512195543.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">1.9.4</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedl0b" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedl0b</a><br>密码: fgc1</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener external nofollow noreferrer">ShadowsocksX-NG</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> SS </tag>
            
            <tag> 酸酸乳 </tag>
            
            <tag> 小飞机 </tag>
            
            <tag> 纸飞机 </tag>
            
            <tag> 影梭 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sketch 66 轻量易用的矢量设计工具</title>
      <link href="/Sketch.html"/>
      <url>/Sketch.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Sketch 是一款轻量、易用的矢量设计工具，让 UI 设计更简单，更高效。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="为-Web-和-UI-设计"><a href="#为-Web-和-UI-设计" class="headerlink" title="为 Web 和 UI 设计"></a>为 Web 和 UI 设计</h3><ul><li>Web 和 iOS 的设计模板标配</li><li>复制 CSS 样式到剪贴板（包括梯度）</li><li>切片：将出口作为画布上的图像区域</li><li>960 默认网格，与更先进的网格选项的支持</li><li>创建一个文档内的多个页面</li><li>标准响应网页设计画板</li></ul><h3 id="用于图标设计师"><a href="#用于图标设计师" class="headerlink" title="用于图标设计师"></a>用于图标设计师</h3><ul><li>画板：每个都是自己的小帆布- iOS的图标模板</li><li>像素网格</li><li>像素效果，如高斯和运动模糊</li><li>舍入到最近的像素边缘</li></ul><h3 id="检查器"><a href="#检查器" class="headerlink" title="检查器"></a>检查器</h3><p>右侧的检查器能让你对正在编辑的图层——有时是正在使用的工具——进行参数调整。当你选中一个图层时，你会发现检查器被划分为几个区域。</p><h3 id="通用属性"><a href="#通用属性" class="headerlink" title="通用属性"></a>通用属性</h3><p>通用图层式样都在顶端区域：图层所在位置，透明度，混合模式以及几个特殊选项——比如调整矩形内角半径和多边形的不同点模式。</p><h3 id="样式属性"><a href="#样式属性" class="headerlink" title="样式属性"></a>样式属性</h3><p>边框和填充属性都有他们独自的区域，你可以勾选左上方的小方框展开他们，并显示出具体的选项。如果你点击颜色按钮，你会发现检查器滑倒一边，出现新的专门的颜色检查器，你只需要单击顶端的“后退”按钮便会回到主检查器。当你选中了其他图层，同样会自动回到主检查器。</p><h3 id="图层列表"><a href="#图层列表" class="headerlink" title="图层列表"></a>图层列表</h3><p>图层列表列出了所在页面的所有图层(和切片)，每个涂层都会有一个小小的预览。你可以在这里：查看涂层是否被锁定，不可见，使用了蒙板或标记为可导出；重新排列图层，或者给图层添加布尔运算，比如减去顶层形状；对图层进行建组或者重命名来管理他们。</p><h3 id="多页面操作"><a href="#多页面操作" class="headerlink" title="多页面操作"></a>多页面操作</h3><p>Sketch 支持多页面操作，你可以在图层列表上面的按钮里面添加/删除或者转换到其他页面（或者用键盘上的 Page Up/Page Down 来切换）。图层列表始终只会显示当前页面的图层。</p><h3 id="画板"><a href="#画板" class="headerlink" title="画板"></a>画板</h3><p>在图层列表里，有白色背景一栏的便是画板，你可以把画板视为设计中的顶层对象，所以一个画板不能被嵌入另一个画板。</p><h3 id="蒙版"><a href="#蒙版" class="headerlink" title="蒙版"></a>蒙版</h3><p>在图层列表里，那些使用了蒙版的图层名前会有一个小点，它的蒙版则是底下紧接着不带小点的图层。了解更多关于蒙版。</p><h3 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h3><p>每个图形都可以包含多个子路径，他们会以组的形式呈现在图层列表中，伴随一个下拉箭头显示具体的子路径。每一层子路径都可以单独设置布尔运算，决定和它的下一图层以什么方式组合。图层列表能清晰的展现子路径的组合方式，同时方便你随时调整更改。</p><h3 id="符号和共享式样"><a href="#符号和共享式样" class="headerlink" title="符号和共享式样"></a>符号和共享式样</h3><ul><li><p>符号是一种特殊的组，他们可以出现在文件的多个地方。符号会以紫色文件夹图标呈现在涂层列表中——正常编组则是蓝色的文件夹。了解更多关于符号。</p></li><li><p>共享式样可以使多个对象（图形以及文本）的式样保持一致，如果一个图形或者一段文本使用了共享式样，他们的预览小图标会显示成紫色，而不是标准的灰色。了解更多关于共享式样。</p></li></ul><h3 id="工具栏"><a href="#工具栏" class="headerlink" title="工具栏"></a>工具栏</h3><ul><li><p>Sketch 的工具栏涵盖了你创作当中所需要的所有工具。</p></li><li><p>在默认工具栏中，第一组工具是用来添加新图层的：图形、图片、符号等等。</p></li><li><p>编组 (Group) 和取消编组 (Ungroup) 能让你有条例的组织文件。</p></li><li><p>接下来的几个工具则都是用来编辑现有图层：旋转 (Rotate)，变形 (Transform)， 通过布尔运算来合并图层，以及在图层列表中上移或下移图层。</p></li><li><p>工具栏最后的导出(Export) 按钮 同时也是一个切片工具，你可以在这将你的作品导出为一个或多个位图或者矢量文件。</p></li><li><p>不同于其他绘图应用，Sketch把常用工具放在顶端的工具栏，而不是垂直排列的工具箱，但如果需要，你可以通过右击工具栏，***“定制工具栏…” (Customize toolbar…) 来添加工具和快捷键。</p></li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519211748.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512194812.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-19</td><td align="center">66</td></tr><tr><td align="center">2020-5-7</td><td align="center">65</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedkyj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedkyj</a><br>密码: bhr9</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 矢量 </tag>
            
            <tag> 设计 </tag>
            
            <tag> Sketch </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UEFITool 专业高效的 BIOS 图形化软件</title>
      <link href="/UEFITool.html"/>
      <url>/UEFITool.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>UEFITool 是一款专业高效的 BIOS 图形化软件，便捷好用，无需用户具备专业人员的操作知识即可操作。软件功能全面，支持 ROM、BIN、CAP 、BIO、FD、WPH 和 EFI 等类型的 BIOS 映像文件，可以查看 BIOS 文件的结构化视图和详细信息，例如名称、类。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>只支持常用的 MD5、SHA1、CRC32 算法</li><li>UEFITool 支持多个文件或文件夹拖放操作</li><li>支持参数启动(参数为一个或多个文件或文件夹路径)</li><li>支持保存个人设置(默认保存在注册表，如果存在同名 ini 文件，则保存在 ini 文件)</li><li>支持哈希值比较(实际上是字符串查找功能)</li><li>支持停止、重新开始计算操作</li><li>支持 Windows7 任务栏进度条效果</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">A57</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedkqb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedkqb</a><br>密码: 1njg</p><p>包含的版本：</p><ul><li>Windows</li><li>Linux</li><li>macOS</li></ul><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/LongSoft/UEFITool0" target="_blank" rel="noopener external nofollow noreferrer">UEFITool</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEFITool </tag>
            
            <tag> UEFI </tag>
            
            <tag> BIOS </tag>
            
            <tag> 刷 BIOS </tag>
            
            <tag> ROM </tag>
            
            <tag> EFI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Etcher 1.5.90 强大的镜像刻盘工具</title>
      <link href="/Etcher.html"/>
      <url>/Etcher.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Etcher 是一款强大的镜像烧录工具，支持 Linux、macOS、Windows</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>傻瓜式操作，简单方便；</li><li>支持 img, iso, zip, bz2, dsk, etch, gz, hddimg, raw, xz 等；</li><li>支持自动识别设备；</li><li>开源免费，安全无毒，使用放心。</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://www.balena.io/static/steps-8006dca57323756b1b84fb9408742409.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512192620.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512192642.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-21</td><td align="center">1.5.90</td></tr><tr><td align="center">2020-5-14</td><td align="center">1.5.89</td></tr><tr><td align="center">2020-5-13</td><td align="center">1.5.88</td></tr><tr><td align="center">2020-5-12</td><td align="center">1.5.87</td></tr><tr><td align="center">2020-5-12</td><td align="center">1.5.86</td></tr><tr><td align="center">2020-5-12</td><td align="center">1.5.63</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bedkni" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bedkni</a><br>密码: dfj1</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/balena-io/etcher" target="_blank" rel="noopener external nofollow noreferrer">etcher 官网</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Etcher </tag>
            
            <tag> balenaEtcher </tag>
            
            <tag> 烧录 </tag>
            
            <tag> 刻盘 </tag>
            
            <tag> 镜像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDF Expert 2.5.6 快速、轻巧、易用的 PDF 编辑器</title>
      <link href="/PDF-Expert.html"/>
      <url>/PDF-Expert.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>轻松在 MAC 上完成 PDF 编辑、阅读、批注、编辑文本、添加照片、填写表单、签署合同、合并 PDF 文档以及加密保护，只需轻轻点击几下即可，前所未有的体验。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>阅读 PDF 文档</li></ul><p>行云如水！阅读 PDF 文档非常流畅，不管你的文件有多大。</p><ul><li>编辑 PDF 文档</li></ul><p>以简单快速度编辑 PDF 文档并快速签署文件或协议。</p><ul><li>注释 PDF 文档</li></ul><p>强大的功能而且简单易用的工具，只需要几次点击即可标记注释。</p><ul><li>签署 PDF 文档</li></ul><p>以超快速度签名文档，而且很简单很容易为您的 PDF 签署个性化签名。</p><ul><li>填写 PDF 表单</li></ul><p>填写 PDF 表单将会给你提供更好的体验和更快速的填写！</p><ul><li>合并 PDF 文档</li></ul><p>可以快速将不同的多个 PDF 文档合并成一个文档方便快捷。</p><ul><li>迄今为止，一款超简单的 PDF 编辑器</li></ul><p>快速编辑PDF文档、图片、链接和签名。修复问题文档、更改合同标志、修改您的简历，使用它你只需要几秒钟就可以搞定！</p><ul><li>超级快的 PDF 阅读器</li></ul><p>阅读PDF文档，不管是小文件或 2000 页的报告文档，都将会平滑滚动和快速搜索操作。它阅读速度非常惊人，任何一个 PDF 文档你都将会瞬即打开，快速进行编辑。</p><ul><li>强大的 PDF 文档共享</li></ul><p>通过简单的方式将你的PDF文档发送给客户、同事和亲人, 它拥有非常出色的共享功能，可在你的苹果设备之间轻松文档共享。你还可以为您的机密文件设置一个访问密码。</p><ul><li>IPHONE、IPAD、MAC 互联互通</li></ul><p>兼容所有苹果设备- MAC、IPAD和IPHONE查看文档和编辑。无缝共享文档传输，让文件从一个设备转移到另一个设备,随时随地办公。</p><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200511235936.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512000338.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512000529.png" alt=""></p><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200512000459.png"><source id="mp4" src="https://cdn.aiviy.com/video/PDF-Reader.webm" type="video/mp4"></video><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-18</td><td align="center">2.5.6</td></tr><tr><td align="center">2020-5-11</td><td align="center">2.5.5</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01beb76b" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01beb76b</a><br>密码: 67y4</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF Expert </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blocs 专业强大的精美网页设计软件</title>
      <link href="/Blocs.html"/>
      <url>/Blocs.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Blocs 是一种快速，易于使用，功能强大的可视化 Web 设计工具，使您无需编写代码即可创建美观，现代的网站。精心设计，可容纳完整的初学者或熟悉网页设计的人。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>专为简单而设计–使用 Blocs 构建建筑物既简单又有趣。干净，直观的界面使创建网站的速度令人难以置信。只需单击，选择，编辑并享受堆叠块即可构建您的网站。它的易用性使您有宾至如归的感觉。</li><li>强大的样式功能– Blocs 简化界面的背后是其一些更高级的编辑功能。当您准备好让自己的设计更具创意时，Blocs 将与您一同成长。你定了步伐。</li><li>创建由CMS驱动的网站– Blocs 集成了对一系列高级（付费）和开源（免费）第三方内容管理系统的支持。现在，您可以轻松创建功能强大的动态网站，并可以直接通过网络浏览器对其进行更新和贡献。</li><li>节省时间的功能–绘画模式，全局色板，自动文本着色和一键式动画只是 Blocs 中一些有趣的省时功能。您会惊奇地发现创建网站的速度如此之快。</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200511235721.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-11</td><td align="center">3.4.10</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01beb7ej" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01beb7ej</a><br>密码: 3bsb</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
            <tag> Web </tag>
            
            <tag> Blocs </tag>
            
            <tag> 可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Motrix 1.5.10 一款全能的下载工具</title>
      <link href="/Motrix.html"/>
      <url>/Motrix.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Motrix 是一款全能的下载工具，支持下载 HTTP、FTP、BT、磁力链、某盘等资源。它的界面简洁易用，希望大家喜欢 👻。</p><p>✈️ 去 <a href="https://motrix.app/zh-CN" target="_blank" rel="noopener external nofollow noreferrer">官网</a> 逛逛  |  📖 查看 <a href="http://motrix.app/support/issues" target="_blank" rel="noopener external nofollow noreferrer">帮助手册</a></p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>🕹 简洁明了的图形操作界面</li><li>🦄 支持BT和磁力链任务</li><li>☑️ 支持选择性下载BT部分文件</li><li>💾 支持下载某盘资源</li><li>🎛 最高支持 10 个任务同时下载</li><li>🚀 单任务最高支持 64 线程下载</li><li>🚥 设置上传/下载限速</li><li>🕶 模拟用户代理UA</li><li>🔔 下载完成后通知</li><li>💻 支持触控栏快捷键 (Mac 专享)</li><li>🤖 常驻系统托盘，操作更加便捷</li><li>🌑 深色模式</li><li>🗑 移除任务时可同时删除相关文件</li><li>🌍 国际化，<a href="#-国际化">查看已可选的语言</a></li><li>🎏 …</li></ul><h2 id="应用界面"><a href="#应用界面" class="headerlink" title=" 应用界面"></a><i class="fa fa-desktop" aria-hidden="true"></i> 应用界面</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/1550151234585-e513bd4f-e127-402f-accb-1ebbba9b3c41.png" alt=""></p><p><img src="https://s.motrix.app/images/screenshot-task-zh.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200510153527.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-16</td><td align="center">1.5.10</td></tr><tr><td align="center">2020-5-9</td><td align="center">1.4.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><blockquote><p>包含 macOS、Windows、Linux版</p></blockquote><p>地址: <a href="https://taolu.lanzous.com/b01be0cwb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01be0cwb</a><br>密码: 3cv2</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> 种子 </tag>
            
            <tag> Motrix </tag>
            
            <tag> 磁力链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Smooze 鼠标平滑滚动神器</title>
      <link href="/Smooze.html"/>
      <url>/Smooze.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Smooze 是一款Mac鼠标平滑滚动神器，可以设置鼠标的横向（水平）以及竖向（垂直）动画，可以设置动画的时间，动画的效果以及滚动的步长。您还可以针对应用单独设置鼠标的滚动效果！</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><blockquote><p>重新发现你的滚轮鼠标，改变其滚动的方式。</p></blockquote><ul><li>动画滚动你拥有的每个应用程序都会有平滑滚动。</li><li>生产力通过将鼠标按钮连接到操作节省时间。</li><li>手势为任何按钮/快捷方式/应用分配手势和摇杆手势。</li><li>自动滚屏自动滚动屏幕上的任何位置，免提，带流畅的动画效果！</li><li>抓取和拖放抓住并滚动屏幕上的任何位置。投掷会像在触控板上一样动画滚动。</li><li>友好的 CPU 高度优化并使用非常小的 CPU 功率，即使在过度使用时也是如此。</li><li>高 FPS Smooze 将其绘图同步到显示器的刷新率，以确保最佳的滚动体验。</li><li>禁用加速禁用滚动加速并选择要在每个打勾上滚动的行数。这些功能始终是免费的！</li><li>伟大的支持我们的反应非常迅速。给我们提出任何问题或建议。</li></ul><h2 id="截图和视频"><a href="#截图和视频" class="headerlink" title=" 截图和视频"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图和视频</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200509101416.png" alt=""></p><video id="video" controls="" preload="none" poster="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200509101753.png"><source id="mp4" src="https://smooze.co/img/smooze-mac.mp4" type="video/mp4"></video><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-21</td><td align="center">1.9.5</td></tr><tr><td align="center">2020-5-9</td><td align="center">1.9.4</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01be1ejg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01be1ejg</a><br>密码: 8jjg</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标增强 </tag>
            
            <tag> Smooze </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AdGuard for Mac 2.4.71(791) 最高级的广告拦截程序</title>
      <link href="/Adguard.html"/>
      <url>/Adguard.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>AdGuard for Mac 是世界上第一个专设计给 macOS 的独立广告拦截程序。其提供了比任何浏览器扩展还多的功能：拦截各种浏览器和应用内的广告，保护您的隐私。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li><p>高效过滤广告<br>AdGuard 可拦截各种广告，弹窗，视频广告，横幅广告等 — 它将消除它们全部。由于在后台静寂过滤及网页装饰处理，您将会看到之前访问过的网页更加干净。</p></li><li><p>安全网络冲浪<br>Mac 计算机很少受到恶意软件的影响，但忽略可能的威胁是明显的错误。因特网上仍然有各种钓鱼网站和诈骗网站，AdGuard 会保护您远离它们。</p></li><li><p>隐私保护<br>AdGuard 使用由 AdGuard 团队设计的间谍软件专用过滤器对抗监视您的各种跟踪器和分析系统。其积累的规则会对抗所有试图窃取您私人数据的在线分析系统。</p></li><li><p>过滤应用内部广告<br>有众多应用虽优秀但会强制显示广告给您。AdGuard 可通过过滤 Mac 系统上应用的流量以平衡这两者。</p></li><li><p>处处可工作<br>选择不出喜欢的浏览器？<br>没问题，AdGuard 会过滤所有浏览器内的广告，从 Safari 到最另类的浏览器都可以。</p></li><li><p>三合一<br>无需额外的程序或浏览器扩展，只需安装 AdGuard 即可，可达到一石多鸟。</p></li><li><p>设计用于 macOS<br>与众多其它解决方案不同，AdGuard for Mac 是从头开发的。就是说它是原生设计有更好的优化。</p></li><li><p>不浪费您的时间<br>视频广告不仅恼人，而且还消耗您的时间。用 AdGuard 您可找到更好的时间消耗方式。</p></li><li><p>Youtube.com 无广告<br>我们打赌您喜欢在 Youtube.com 上看视频，但不喜欢广告。我们也是！很幸运，AdGuard 能够移除那些视频广告。</p></li><li><p>广告拦截前沿<br>广告越发独出心裁，以便使它们能前行在网页上，我们要采取相应的措施以应对。</p></li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200520004418.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200509101041.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200509101059.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-19</td><td align="center">2.4.71.791</td></tr><tr><td align="center">2020-5-17</td><td align="center">2.4.71.789</td></tr><tr><td align="center">2020-5-9</td><td align="center">2.4.71.786</td></tr><tr><td align="center">2020-5-9</td><td align="center">2.4.71.785</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01be1bji" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01be1bji</a><br>密码: 8o8g</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AdGuard </tag>
            
            <tag> 广告拦截 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bartender 3 最好用的菜单栏管理工具</title>
      <link href="/Bartender.html"/>
      <url>/Bartender.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Bartender 3 是一款非常实用的 Menubar 菜单栏管理小助手。随着 Mac 使用时间的增长，那原本简洁的菜单栏也自然而然会慢慢变长，加上某些应用的菜单栏也有一定的长度，这时候用 Bartender 来对杂乱的菜单栏进行管理是再好不过的了。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131014.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131152.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-1</td><td align="center">3.1.22</td></tr><tr><td align="center">2020-5-9</td><td align="center">3.1.20</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jsj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jsj</a><br>密码: 8r4g</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bartender </tag>
            
            <tag> 菜单栏隐藏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FixEDID 开启你的 HiDPI 高清时代</title>
      <link href="/FixEDID.html"/>
      <url>/FixEDID.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>FixEDID 是一款用以开启 HiDPI 的工具。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131241.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131257.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">2.3.2</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jvc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jvc</a><br>密码: dfgq</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FixEDID </tag>
            
            <tag> HiDPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iStatMenus 状态栏系统监控工具</title>
      <link href="/iStatMenus.html"/>
      <url>/iStatMenus.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>iStatMenus 是一款状态栏系统监控工具，可以用来监控内存、硬盘、温度、网速等系统信息。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131816.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507131845.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">6.40</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jyf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jyf</a><br>密码: a9w0</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控 </tag>
            
            <tag> iStatMenus </tag>
            
            <tag> 网速 </tag>
            
            <tag> 状态栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarwinDumper mac 的综合信息收集工具</title>
      <link href="/DarwinDumper.html"/>
      <url>/DarwinDumper.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>DarwinDumper 是一个很实用的 mac 信息收集工具，通过在一个应用程序框架内的脚本包，是一种让你迅速收集好所有系统概述的简便方法。DarwinDumper 可生成你想要的EDID文件，默认选中了许多你并不需要生成的硬件信息。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507132202.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">3.0.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jwd" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jwd</a><br>密码: 4w04</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DarwinDumper </tag>
            
            <tag> 信息收集工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IOJones IOReg 信息查看工具</title>
      <link href="/IOJones.html"/>
      <url>/IOJones.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>IOJones 是一款 IOReg 信息查看工具，作者是 OpenCore 开发团队 Acidanthera。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507132417.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507132431.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">1.1.2</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jqh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jqh</a><br>密码: e1ul</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> IOJones </tag>
            
            <tag> IOReg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mos 鼠标增强工具</title>
      <link href="/Mos.html"/>
      <url>/Mos.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>一个用于在 MacOS 上平滑你的鼠标滚动效果或单独设置滚动方向的小工具, 让你的滚轮爽如触控板</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>疯狂平滑你的鼠标滚动效果</li><li>支持分离触控板/鼠标事件, 单独翻转鼠标滚动方向。</li><li>滚动曲线的自定义调整。</li><li>支持区分应用处理, 黑/白名单系统。</li><li>用于监控滚动事件的图形化呈现窗口。</li><li>基于 Swift4 构建</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p align="center">    <img width="600" src="https://github.com/Caldis/Mos/blob/master/docs/resources/image/cn/Mointor.png?raw=true"></p><p align="center">    <img width="600" src="https://github.com/Caldis/Mos/blob/master/docs/resources/image/cn/PreferencesGeneral.png?raw=true"></p><p align="center">    <img width="600" src="https://github.com/Caldis/Mos/blob/master/docs/resources/image/cn/PreferencesAdvanced.png?raw=true"></p><p align="center">    <img width="600" src="https://github.com/Caldis/Mos/blob/master/docs/resources/image/cn/PreferencesExceptionFull.png?raw=true"></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">2.4.0beta</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jef" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jef</a><br>密码: 75ww</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/Caldis/Mos" target="_blank" rel="noopener external nofollow noreferrer">Mos</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mos </tag>
            
            <tag> 鼠标增强 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MaciASL ACPI 编辑工具</title>
      <link href="/MaciASL.html"/>
      <url>/MaciASL.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>MaciASL 是一款 ACPI 编辑工具，出自 OpenCore 开发团队 Acidanthera。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507133211.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507133224.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">1.5.7</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jgh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jgh</a><br>密码: ff62</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/MaciASL" target="_blank" rel="noopener external nofollow noreferrer">MaciASL</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSDT </tag>
            
            <tag> MaciASL </tag>
            
            <tag> ACPI </tag>
            
            <tag> DSDT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlistEditPro Plist 文件编辑器</title>
      <link href="/PlistEditPro.html"/>
      <url>/PlistEditPro.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>PlistEditPro 是一款 Plist 文件编辑器。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507133527.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507133540.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">1.9.2</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j9a" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j9a</a><br>密码: d1gs</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> PlistEditPro </tag>
            
            <tag> PlistEdit </tag>
            
            <tag> Plist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2 3.3.10 最强大的终端替代品</title>
      <link href="/iTerm.html"/>
      <url>/iTerm.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>iTerm2 是一款终端替代品，是 iTerm 的后继产品。 它适用于 MacOS 10.12 或更高版本的 Mac。iTerm2 将终端带入了您从未想过一直想要的功能，使其进入了现代时代。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507135142.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507135204.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-15</td><td align="center">3.3.10</td></tr><tr><td align="center">2020-5-7</td><td align="center">3.3.5</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jij" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jij</a><br>密码: fhmb</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://www.iterm2.com" target="_blank" rel="noopener external nofollow noreferrer">iTerm2</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 终端 </tag>
            
            <tag> iTerm2 </tag>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU-S CPU 频率检测工具</title>
      <link href="/CPU-S.html"/>
      <url>/CPU-S.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>CPU-S 是一款 CPU 频率检测工具，出自绿帽哥。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507135613.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507135635.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">4.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jof" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jof</a><br>密码: 9fp9</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/lihaoyun6/CPU-S" target="_blank" rel="noopener external nofollow noreferrer">CPU-S</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPU-S </tag>
            
            <tag> 频率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeRunner 万能好用的编辑器</title>
      <link href="/CodeRunner.html"/>
      <url>/CodeRunner.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>CodeRunner 是一款帮助开发人员编程开发的编辑器，它不需要安装额外的语言环境就可以执行一些代码， 还能立即查看运行后的效果，并且支持断点调试，支持多种语言。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507140127.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507140307.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">3.0.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jmd" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jmd</a><br>密码: 5mbd</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeRunner </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> IDE </tag>
            
            <tag> 断点调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SublimeText 4074 Beta 精致的文本编辑器</title>
      <link href="/SublimeText.html"/>
      <url>/SublimeText.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>SublimeText 是一款用于代码、标记和散文的精致文本编辑器。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><h3 id="GOTO-ANYTHING"><a href="#GOTO-ANYTHING" class="headerlink" title="GOTO ANYTHING"></a>GOTO ANYTHING</h3><blockquote><p>使用 Goto Anything 只需几个按键即可打开文件，并立即跳转到符号，行或单词。</p></blockquote><ul><li>使用快捷键 ⌘+P, 可以:<ul><li>输入部分文件名即可将其打开。</li><li>输入 @ 跳转到符号， 输入# 可以在文件中搜索， 输入 : 可以跳转到指定行。</li></ul></li></ul><p>这些快捷方式可以组合使用, 输入 tp@rf 可能会打开text_parser.py这个文件，并定位到 read_file 函数. 同样，tp:100 会将您带到同一文件的第100行。</p><h3 id="GOTO-DEFINITION"><a href="#GOTO-DEFINITION" class="headerlink" title="GOTO DEFINITION"></a>GOTO DEFINITION</h3><ul><li><p>使用语法定义中的信息，Sublime Text 自动生成每个类，方法和函数的项目范围索引。 该索引支持 Goto Definition，它以三种不同的方式公开：</p><ul><li>将鼠标悬停在符号上时会显示一个弹出窗口</li><li>当光标在符号时，按 F12</li><li>Goto Symbol in Project 功能</li></ul></li><li><p>可以通过配置文件在每个语法的基础上自定义符号索引，从而允许用户根据需要定制功能。</p></li></ul><h3 id="多重选择（MULTIPLE-SELECTIONS）"><a href="#多重选择（MULTIPLE-SELECTIONS）" class="headerlink" title="多重选择（MULTIPLE SELECTIONS）"></a>多重选择（MULTIPLE SELECTIONS）</h3><ul><li><p>多重选择可以同时对N处更改，轻松重命名变量，以前所未有的速度操作文件。</p></li><li><p>⇧+⌘+L将选区分为行， ⌘+D 选择下一个被选中的单词。 要使用鼠标进行多项选择，请查看 列选择文档。</p></li></ul><h3 id="命令面板（COMMAND-PALETTE）"><a href="#命令面板（COMMAND-PALETTE）" class="headerlink" title="命令面板（COMMAND PALETTE）"></a>命令面板（COMMAND PALETTE）</h3><ul><li><p>命令面板包含不常用的功能，如排序，更改语法和更改缩进设置。 只需几次击键，您就可以搜索自己想要的内容，而无需浏览菜单或记住模糊的键绑定。</p></li><li><p>使用 ⇧+⌘+P 显示命令面板</p></li></ul><h3 id="强大的API和包生态系统（POWERFUL-API-AND-PACKAGE-ECOSYSTEM）"><a href="#强大的API和包生态系统（POWERFUL-API-AND-PACKAGE-ECOSYSTEM）" class="headerlink" title="强大的API和包生态系统（POWERFUL API AND PACKAGE ECOSYSTEM）"></a>强大的API和包生态系统（POWERFUL API AND PACKAGE ECOSYSTEM）</h3><ul><li><p>Sublime Text有一个功能强大的Python API，允许通过插件增强内置功能。</p></li><li><p>Package Control是一个Sublime Text包管理器，通过命令面板，可以非常容易的去安装Sublime Text插件。</p></li></ul><h3 id="自定义所有（CUSTOMIZE-ANYTHING）"><a href="#自定义所有（CUSTOMIZE-ANYTHING）" class="headerlink" title="自定义所有（CUSTOMIZE ANYTHING）"></a>自定义所有（CUSTOMIZE ANYTHING）</h3><blockquote><p>快捷键绑定，菜单，代码片段，宏，完成等等 - 只需使用简单的JSON文件即可自定义Sublime Text中的所有内容。 该系统为您提供了灵活性，因为可以在每个文件类型和每个项目的基础上指定设置。</p></blockquote><h3 id="分割编辑（SPLIT-EDITING）"><a href="#分割编辑（SPLIT-EDITING）" class="headerlink" title="分割编辑（SPLIT EDITING）"></a>分割编辑（SPLIT EDITING）</h3><ul><li><p>通过拆分编辑可以，充分利用宽屏显示器。 并排编辑文件，或编辑一个文件中的两个位置。 您可以根据需要使用尽可能多的行和列进行编辑。 通过使用多个窗口进行编辑，并在每个窗口中使用多个拆分来利用多个监视器。</p></li><li><p>查看 View ▶ Layout 菜单，了解拆分编辑选项。 要在一个文件中打开多个视图，请使用 File ▶ New View into File 菜单项。</p></li></ul><h3 id="即时项目开关（INSTANT-PROJECT-SWITCH）"><a href="#即时项目开关（INSTANT-PROJECT-SWITCH）" class="headerlink" title="即时项目开关（INSTANT PROJECT SWITCH）"></a>即时项目开关（INSTANT PROJECT SWITCH）</h3><ul><li>Sublime Text中的项目捕获工作区的全部内容，包括已修改和未保存的文件。您可以以与Goto Anything类似的方式在项目之间切换，并且切换是即时的，没有保存提示 - 下次打开项目时将恢复所有修改。</li></ul><h3 id="性能（PERFORMANCE）"><a href="#性能（PERFORMANCE）" class="headerlink" title="性能（PERFORMANCE）"></a>性能（PERFORMANCE）</h3><blockquote><p>Sublime Text由自定义组件构建，提供无与伦比的响应能力。 从功能强大的自定义跨平台UI工具包到无与伦比的语法高亮引擎，Sublime Text设置了性能标准。</p></blockquote><h3 id="跨平台（CROSS-PLATFORM）"><a href="#跨平台（CROSS-PLATFORM）" class="headerlink" title="跨平台（CROSS PLATFORM）"></a>跨平台（CROSS PLATFORM）</h3><ul><li><p>Sublime Text适用于Mac，Windows和Linux。 无论使用何种操作系统，只需一个许可即可在您拥有的每台计算机上使用Sublime Text。</p></li><li><p>Sublime Text使用自定义UI工具包，针对速度和美感进行了优化，同时利用每个平台上的本机功能。</p></li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507141420.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">4074 Beta</td></tr><tr><td align="center">2020-5-7</td><td align="center">3210</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j7i" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j7i</a><br>密码: ba5m</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> SublimeText </tag>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TeamViewer 远程桌面工具</title>
      <link href="/TeamViewer.html"/>
      <url>/TeamViewer.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>TeamViewer 是一个能在任何防火墙和 NAT 代理的后台用于远程控制的应用程序，桌面共享和文件传输的简单且快速的解决方案。为了连接到另一台计算机，只需要在两台计算机上同时运行 TeamViewer 即可，而不需要进行安装（也可以选择安装，安装后可以设置开机运行）。该软件第一次启动在两台计算机上自动生成伙伴 ID。只需要输入你的伙伴的 ID 到TeamViewer，然后就会立即建立起连接。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507142102.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">QS</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j4f" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j4f</a><br>密码: 1fw3</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TeamViewer </tag>
            
            <tag> 远程桌面 </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tuxera NTFS 读写工具</title>
      <link href="/Tuxera.html"/>
      <url>/Tuxera.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Tuxera 是一款在 Mac 上读写 NTFS 格式硬盘，快捷的访问、编辑、存储和传输文件的效率工具。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507142457.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">2019</td></tr><tr><td align="center">2020-5-7</td><td align="center">2018</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j3e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j3e</a><br>密码: 472f</p><h2 id="正版下载"><a href="#正版下载" class="headerlink" title="正版下载"></a>正版下载</h2><p><a href="https://www.tuxera.com" target="_blank" rel="noopener external nofollow noreferrer">Tuxera</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NTFS </tag>
            
            <tag> Tuxera </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2rayU mac 上好用的 v2ray 客户端</title>
      <link href="/V2RayU.html"/>
      <url>/V2RayU.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>V2rayU 是一款 v2ray mac 客户端,用于科学上网,使用 swift4.2 编写,基于 v2ray 项目,支持 vmess, shadowsocks, socks5 等服务协议(推荐搭建 v2ray 服务,可伪装成正常网站,防封锁), 支持二维码,剪贴板导入,手动配置,二维码分享等, 支持订阅。</p><h2 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h2><ul><li><strong>支持协议:</strong> vmess:// 和 ss:// 和 ssr:// 协议,支持 socks5 协议</li><li><strong>支持导入</strong>: 支持二维码,粘贴板导入,本地文件及url导入</li><li><strong>支持编辑</strong>: 导入配置后可以手动更改配置信息</li><li><strong>手动配置</strong>: 支持在导入或未导入情况下手动配置主要参数</li><li><strong>分享二维码</strong>: 支持 v2ray 及 shadowsocks 协议格式分享</li><li><strong>主动更新</strong>: 支持主动更新到最新版</li><li><strong>支持模式</strong>: 支持 pac 模式,手动代理模式,支持全局代理(有别于 vpn, 只是将代理信息更新到系统代理 http, https, socks)</li><li><strong>支持 4.0</strong>: 支持手动切换到 v2ray-core 4.0 以上配置格式</li><li><strong>支持订阅</strong>: <span style="color: red">支持 v2ray 和 ss 及 ssr 订阅</span></li></ul><h2 id="v2ray简介"><a href="#v2ray简介" class="headerlink" title="v2ray简介"></a>v2ray简介</h2><p>   V2Ray 是 Project V 下的一个工具。Project V 包含一系列工具，帮助你打造专属的定制网络体系。而 V2Ray 属于最核心的一个。<br>简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，但比Shadowsocks更具优势</p><p>V2Ray 用户手册：<a href="https://www.v2ray.com" target="_blank" rel="noopener external nofollow noreferrer">https://www.v2ray.com</a></p><p>V2Ray 项目地址：<a href="https://github.com/v2ray/v2ray-core" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/v2ray/v2ray-core</a></p><h3 id="功能预览"><a href="#功能预览" class="headerlink" title="功能预览"></a>功能预览</h3><p>    <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/menu.png?raw=true" height="300">     <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/share.png?raw=true" height="300">     <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/about.png?raw=true" height="300"> </p><p>    <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/import.png?raw=true" width="400">     <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/manual.png?raw=true" width="400"></p><p>    <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/general.png?raw=true" height="300">     <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/advance.png?raw=true" height="300"> </p><p>    <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/subscribe.png?raw=true" height="300">     <img src="https://github.com/yanue/V2rayU/blob/master/screenshot/pac.png?raw=true" height="300"> </p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">2.1.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j2d" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j2d</a><br>密码: 71rb</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/yanue/V2rayU" target="_blank" rel="noopener external nofollow noreferrer">V2rayU</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> SS </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> V2rayU </tag>
            
            <tag> vmess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reeder 好用的 RSS 订阅工具</title>
      <link href="/Reeder.html"/>
      <url>/Reeder.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>macOS 平台下最好的 RSS 订阅工具。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.sspai.com/2019/04/28/8d0ed2d957c5647c03c94627a3c190ba.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt=""></p><p><img src="https://cdn.sspai.com/2019/04/28/b083eee9b4fb248b46f0ada306ab55bd.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-12</td><td align="center">4.2.4</td></tr><tr><td align="center">2020-5-7</td><td align="center">4.2.2</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6j0b" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6j0b</a><br>密码: 3phl</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS </tag>
            
            <tag> Reeder </tag>
            
            <tag> 订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PinConfigurator 声卡仿冒工具</title>
      <link href="/PinConfigurator.html"/>
      <url>/PinConfigurator.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>PinConfigurator 是一款声卡仿冒工具，出自 headkaze 大佬。</p><ul><li>支持从 IORegistry、剪贴板、PINConfigs导入</li><li>支持导出到剪贴板、verbs、文本等</li><li>支持自动整理 ConfigData</li><li>等等</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507144355.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507144434.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">2.2.7</td></tr><tr><td align="center">2020-5-7</td><td align="center">2.2.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6iyj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6iyj</a><br>密码: b0fa</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/headkaze/PinConfigurator" target="_blank" rel="noopener external nofollow noreferrer">PinConfigurator</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AppleALC </tag>
            
            <tag> 声卡 </tag>
            
            <tag> PinConfigurator </tag>
            
            <tag> 仿冒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCore Configurator 2.4.0.0 图形化 OpenCore 配置工具</title>
      <link href="/OpenCoreConfigurator.html"/>
      <url>/OpenCoreConfigurator.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>OpenCore 是非常优秀的开源软件，旨在通过提供更加通用和模块化的系统来解决 Clover 带来的限制和问题，拦截内核加载以插入高级的 rootkit，而该 rootkit 旨在替代Clover。 OpenCore 最初诞生于 HermitCrabs 实验室，现在由 Acidanthera 接手。OpenCore 目前的主要用途是黑苹果系统引导，但其实它也支持其它操作系统。OpenCore 目前引导相关功能已非常稳定，喜欢折腾的朋友现在已经是动手的时机了。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200520001327.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507145536.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-19</td><td align="center">2.4.0.0</td></tr><tr><td align="center">2020-5-14</td><td align="center">2.3.0.0</td></tr><tr><td align="center">2020-5-7</td><td align="center">2.2.0.0</td></tr><tr><td align="center">2020-5-7</td><td align="center">2.1.0.0</td></tr><tr><td align="center">2020-5-7</td><td align="center">2.0.0.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6ivg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ivg</a><br>密码: awdb</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://mackie100projects.altervista.org" target="_blank" rel="noopener external nofollow noreferrer">OpenCore Configurator</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCorePkg </tag>
            
            <tag> OC </tag>
            
            <tag> OpenCore </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSleep 禁止睡眠工具</title>
      <link href="/NoSleep.html"/>
      <url>/NoSleep.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>让你的 mac 永远不休眠。有时候挂机下载大文件的时候，Mac 空闲一段时间自动锁定屏幕后 WiFi 网络就会自动断开。导致挂机一晚上结果却并没有下载什么的杯具。有了 NoSleep 就都可以解决了！NoSleep 顾名思义即禁止休眠，禁止 Mac 进入休眠状态，使之一直处在工作状态，记得接上电源~ 使用电池时慎用，不然电池电量可能会耗光…… 打开 NoSleep 并设置开启，WiFi 就不会自动断开了，终于可以愉快的挂机下载了。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://img1.appinn.net/2011/04/SystemUIServer-20110409-161728.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">1.1.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6ite" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ite</a><br>密码: e4qi</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSleep </tag>
            
            <tag> 睡眠 </tag>
            
            <tag> 休眠 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintool 黑果必备工具</title>
      <link href="/Hackintool.html"/>
      <url>/Hackintool.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>HackinTool 是一款由 headkaze 开发，并由 daliansky, Bat.bat, penghubingzhou 翻译为简体中文的工具软件，是一款使用黑苹果系统必不可少的实用工具。程序功能强大，是黑果必不可少的强大工具。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>帧缓冲转储<blockquote><p>有几种方法可以转储帧缓冲区数据（后两种需要 WhateverGreen + Lilu 调试版本）以在 Hackintool 中读取：</p></blockquote><ul><li>使用 Framebuffer-&gt; macOS 10.13.6 / Framebuffer-&gt; macOS 10.14 菜单创建不带 framebuffer 转储的补丁</li><li>使用 -igfxdump 引导参数将 IGPU 帧缓冲 kext 转储到 /AppleIntelFramebuffer_X_Y（引导驱动器的根目录），然后选择 <code>文件</code> -&gt; <code>打开</code> 菜单</li><li>使用 -igfxfbdump 启动参数将本机和修补的帧缓冲区表转储到ioreg，然后将“文件”-&gt;“导入”-&gt;“ IOReg转储”菜单</li></ul></li><li>支持 Sandy Bridge，Ivy Bridge，Haswell，Broadwell，Skylake，Kaby Lake，Coffee Lake，Cannon Lake 和 Ice Lake</li><li>创建全部，连接器或 VRAM 补丁</li><li>检测更改以自动创建补丁</li><li>以十六进制，base64 或 Devices/Properties 格式创建 Clover 补丁</li><li>显示本机 GPU 和型号标识符</li><li>显示和编辑内存信息，例如 Stolen，帧缓冲区，VRAM，Cursor 等。</li><li>滚动一些项目以获取更多信息（工具提示）</li><li>直接从 Framebuffer kexts 读取 <code>实时</code> 数据（如果可用；请参见下面的 Mojave 说明）</li><li>File -&gt; Open 导入帧缓冲文件，该文件由 WhateverGreen 的 -igfxdump 启动参数生成</li><li>File -&gt; Export -&gt; Clover config.plist / File -&gt; Export-&gt; Framebuffer.txt 导出文件</li><li>修补音频 Layout ID</li><li>添加 USB 端口限制补丁</li><li>插入和拔下 USB2 / USB3 设备并设置端口连接器类型，然后生成 USBPorts.kext</li><li>高级修补选项（DVMT 预分配 32 MB，VRAM 2048 MB，禁用 eGPU，启用 HDMI20（4K），DP -&gt; HDMI，GfxYTile 修复，Reboot 修复，USB 端口限制，仿冒音频设备ID，FB 端口限制，仿冒 Gfx 设备 ID）</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150300.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150316.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150326.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150336.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150359.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507150417.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151144.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151216.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151357.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151433.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151450.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151501.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151531.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151552.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151603.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507151626.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">3.4.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6irc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6irc</a><br>密码: eq3m</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/headkaze/Hackintool" target="_blank" rel="noopener external nofollow noreferrer">Hackintool</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintool </tag>
            
            <tag> 瑞士军刀 </tag>
            
            <tag> 缓冲帧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Downie 4.0.11 视频资源嗅探下载工具</title>
      <link href="/Downie.html"/>
      <url>/Downie.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Downie 是一款强大的视频资源嗅探下载工具。</p><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>支持许多网站 - 目前支持1100多个不同的网站（包括YouTube，Vimeo等），数量正在迅速增长。</li><li>4K视频YouTube支持 - 与许多其他YouTube下载器不同，Downie支持YouTube上的高清视频，高达4K。</li><li>后期处理 - 需要您的视频在MP4的iTunes？还是只想要音轨？没问题，唐尼可以自动处理这个！</li><li>快速支持 - 我通常在24小时内回复电子邮件，并经常在下次更新中增加对所请求的网站的支持。</li><li>频繁更新 - 不要等待几个星期来支持新站点，或修复错误！Downie每周更新一次新的功能，支持的站点等。</li><li>国际 - 不仅Downie支持国家特定的网站，它被本地化为各种语言。如果您的语言缺失，请联系我们 - 我们可以为您提供免费许可证以换取翻译。</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/1/20200519210948.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507152736.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507152747.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507152803.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-19</td><td align="center">4.0.11</td></tr><tr><td align="center">2020-5-7</td><td align="center">4.0.10</td></tr><tr><td align="center">2020-5-7</td><td align="center">4.0.9</td></tr><tr><td align="center">2020-5-9</td><td align="center">4.0.7</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6iqb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6iqb</a><br>密码: f36u</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Downie </tag>
            
            <tag> 视频下载 </tag>
            
            <tag> 资源嗅探 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clover Configurator 四叶草图形化配置工具</title>
      <link href="/CloverConfigurator.html"/>
      <url>/CloverConfigurator.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Clover Configurator 是一款四叶草图形化配置工具。Clover Configurator 可以图形化的帮你编辑配置文件 config.plist，而且把四叶草的几项功能都分了区块，你可以很快的找到想要配置的属性。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/tlhub/picbed-1/20200507145129.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-14</td><td align="center">5.13.0.1</td></tr><tr><td align="center">2020-5-10</td><td align="center">5.12.0.0</td></tr><tr><td align="center">2020-5-7</td><td align="center">5.11.0.0</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6ipa" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ipa</a><br>密码: 1rvr</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://mackie100projects.altervista.org" target="_blank" rel="noopener external nofollow noreferrer">Clover Configurator</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Clover Configurator </tag>
            
            <tag> 四叶草 </tag>
            
            <tag> Clover </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CleanMyMac X 4.6.3 系统清理工具</title>
      <link href="/CleanMyMac.html"/>
      <url>/CleanMyMac.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>CleanMyMac X 是一个系统清理工具，包括很多实用工具。</p><p>特性:</p><ul><li>系统垃圾：清理您的系统来获得最大的性能和释放自由空间。</li><li>照片垃圾：移除照片图库中的支持数据，使之变小。</li><li>邮件附件：移除邮件下载和附件的本地副本</li><li>iTunes 垃圾：清理过时的iOS设备备份，软件更新和其他iTunes支持数据</li><li>废纸篓：倾倒Mac上所有废纸篓，包括邮寄和照片图库垃圾。</li><li>大型和旧文件：查找和移除大型文件和文件夹。</li><li>卸载器；移除整个应用程序，包括其所有关联文件。</li><li>维护：运行一组脚本，快速优化系统性能。</li><li>隐私：立即移除浏览历史以及在线和离线活动的痕迹。</li><li>扩展：移除或禁用Widget，应用程序插件，偏好设置面板，词典，屏幕保护程序和登录项。</li><li>碎纸机：迅速擦除任何不需要的文件或文件夹而又不留一丝痕迹。</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20200507125331.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20200507125408.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-21</td><td align="center">4.6.3</td></tr><tr><td align="center">2020-5-7</td><td align="center">4.6.2</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6ini" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ini</a><br>密码: guc3</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CleanMyMac X </tag>
            
            <tag> CleanMyMac </tag>
            
            <tag> CMM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adobe Zii 5.2.0 - Adobe 全家桶激活工具</title>
      <link href="/Adobe-Zii.html"/>
      <url>/Adobe-Zii.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Adobe 全家桶激活工具</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20200507124601.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-20</td><td align="center">2020 v5.2.0</td></tr><tr><td align="center">2020-5-7</td><td align="center">2020 v5.1.9</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6ikf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ikf</a><br>密码: hoc4</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe </tag>
            
            <tag> Photoshop </tag>
            
            <tag> PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Backgrounds v7.5 动态桌面壁纸工具</title>
      <link href="/Backgrounds.html"/>
      <url>/Backgrounds.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>Backgrounds 通过 6 个主题使您的桌面动态化：iTunes，Parallax，Quartz，Video, System 和 Time。它是为 Mac 用户设计的，他们希望使计算机屏幕的背景更具吸引力，更时尚，更动态。 这可以通过在屏幕上添加全新的功能和有用的小部件来获得精美原始的桌面外观来完成。</p><p>1) iTunes Theme:<br>以墙纸的形式显示 iTunes 当前曲目的插图。 或音乐录影带<br>– 播放与当前曲目匹配的视频，非常适合播放音乐视频。<br>– 使用曲目的第一张图稿，随机的图稿，最匹配当前显示的图稿或每20秒更改一次的所有图稿。<br>– 播放音乐时自动激活。<br>– 全屏模式可用。</p><p>2) Parallax Theme:<br>通过移动光标深入桌面。<br>– 使用一个或多个用户桌面图像。<br>– 翻转 x 或 y 轴的移动方向。</p><p>3) Video Theme:<br>播放任何视频作为桌面墙纸。<br>– 用自己的视频和动态壁纸表达自己<br>– 添加您自己的视频循环，使其更加出色。<br>– 添加多个文件并将所有内容作为播放列表播放。</p><p>4) Quartz Theme:<br>运行任何 Quartz 组成作为墙纸。<br>– 制作或下载自己的 Quartz 成分。<br>– 访问 iTunes 当前的曲目信息。</p><p>5) System Theme:<br>监视CPU和网络使用情况。<br>– 使用随附的小部件从<code>通知中心</code>浏览系统。<br>– 设置自己的带宽速度限制，或在动态模式下将其保留为 0。<br>– 将其设置为透明，以便与您的桌面映像结合使用。<br>– 调整指针速度和更新频率。<br>– 设置最喜欢的尺寸和位置。<br>– 以位或字节为单位测量连接。<br>– 垂直堆叠压力表。</p><p>6) Time Theme:<br>从桌面了解时间。<br>– 自定义诸如字体，大小，位置，颜色和阴影的属性。<br>– 显示或隐藏日期，月份和秒数。<br>– 支持多个具有不同首选项的监视器。<br>– 您甚至可以将它们组合在一起。将系统和时间主题设置为始终显示，无论您是否正在使用 iTunes，Parallax，Quartz，Video, System 和 Time。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20200507102147.png" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">7.5</td></tr><tr><td align="center">2020-5-1</td><td align="center">7.1</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6jpg" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6jpg</a><br>密码: gv7b</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backgrounds </tag>
            
            <tag> 动态壁纸 </tag>
            
            <tag> 动态桌面 </tag>
            
            <tag> 视频壁纸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudMounter v3.6 网盘挂载工具</title>
      <link href="/CloudMounter.html"/>
      <url>/CloudMounter.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>CloudMounter 允许您通过 Mac 的 Finder 访问和管理数据，从而使使用多种云存储服务变得容易。CloudMounter 可与所有流行的服务一起使用，例如 OneDrive，Google Drive，OpenStack Swift，Amazon S3 和 Dropbox。不仅如此，该应用程序还允许您以连接到本地网络中任何共享位置的方式连接到远程 FTP，SFTP，FTPS 和 WebDAV 服务器。</p><p>您还可以通过数据加密来提高云安全性。没有解密密钥就无法读取加密文件，因此即使有人掌握了您的数据，他们也将无法进入其中。使用 CloudMounter，您的登录数据也受到保护，您输入的凭据也存储在 Mac OS 钥匙串中，并直接发送到服务器和存储帐户。</p><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/xyu4r3F.jpg" alt=""></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-7</td><td align="center">3.6</td></tr></tbody></table><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bdttih" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdttih</a><br>密码: 4dtk</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudMounter </tag>
            
            <tag> 网盘 </tag>
            
            <tag> OneDrive </tag>
            
            <tag> Google Drive </tag>
            
            <tag> OpenStack Swift </tag>
            
            <tag> Amazon S3 </tag>
            
            <tag> Dropbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACPIBatteryManager 电池驱动汇总</title>
      <link href="/ACPIBatteryManager.html"/>
      <url>/ACPIBatteryManager.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>为运行 OS X 的非 Apple 笔记本电脑实现基于高级配置和电源管理接口（ACPI）的电池管理器内核扩展（kext / driver）。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="2018-10-5-v1-90-1"><a href="#2018-10-5-v1-90-1" class="headerlink" title="2018-10-5 v1.90.1"></a>2018-10-5 v1.90.1</h3><ul><li>fix a crash in ACPIBatteryManager due to notifications received very early in startup (may be in invalid configurations)</li></ul><h3 id="2018-09-15-v1-90"><a href="#2018-09-15-v1-90" class="headerlink" title="2018-09-15 v1.90"></a>2018-09-15 v1.90</h3><ul><li>merge ‘refactor’ branch from the-darkvoid (details below)</li><li>removed BatteryTracker and allow existing services to communicate directly</li><li>drive AC status purely through ACPIACAdapter, not through battery charging/discharging status</li></ul><h3 id="2017-10-01-v1-81-4"><a href="#2017-10-01-v1-81-4" class="headerlink" title="2017-10-01 v1.81.4"></a>2017-10-01 v1.81.4</h3><ul><li>add kernel flag “abm_firstpolldelay” to allow override of FirstPollDelay with simple kernel flag entry (config.plist/Boot/Arguments).  For example, to set FirstPollDelay to 16000 (16 seconds), use abm_firstpolldelay=16000</li></ul><h3 id="2017-09-01-v1-81-3"><a href="#2017-09-01-v1-81-3" class="headerlink" title="2017-09-01 v1.81.3"></a>2017-09-01 v1.81.3</h3><ul><li>Revert more 10.13 changes when running 10.12 and earlier (runtime checks). These changes are an attempt to solve issue #22</li></ul><h3 id="2017-08-30-v1-81-2"><a href="#2017-08-30-v1-81-2" class="headerlink" title="2017-08-30 v1.81.2"></a>2017-08-30 v1.81.2</h3><ul><li>Revert some of the 10.13 changes for 10.12 and earlier (runtime checks)</li></ul><h3 id="2017-08-30-v1-81-1-removed-from-bitbucket"><a href="#2017-08-30-v1-81-1-removed-from-bitbucket" class="headerlink" title="2017-08-30 v1.81.1 (removed from bitbucket)"></a>2017-08-30 v1.81.1 (removed from bitbucket)</h3><ul><li>Change FirstPollDelay to 4000</li></ul><h3 id="2017-08-29-v1-81"><a href="#2017-08-29-v1-81" class="headerlink" title="2017-08-29 v1.81"></a>2017-08-29 v1.81</h3><ul><li>More experiments for 10.13 and the startup problem.</li><li>Now we wait for AppleSMC to load before ACPIBatteryManager starts.  This provides a better “anchor” for the FirstPollDelay wait.</li><li>FirstPollDelay now 1000.  Tested on my 4530s (HDD, Sandy Bridge Core i3).  It works with 500 (and with other larger values), but fails and 250.  Decided to try 1000 as a default.</li><li>Avoid a problem where power management registration caues an early (but not real early) call to setPowerState which was triggering a pollBatteryState prior to the delay specified by FirstPollDelay.</li></ul><h3 id="2017-08-28-v1-80"><a href="#2017-08-28-v1-80" class="headerlink" title="2017-08-28 v1.80"></a>2017-08-28 v1.80</h3><ul><li>Fix problem of losing battery icon on 10.13 High Sierra beta.  It is a new timing bug introduced in High Sierra.  Delaying the first poll and battery status publish fixes it.  StartupDelay configuration is removed (not used, has no effect if specified in ACPI override).  New configuration item FirstPollDelay is default at 7500.  Slower computers may need a longer delay (for my Lenovo u430, 3500 is too short, 4000 is long enough).</li></ul><h3 id="2017-08-26-v1-71"><a href="#2017-08-26-v1-71" class="headerlink" title="2017-08-26 v1.71"></a>2017-08-26 v1.71</h3><ul><li>Fix problem with Activity Monitor “Energy” tab, by changing class names to AppleSmartBatteryManager and AppleSmartBattery</li></ul><h3 id="2017-04-28-v1-70-3"><a href="#2017-04-28-v1-70-3" class="headerlink" title="2017-04-28 v1.70.3"></a>2017-04-28 v1.70.3</h3><ul><li>Add quick polling for the first 10 seconds of startup for the case the EC/ACPI does not respond correctly at startup.  This quick poll will be cancelled once a battery status is succesfully acquired, or after the 10 seconds.</li></ul><h3 id="2016-11-18-v1-70-2"><a href="#2016-11-18-v1-70-2" class="headerlink" title="2016-11-18 v1.70.2"></a>2016-11-18 v1.70.2</h3><ul><li>Fix problem where incorrect _BST code returns status of “discharging” when at full charge, AC adapter still plugged in.</li></ul><h3 id="2016-06-28-v1-70-1"><a href="#2016-06-28-v1-70-1" class="headerlink" title="2016-06-28 v1.70.1"></a>2016-06-28 v1.70.1</h3><ul><li>Fix bug involving BatterySerialNumber (always showing -Unknown)</li><li>Handle ACPI returning a blank string for serial# in _BIF (use “Unknown” in that case)</li><li>no longer setting Temperature when it is not available from ACPI</li><li>misc cleanup</li></ul><h3 id="2016-05-31-v1-70-0"><a href="#2016-05-31-v1-70-0" class="headerlink" title="2016-05-31 v1.70.0"></a>2016-05-31 v1.70.0</h3><ul><li>added SSDT-BATC.dsl which allows multiple batteries to be dealt with as a single ACPI battery</li><li>changed the code that responds to battery notifications so it is not sensitive to incorrect remove/add flags</li><li>misc cleanup</li></ul><h3 id="2015-12-30-v1-60-5"><a href="#2015-12-30-v1-60-5" class="headerlink" title="2015-12-30 v1.60.5"></a>2015-12-30 v1.60.5</h3><ul><li>Fixed bug with zero length dictionary (ACPI-based configuration)</li><li>correct capacities only if non-zero</li><li>change StartupDelay to 0ms</li></ul><h3 id="2015-11-09-v1-60-4"><a href="#2015-11-09-v1-60-4" class="headerlink" title="2015-11-09 v1.60.4"></a>2015-11-09 v1.60.4</h3><ul><li>added configurable StartupDelay</li><li>changed default StartupDelay from 500ms to 50ms</li></ul><h3 id="2015-10-29-v1-60-3"><a href="#2015-10-29-v1-60-3" class="headerlink" title="2015-10-29 v1.60.3"></a>2015-10-29 v1.60.3</h3><ul><li>Add correction for capacities that don’t conform to OS X expectations (CurrentCapacity&lt;=MaxCapacity&lt;=DesignCapacity)’</li></ul><h3 id="2015-09-30-v1-60"><a href="#2015-09-30-v1-60" class="headerlink" title="2015-09-30 v1.60"></a>2015-09-30 v1.60</h3><ul><li>Add CurrentDischargeRateMax configuration key as a way to cap the discharge rate against bad data from ACPI _BST</li><li>Add ACPI method for overriding configuration data in Info.plist.  See config_override.txt for more info</li></ul><h3 id="2015-01-23-v1-55"><a href="#2015-01-23-v1-55" class="headerlink" title="2015-01-23 v1.55"></a>2015-01-23 v1.55</h3><ul><li>Add 500ms delay before polling initial battery state (_STA) to account for battery devices at are not ready early in the boot process.  This avoids dimming the display when booting on battery, as the system doesn’t detect it as a battery present-&gt;battery removed transition.</li><li>some minor fixes for watts when CurrentRate is ACPI_UNKNOWN</li><li>debug messages are now in decimal</li></ul><h3 id="2014-10-16-v1-53"><a href="#2014-10-16-v1-53" class="headerlink" title="2014-10-16 v1.53"></a>2014-10-16 v1.53</h3><ul><li>added debug output for _BIX</li></ul><h3 id="2014-02-07-v1-52"><a href="#2014-02-07-v1-52" class="headerlink" title="2014-02-07 v1.52"></a>2014-02-07 v1.52</h3><ul><li>Fix deadlock caused by changes made for multiple batteries.  See issue #3.</li><li>When determining if other batteries are discharging, ignore batteries that are not connected.  See issue #2.</li><li>To provide AC status changes quicker after an AC change, poll battery objects more often after such a change.  See issue #4.</li></ul><h3 id="2014-01-21-v1-51"><a href="#2014-01-21-v1-51" class="headerlink" title="2014-01-21 v1.51"></a>2014-01-21 v1.51</h3><ul><li>Some fixes related to multiple batteries.  Work in progress.</li></ul><h3 id="2013-12-04-v1-50"><a href="#2013-12-04-v1-50" class="headerlink" title="2013-12-04 v1.50"></a>2013-12-04 v1.50</h3><ul><li>Added ACPIACAdapter implementation, which implemeents an ACPI compliant object to track status changes of the AC adapter.  As the status change, the battery objects are notified.</li></ul><h3 id="prior-fixes"><a href="#prior-fixes" class="headerlink" title="prior fixes:"></a>prior fixes:</h3><ul><li>I didn’t really track a change log prior to now.  Read the threads linked or the commit log in git.</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6med" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6med</a><br>密码: b9dh</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/RehabMan/OS-X-ACPI-Battery-Driver" target="_blank" rel="noopener external nofollow noreferrer">ACPIBatteryManager</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACPIBatteryManager </tag>
            
            <tag> Battery </tag>
            
            <tag> 电池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BT4LEContinuityFixup 蓝牙修补驱动</title>
      <link href="/BT4LEContinuityFixup.html"/>
      <url>/BT4LEContinuityFixup.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>BT4LEContinuityFixup 是一个开源内核扩展程序，为 IOBluetoothFamily 提供一系列的修补。</p><p>特征</p><p>该工具进行了必要的更改，以在兼容的硬件上启用 OS X 10.10 和 10.11 的 续性功能。 此修补程序激活的连续性功能包括 Handoff，Instant Hotspot 和 New Airdrop。 OS X 10.11（EI Capitan）加密狗支持尚不稳定！ （<a href="https://github.com/dokterdok/Continuity-Activation-Tool/）" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/dokterdok/Continuity-Activation-Tool/）</a></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>v1.1.4</p><ul><li>Unified release archive names</li></ul></li><li><p>v1.1.3</p><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Rename BT4LEContiunityFixup to BT4LEContinuityFixup (ticket 375)</li></ul></li><li><p>v1.1.2</p><ul><li>Try to adapt this kext for &lt;= Yosemite</li></ul></li><li><p>v1.1.1</p><ul><li>Basic 10.14 compatibility</li></ul></li><li><p>v1.1.0</p><ul><li>XCode 9 &amp; Lilu 1.2.0 compatibility fixes (Lilu 1.2.0 is required)</li></ul></li><li><p>v1.0.0</p><ul><li>Initial release</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6l1e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l1e</a><br>密码: duas</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/BT4LEContinuityFixup" target="_blank" rel="noopener external nofollow noreferrer">BT4LEContinuityFixup</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BT4LEContinuityFixup </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPUTune 驱动汇总</title>
      <link href="/CPUTune.html"/>
      <url>/CPUTune.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>对 macOS 进行动态 CPU 性能调整的开源内核扩展。</p><h3 id="特性"><a href="#特性" class="headerlink" title=" 特性:"></a><i class="fa fa-star" aria-hidden="true"></i> 特性:</h3><ul><li>允许开启或关闭 Intel Turbo Boost 以延长电池寿命</li><li>允许打开或关闭 Intel Speed Shift 以获得最佳性能</li><li>实现基于 TimerEvent 的响应，以便在运行时动态切换 Turbo Boost 和 Speed Shift</li><li>通过 Info.plist 设置，使系统完整性保护（SIP）控制更加容易</li></ul><h3 id="引导参数"><a href="#引导参数" class="headerlink" title="引导参数:"></a>引导参数:</h3><ul><li>添加 -cputoff 以禁用 CPUTune</li><li>添加 -cputbeta 以在不受支持的操作系统版本上启用 CPUTune（默认启用10.14及更低版本）。</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>在终端中，输入<code>echo "1" &gt; /tmp/CPUTuneTurboBoostRT.conf</code>以在加载 CPUTune 时启用 Turbo Boost</li><li>在终端中，输入<code>echo "0" &gt; /tmp/CPUTuneTurboBoostRT.conf</code>以在需要时禁用 Turbo Boost</li><li>如果要使用简化命令来切换涡轮增压，请在 CPUTune.kext/Contents/Info.plist 中更改 TurboBoostAtRuntime</li></ul><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="v1-9-0"><a href="#v1-9-0" class="headerlink" title="v1.9.0"></a>v1.9.0</h3><ul><li>Resolve linkage issue for kernel major/minor</li></ul><h3 id="v1-8-9"><a href="#v1-8-9" class="headerlink" title="v1.8.9"></a>v1.8.9</h3><ul><li>NVRAM protection</li></ul><h3 id="v1-8-8"><a href="#v1-8-8" class="headerlink" title="v1.8.8"></a>v1.8.8</h3><ul><li>Supported macOS Catalina</li></ul><h3 id="v1-8-7"><a href="#v1-8-7" class="headerlink" title="v1.8.7"></a>v1.8.7</h3><ul><li>Updated cpu info to <code>xnu-4903.221.2</code></li></ul><h3 id="v1-8-6"><a href="#v1-8-6" class="headerlink" title="v1.8.6"></a>v1.8.6</h3><ul><li>Updated csr header to <code>xnu-4903.221.2</code></li></ul><h3 id="v-1-8-5"><a href="#v-1-8-5" class="headerlink" title="v.1.8.5"></a>v.1.8.5</h3><ul><li>Simplify the enable if-condition</li></ul><h3 id="v1-8-4"><a href="#v1-8-4" class="headerlink" title="v1.8.4"></a>v1.8.4</h3><ul><li>Removed unused variables</li><li>Corrected  <code>writeBufferToFile()</code> return type</li></ul><h3 id="v1-8-1"><a href="#v1-8-1" class="headerlink" title="v1.8.1"></a>v1.8.1</h3><ul><li>Regularly checks profiles</li></ul><h3 id="v1-8-0"><a href="#v1-8-0" class="headerlink" title="v1.8.0"></a>v1.8.0</h3><ul><li>Allowed SIP control a bit easier via Info.plist tunning instead of reboot to recovery mode on a real mac</li><li>Simplify memory deallocate code blocks via deleter routine</li></ul><h3 id="v1-7-0"><a href="#v1-7-0" class="headerlink" title="v1.7.0"></a>v1.7.0</h3><ul><li>Fixed compatible issues (supported OS X Mountain Lion and Xcode 3.2)</li><li>Fixed code logic of HWP Enable, details can be fond <a href="https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3b-part-2-manual.pdf" target="_blank" rel="noopener external nofollow noreferrer">here</a></li></ul><h3 id="v1-6-5"><a href="#v1-6-5" class="headerlink" title="v1.6.5"></a>v1.6.5</h3><ul><li>Implemented Timer Event based feature for dynamic control CPU Performance at runtime </li><li>CPUInfo to detect cpu information</li></ul><h3 id="v1-1-1"><a href="#v1-1-1" class="headerlink" title="v1.1.1"></a>v1.1.1</h3><ul><li>Implemented write logs to file</li></ul><h3 id="v1-0-7"><a href="#v1-0-7" class="headerlink" title="v1.0.7"></a>v1.0.7</h3><ul><li>Boot arguments check </li><li>Unsupported version check </li><li>Fixed memeory leak</li></ul><h3 id="v-1-0-1"><a href="#v-1-0-1" class="headerlink" title="v 1.0.1"></a>v 1.0.1</h3><ul><li>Fixed enableTurboBoost().</li></ul><h4 id="v1-0-0"><a href="#v1-0-0" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6n0f" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6n0f</a><br>密码: 7epf</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/syscl/CPUTune" target="_blank" rel="noopener external nofollow noreferrer">CPUTune</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPUTune </tag>
            
            <tag> Turbo Boost </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BrcmPatchRAM 无线网卡驱动</title>
      <link href="/BrcmPatchRAM.html"/>
      <url>/BrcmPatchRAM.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://travis-ci.com/acidanthera/BrcmPatchRAM" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://travis-ci.com/acidanthera/BrcmPatchRAM.svg?branch=master" alt="Build Status"></a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>大多数 Broadcom USB 蓝牙设备都使用称为 RAMUSB 的系统。RAMUSB 允许动态更新设备的固件，但是在关闭计算机时，先前应用的任何更新都会丢失。</p><p>Broadcom Windows 驱动程序将在每次启动时将固件上载到 Broadcom 蓝牙设备中，但是，对于 macOS，此功能不可用。 BrcmPatchRAM 是一个 macOS 驱动程序，适用于基于 Broadcom RAMUSB 的设备的 PatchRAM 更新。 每次启动/唤醒时，它将固件更新应用于 Broadcom 蓝牙设备，与 Windows 驱动程序相同。 应用的固件是从 Windows 驱动程序中提取的，并且功能应与 Windows 相同。</p><p>请注意，原始的 Apple Broadcom 蓝牙设备不是 RAMUSB 设备，因此没有相同的固件机制。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>请注意，如果您有Apple MacBook / iMac / Mac Pro等，请按照 <a href="https://github.com/acidanthera/BrcmPatchRAM/blob/master/README-Mac.md" target="_blank" rel="noopener external nofollow noreferrer">Mac instructions</a></strong></p><p>根据macOS版本安装<code>BrcmPatchRAM.kext</code>或<code>BrcmPatchRAM2.kext</code>或<code>BrcmPatchRAM3.kext</code>其中之一，决不要三者都安装。</p><pre><code>* `BrcmPatchRAM.kext`: 适用于 10.10 或更早版本.* `BrcmPatchRAM2.kext`: 适用于 10.11 或更高版本.</code></pre><ul><li><code>BrcmPatchRAM3.kext</code>: 适用于 10.15.</li></ul><p>另外，根据安装位置安装一个固件kext BrcmFirmwareData.kext或BrcmFirmwareRepo.kext，决不要同时安装。</p><pre><code>* `BrcmFirmwareData.kext`: 最适合引导加载程序注入。 这是首选配置。* `BrcmFirmwareRepo.kext`: 安装到`/System/Library/Extensions`（在10.11及更高版本上为`/Library/Extensions`）。 该kext的内存效率比`BrcmFirmwareData.kext`略高，但是不能由引导加载程序注入。* 高级用户：对于自定义固件注入器，请安装注入器以及`BrcmFirmwareRepo.kext`。 这可以从`/System/Library/Extensions`或通过引导加载程序注入工作。 （可选）您可以从`BrcmFirmwareRepo.kext/Contents/Resources`中删除所有固件。 如果通过引导加载程序使用注入器，则必须将`BrcmFirmwareRepo.kext`的`Info.plist`中的`IOProviderClass`从`disabled_IOResources`更改为`IOResources`。</code></pre><p>另外，如果您有非PatchRAM设备（或者不确定），请安装macOS版本的<code>BrcmNonPatchRAM.kext</code>或<code>BrcmNonPatchRAM2.kext</code>之一，请不要同时安装两者。尽管这些kext不安装任何固件（这些设备内置固件），但它们仍依赖<code>BrcmPatchRAM.kext</code> / <code>BrcmPatchRAM2.kext</code>。</p><pre><code>* `BrcmNonPatchRAM.kext`: 适用于 10.10 或更早版本.* `BrcmNonPatchRAM2.kext`: 适用于 10.11 或更高版本.</code></pre><h3 id="BrcmBluetoothInjector-kext"><a href="#BrcmBluetoothInjector-kext" class="headerlink" title="BrcmBluetoothInjector.kext"></a>BrcmBluetoothInjector.kext</h3><p>用于macOS 10.11或更高版本。</p><p>该kext是一个简单的注入器，它不包含固件上载器。 如果您希望查看您的设备在没有固件上传器的情况下是否可以运行，请尝试使用此kext。</p><p>请勿将其他任何扩展程序（<code>BrcmPatchRAM</code>，<code>BrcmPatchRAM2</code>，<code>BrcmPatchRAM3</code>，<code>BrcmFirmwareRepo</code>或<code>BrcmFirmwareData</code>）与此扩展程序一起使用。</p><blockquote><p>在<code>Catalina</code>以及<code>Mojave</code>中可能必须使用<code>BrcmBluetoothInjector.kext</code>才能正确驱动蓝牙设备，比如<code>DW1820A</code> / <code>DW1560</code></p></blockquote><p>发行版ZIP中未提供此kext。 您可以尝试构建它。 它已被删除，因为它可能会导致那些不太仔细阅读且未正确安装首选kext的人感到困惑。 当前未使用新设备进行更新。 如果您的不存在，请根据需要编辑<code>Info.plist</code>。</p><h3 id="支持的设备"><a href="#支持的设备" class="headerlink" title="支持的设备"></a>支持的设备</h3><p><code>BrcmPatchRAM</code>支持任何基于BCM20702芯片组的Broadcom USB蓝牙设备（可能也支持其他芯片组，但是尚未经过测试）。</p><p>目前支持以下设备：</p><ul><li>标有 ***** 的设备已成功测试</li></ul><p>非PatchRAM设备（BrcmPatchRAM用于加速睡眠后的恢复）：</p><pre><code>* ``[03f0:231d]`` HP 231d (ProBook BT built-in firmware)* ``[13d3:3295]`` Azurewave BCM943225 (20702A bult-in firmware)</code></pre><p>经过测试的PatchRAM设备：<br>    * <code>[0489:e032]</code> 20702 Combo USB<br>    * <code>[0489:e042]</code> 20702A1 Lenovo China *<br>    * <code>[0489:e079]</code> Lenovo China 43162 NGFF<br>    * <code>[0489:e07a]</code> Lenovo NGFF (4352 / 20702)<br>    * <code>[04ca:2003]</code> 20702A1 Lenovo China<br>    * <code>[04ca:200a]</code> LiteOn (4352 Combo)<br>    * <code>[04ca:200b]</code> LiteOn (4352 Combo) *<br>    * <code>[04ca:200c]</code> LiteOn (4352 Combo)<br>    * <code>[04ca:200f]</code> Acer / LiteOn (4352 Combo)<br>    * <code>[050d:065a]</code> Belkin (20702)<br>    * <code>[0930:0221]</code> Toshiba (4352 / 20702)<br>    * <code>[0930:0223]</code> Toshiba NGFF (4352 / 20702) *<br>    * <code>[0a5c:216b]</code> HP Rapture 4352Z NGFF Combo<br>    * <code>[0a5c:216e]</code> HP Blackbird 43162 NGFF<br>    * <code>[0a5c:216f]</code> Dell DW1560 (4352/20702)<br>    * <code>[0a5c:21de]</code> 4352/20702A1 combo<br>    * <code>[0a5c:21e1]</code> HP Softsailing (20702A1)<br>    * <code>[0a5c:21e6]</code> non-UHE Lenovo Bluetooth (20702)<br>    * <code>[0a5c:21e8]</code> Bluetooth USB Dongle (20702A1) *<br>    * <code>[0a5c:21ec]</code> Inateck Bluetooth (20702A1)<br>    * <code>[0a5c:21fb]</code> HP Supra 4352 (20702A1 Combo)<br>    * <code>[0a5c:21fd]</code> Broadcom 4352Z<br>    * <code>[0a5c:22be]</code> Broadcom BCM20702 Bluetooth 4.0 USB Device<br>    * <code>[0a5c:6410]</code> Dell Wireless 1830 Bluetooth 4.1 LE<br>    * <code>[0a5c:6412]</code> Dell Wireless 1820 Bluetooth 4.1 LE<br>    * <code>[0a5c:6414]</code> BCM4350C5 (Lenovo) Bluetooth 4.1 LE<br>    * <code>[0b05:17cb]</code> Asus BT-400 (20702 stand-alone) *<br>    * <code>[0b05:17cf]</code> Asus (4352/20702A1 combo) *<br>    * <code>[0b05:180a]</code> Azurewave (4360/20702 combo)<br>    * <code>[13d3:3404]</code> Azurewave (4352HMB) *<br>    * <code>[13d3:3411]</code> Dell Alienware (4352/20702A1 combo) *<br>    * <code>[13d3:3413]</code> Azurewave (4360/20702 combo)<br>    * <code>[13d3:3418]</code> Azurewave (4352/20702 combo)<br>    * <code>[13d3:3435]</code> Azurewave (4352/20702 combo)<br>    * <code>[13d3:3456]</code> Azurewave (4352/20702 combo)<br>    * <code>[413c:8143]</code> Dell DW1550 (4352/20702 combo)</p><p>Windows软件包中的所有固件都存在于kext中，并自动与其供应商/设备ID关联。 它们有望工作，但尚未得到确认。 如果您可以确认上面未列出的工作设备，请通过github上的issues数据库进行通知。</p><h3 id="更多安装细节"><a href="#更多安装细节" class="headerlink" title="更多安装细节"></a>更多安装细节</h3><p><code>BrcmPatchRAM.kext</code>或<code>BrcmPatchRAM2.kext</code>或<code>BrcmPatchRAM3.kext</code>可以通过引导加载程序kext注入安装，也可以放置在<code>/System/Library/Extensions</code>（在10.11及更高版本中为<code>/Library/Extensions</code>）中。<br>根据系统版本，仅安装一个，而不是安装三个。</p><p><code>BrcmFirmwareRepo.kext</code>不适用于bootloader kext注入，除非使用特定于设备的固件注入器。<br><code>BrcmFirmwareData.kext</code>可以与bootloader kext注入一起使用。</p><p>您还可以使用特定于设备的固件注入器（与<code>BrcmFirmwareRepo.kext</code>结合使用）。 在这种情况下，<code>BrcmFirmwareRepo.kext</code>确实可以从引导加载程序kexts中工作。</p><p>您可以在git存储库的<code>firmwares</code>目录中找到设备专用注射器。 它们不包含在发行版ZIP中。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>可以通过以下内核标志来更改许多延迟。 如果发现在固件加载期间<code>BrcmPatchRAM</code>挂起，则可以更改这些值。</p><ul><li><p><code>bpr_probedelay</code>：更改<code>mProbeDelay</code>。 预设值为<code>0</code></p></li><li><p><code>bpr_initialdelay</code>：更改<code>mInitialDelay</code>。 预设值为<code>100</code></p></li><li><p><code>bpr_preresetdelay</code>：更改<code>mPreResetDelay</code>。 预设值为<code>20</code></p></li><li><p><code>bpr_postresetdelay</code>：更改<code>mPostResetDelay</code>。 预设值为<code>100</code></p></li></ul><p>有关这些延迟的更多详细信息，请参阅来源。</p><p>例如，…要将<code>mPostResetDelay</code>更改为400ms，请使用内核标志：<code>bpr_postresetdelay=400</code>。</p><p>注意：一些典型的“从睡眠中唤醒”问题报告成功：<code>bpr_probedelay=100 bpr_initialdelay=300 bpr_postresetdelay=300</code>。 或稍长的延迟：<code>bpr_probedelay=200 bpr_initialdelay=400 bpr_postresetdelay=400</code>。</p><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><p><code>BrcmPatchRAM</code>包含2个部分：</p><pre><code>* `BrcmPatchRAM`本身与受支持的Broadcom蓝牙USB设备（在`Info.plist`中配置）进行通信，并检测它们是否需要固件更新。 如果需要固件更新，则匹配的固件数据将被上载到设备并重置设备。</code></pre><ul><li><p><code>BrcmFirmwareStore</code>（由<code>BrcmFirmwareData.kext</code>或<code>BrcmFirmwareRepo.kext</code>实现）是共享资源，其中包含用于不同Broadcom蓝牙USB设备的所有已配置固件。</p><p>  某些设备需要特定于设备的固件，而其他设备可以使用Windows驱动程序中可用的最新版本。</p><p>  会定期添加/配置新固件以支持设备，因此请确保遵循发行更新，或者如果发现不支持设备，请记录问题。</p><p> 可以使用zlib压缩存储固件，以使配置大小易于管理。</p></li></ul><p>上传设备固件后，设备控件将移交给Apple的<code>BroadcomBluetoothHostControllerUSBTransport</code>。<br>这意味着，出于所有意图和目的，您的设备将是macOS上的本地设备，并且完全支持所有功能。</p><p>可以通过引导加载程序或通过BrcmPatchRAM与Continuity Activation Patch结合使用 <a href="https://github.com/acidanthera/BT4LEContinuityFixup" target="_blank" rel="noopener external nofollow noreferrer">BT4LEContinuityFixup</a>, 或通过dokterdok的脚本 <a href="https://github.com/dokterdok/Continuity-Activation-Tool" target="_blank" rel="noopener external nofollow noreferrer">Continuity-Activation-Tool</a>  </p><p><a href="https://github.com/acidanthera/OpenCorePkg" target="_blank" rel="noopener external nofollow noreferrer">OpenCore</a> 用户可以使用<code>config.plist</code>中的内核修补程序进行修补。</p><p>10.10的修补程序是：</p><pre class="line-numbers language-XML"><code class="language-XML"><dict>        <key>Comment</key>        <string>10.10.2+ BT4LE-Handoff-Hotspot, Dokterdok</string>        <key>Find</key>        <data>SIXAdFwPt0g=</data>        <key>Identifier</key>        <string>com.apple.iokit.IOBluetoothFamily</string>        <key>Replace</key>        <data>Qb4PAAAA61k=</data>        <!-- Rest of the fields --></dict><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>10.11的修补程序是：</p><pre class="line-numbers language-XML"><code class="language-XML"><dict>        <key>Comment</key>        <string>10.11.dp1+ BT4LE-Handoff-Hotspot, credit RehabMan based on Dokterdok original</string>        <key>Find</key>        <data>SIX/dEdIiwc=</data>        <key>Identifier</key>        <string>com.apple.iokit.IOBluetoothFamily</string>        <key>Replace</key>        <data>Qb4PAAAA60Q=</data>        <!-- Rest of the fields --></dict><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h3><p>安装<code>BrcmPatchRAM</code>之后，即使您的蓝牙图标可能出现，也可能是固件未正确更新。</p><p>通过转到系统信息并在蓝牙信息面板下检查蓝牙固件版本号来验证固件是否已更新。</p><p>如果版本号为<code>4096</code>，则意味着您的设备没有更新固件，并且将无法正常工作。</p><p>通过在终端中运行以下命令来验证系统日志中的任何错误：</p><pre class="line-numbers language-bash"><code class="language-bash">        <span class="token comment" spellcheck="true"># 10.12或者更新的系统:</span>        log show --last boot <span class="token operator">|</span> <span class="token function">grep</span> -i brcm<span class="token punctuation">[</span>fp<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 对于旧的macOS版本:</span>        <span class="token function">cat</span> /var/log/system.log <span class="token operator">|</span> <span class="token function">grep</span> -i brcm<span class="token punctuation">[</span>fp<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>确保只检查最新的引导消息，因为<code>system.log</code>可能会追溯几天。</p><p>如果固件上传失败并显示错误，请尝试安装<code>BrcmPatchRAM</code>的``debug`版本，以便在日志中获取更多详细信息。</p><p>为了报告错误，请在github上用以下信息记录问题：</p><ul><li>Device product ID</li><li>Device vendor ID</li><li>使用的<code>BrcmPatchRAM</code>版本</li><li><code>/var/log/system.log</code>中的<code>BrcmPatchRAM</code>调试输出转储，显示固件上传失败</li></ul><h3 id="固件兼容性"><a href="#固件兼容性" class="headerlink" title="固件兼容性"></a>固件兼容性</h3><p>某些USB设备专用于固件，尝试将同一芯片组的任何其他固件上载到它们中都会失败。</p><p>通常在系统日志中显示为：</p><pre class="line-numbers language-bash"><code class="language-bash">    BrcmPatchRAM: Version 0.5 starting.    BrcmPatchRAM: USB <span class="token punctuation">[</span>0a5c:21e8 5CF3706267E9 v274<span class="token punctuation">]</span> <span class="token string">"BCM20702A0"</span> by <span class="token string">"Broadcom Corp"</span>    BrcmPatchRAM: Retrieved firmware <span class="token keyword">for</span> firmware key <span class="token string">"BCM20702A1_001.002.014.1443.1612_v5708"</span><span class="token keyword">.</span>    BrcmPatchRAM: Decompressed firmware <span class="token punctuation">(</span>29714 bytes --<span class="token operator">></span> 70016 bytes<span class="token punctuation">)</span>.    BrcmPatchRAM: device request failed <span class="token punctuation">(</span>0xe000404f<span class="token punctuation">)</span>.    BrcmPatchRAM: Failed to reset the device <span class="token punctuation">(</span>0xe00002d5<span class="token punctuation">)</span>.    BrcmPatchRAM: Unable to get device status <span class="token punctuation">(</span>0xe000404f<span class="token punctuation">)</span>.    BrcmPatchRAM: Firmware upgrade completed successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两次之间的错误表示固件未成功上传，并且设备很可能需要配置特定的固件。</p><p>对于其他设备，可用的最新固件（即使未在Windows驱动程序中专门指定）也可以正常工作。</p><p>###新设备</p><p>为了支持新设备，需要从现有Windows驱动程序中提取该设备的固件。</p><p>可在以下位置找到最新（最新）的Broadcom USB蓝牙驱动程序的副本：<br><a href="http://drivers.softpedia.com/get/BLUETOOTH/Broadcom/ASUS-X99-DELUXE-Broadcom-Bluetooth-Driver-6515800-12009860.shtml#download" target="_blank" rel="noopener external nofollow noreferrer">http://drivers.softpedia.com/get/BLUETOOTH/Broadcom/ASUS-X99-DELUXE-Broadcom-Bluetooth-Driver-6515800-12009860.shtml#download</a></p><p><em>如果您遇到的驱动程序比12.0.0.9860更新，请告诉我。</em></p><p>为了获取设备专用的设备固件，请执行以下步骤：</p><ul><li><p>查找您的USB设备供应商和产品ID，在此示例中，我们将使用BCM94352Z PCI NGFF WiFi/BT组合卡，其供应商为0930，产品ID为0233。</p></li><li><p>解压缩Windows蓝牙驱动程序包并打开bcbtums-win8x64-brcm.inf文件</p></li><li><p>在.inf文件中找到您的供应商/设备ID组合</p><pre class="line-numbers language-dosini"><code class="language-dosini">%BRCM20702.DeviceDesc%=BlueRAMUSB0223, USB\VID_0930&PID_0223       ; 20702A1 Toshiba 4352<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在.inf文件中找到提到的<code>RAMUSB0223</code>设备：</p><pre class="line-numbers language-dosini"><code class="language-dosini">;;;;;;;;;;;;;RAMUSB0223;;;;;;;;;;;;;;;;;[RAMUSB0223.CopyList]bcbtums.sysbtwampfl.sysBCM20702A1_001.002.014.1443.1457.hex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在这种情况下，请从Windows软件包中复制与设备匹配的固件十六进制文件。<code>BCM20702A1_001.002.014.1443.1457.hex</code></p></li><li><p>现在可以选择使用随附的zlib.pl脚本压缩固件文件：</p><pre class="line-numbers language-bash"><code class="language-bash">zlib.pl deflate BCM20702A1_001.002.014.1443.1457.hex <span class="token operator">></span> BCM20702A1_001.002.014.1443.1457.zhx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>之后，可以创建一个十六进制转储，以粘贴到plist编辑器中：</p><pre class="line-numbers language-bash"><code class="language-bash">xxd -ps BCM20702A1_001.002.014.1443.1457.zhx<span class="token operator">|</span><span class="token function">tr</span> <span class="token string">'\n'</span> <span class="token string">' '</span> <span class="token operator">></span> BCM20702A1_001.002.014.1443.1457.dmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><em>使用plist编辑器在</em> <em><code>BcmFirmwareStore/Firmwares</code></em>词典下创建一个新的固件密钥。</p><pre><code>     请注意，macOS中显示的版本号是文件名中的最后一个数字（在我们的示例中为1457）+ 4096。     因此，在这种情况下，macOS中的固件版本为：*`c14 v5553`*。    </code></pre></li><li><p>在<em><code>BcmFirmwareStore/Firmwares</code></em>下配置密钥后，将设备ID添加为<code>BrcmPatchRAM</code>的新设备。</p></li></ul><p>固件也可以直接通过<code>BrcmFirmwareRepo.kext/Contents/Resources</code>加载，可以通过固件密钥名称（请参见上文），也可以仅使用供应商和设备ID命名文件。 例如，<code>0930_0223.hex</code>（未压缩）或<code>0930_0223.zhx</code>（压缩）。</p><p>复制现有的IOKit个性化并修改其属性是最简单的方法。使用其唯一的固件密钥配置较早的固件。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>v2.5.3</p><ul><li>Fix parsing firmware versions (e.g. 8785 is 4689)</li><li>Use 4689 firmware for DW1820A [0a5c:6412]</li><li>Log uncompressed firmware SHA-1 in DEBUG builds</li><li>Reworked device reset to improve compatibility (thx @mishurov)</li></ul></li><li><p>v2.5.2</p><ul><li>Revert DW1820A from 8785 to 8784 [0a5c:6412]</li><li>Add older firmwares from 12.0.1.1012</li><li>Add bpr_handshake boot argument to override handshake support mode</li><li>Change bpr_preresetdelay=0 behaviour to no longer imply bpr_handshake=1</li></ul></li><li><p>v2.5.1</p><ul><li>Add Lenovo 00JT494 [0a5c:6414]</li></ul></li><li><p>v2.5.0</p><ul><li>Initial import based on @headkaze 2.2.12</li><li>Merged BrcmPatchRAM3 improvements authored by @Mieze</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6lbe" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lbe</a><br>密码: e5oj</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/BrcmPatchRAM" target="_blank" rel="noopener external nofollow noreferrer">BrcmPatchRAM</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BrcmPatchRAM </tag>
            
            <tag> 博通 </tag>
            
            <tag> 无线网卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clover 四叶草引导</title>
      <link href="/Clover.html"/>
      <url>/Clover.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>macOS、 Windows 和 Linux 的 UEFI、legacy 模式引导程序。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="5117"><a href="#5117" class="headerlink" title="5117"></a>5117</h3><ul><li><p>CloverThemeManager is now part of Clover.app.</p></li><li><p>Advanced kernel patches to be independent on system version.<br>Excluded old settings.</p></li></ul><h3 id="5116"><a href="#5116" class="headerlink" title="5116"></a>5116</h3><ul><li>Use symbolic methods for main internal patches for more insurance they will work in new systems.<br>Multiple GUI bugs eliminating.</li></ul><h3 id="5115"><a href="#5115" class="headerlink" title="5115"></a>5115</h3><ul><li>Introduced symbolic kext and kernel patcher.<br>Fixed GUI glitches and other bugs.</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6m8h" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6m8h</a><br>密码: g1xf</p><h2 id="版本历史-1"><a href="#版本历史-1" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><table><thead><tr><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">2020-5-12</td><td align="center">5117</td></tr><tr><td align="center">2020-5-7</td><td align="center">5116</td></tr><tr><td align="center">2020-5-7</td><td align="center">5115</td></tr></tbody></table><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/CloverHackyColor/CloverBootloader" target="_blank" rel="noopener external nofollow noreferrer">CloverBootloader</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 四叶草 </tag>
            
            <tag> Clover </tag>
            
            <tag> Hackintosh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>以太网卡驱动汇总</title>
      <link href="/Ethernet.html"/>
      <url>/Ethernet.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="RTL8125"><a href="#RTL8125" class="headerlink" title="RTL8125"></a>RTL8125</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>瑞昱 RTL8125 2.5GBit 以太网卡控制器驱动</p><h4 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h4><ul><li>Supports all versions of Realtek’s RTL8125 2.5GBit Ethernet Controllers found on recent boards.</li><li>Support for multisegment packets relieving the network stack of unnecessary copy operations when assembling packets for transmission.</li><li>No-copy receive and transmit. Only small packets are copied on reception because creating a copy is more efficient than allocating a new buffer. TCP, UDP and IPv4 checksum offload (receive and transmit).</li><li>TCP segmentation offload over IPv4 and IPv6 (still disabled until I find time to test it).</li><li>Support for TCP/IPv4, UDP/IPv4, TCP/IPv6 and UDP/IPv6 checksum offload.</li><li>Supports jumbo frames up to 9000 bytes (strongly recommended for 2.5GBit operation).</li><li>Fully optimized for Catalina. Note that older versions of macOS might not support 2.5GB Ethernet.</li><li>Supports Wake on LAN (untested).</li><li>Supports VLAN (untested).</li><li>Support for Energy Efficient Ethernet (EEE) which can be disabled by setting enableEEE to NO in the drivers Info.plist without rebuild. The default is YES.</li><li>The driver is published under GPLv2.</li></ul><h3 id="RTL8111"><a href="#RTL8111" class="headerlink" title="RTL8111"></a>RTL8111</h3><p>支持 Realtek RTL8111/8168 B/C/D/E/F/G/H</p><h3 id="RTL8100"><a href="#RTL8100" class="headerlink" title="RTL8100"></a>RTL8100</h3><p>支持 RTL8107E、RTL810X、RTL8139</p><h3 id="IntelMausi"><a href="#IntelMausi" class="headerlink" title="IntelMausi"></a>IntelMausi</h3><p>支持 82578LM、82578LC、82578DM、82578DC、82579LM、82579V、I217LM、I217V、I218LM、I218V、I218LM2、I218V2、I218LM3、I219V、I219LM、I219V2、I219LM2、I219LM2</p><h3 id="IntelMausiEthernet"><a href="#IntelMausiEthernet" class="headerlink" title="IntelMausiEthernet"></a>IntelMausiEthernet</h3><p>支持 82578LM、82578LC、82578DM、82578DC、82579LM、82579V、I217LM、I217V、I218LM、I218V、I218LM2、I218V2、I218LM3、I219V、I219LM、I219V2、I219LM2、I219LM2</p><h3 id="AtherosE2200Ethernet"><a href="#AtherosE2200Ethernet" class="headerlink" title="AtherosE2200Ethernet"></a>AtherosE2200Ethernet</h3><p>支持 AR816x、AR817x、Killer E220x、Killer E2400、Killer E2500</p><h3 id="AppleIntelE1000"><a href="#AppleIntelE1000" class="headerlink" title="AppleIntelE1000"></a>AppleIntelE1000</h3><p>支持Intel系列 82540, 82541, 82542, 82543, 82544, 82545, 82546, 82547, 82578 (P55/H55) 82579 (P67/H67) 82574L 82571 82572 82573 82574 82583 I217V</p><h3 id="AppleIGB"><a href="#AppleIGB" class="headerlink" title="AppleIGB"></a>AppleIGB</h3><p>支持 Intel 82575, 82576, 82580, dh89xxcc, i350, i210 and i211</p><h3 id="ALXEthernet"><a href="#ALXEthernet" class="headerlink" title="ALXEthernet"></a>ALXEthernet</h3><p>支持 Atheros alx Ethernet</p><h3 id="NullEthernet"><a href="#NullEthernet" class="headerlink" title="NullEthernet"></a>NullEthernet</h3><p>无线网卡内建</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><h3 id="RTL8125-1"><a href="#RTL8125-1" class="headerlink" title="RTL8125"></a>RTL8125</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6lwf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lwf</a><br>密码: 4pgo</p><h3 id="RTL8111-1"><a href="#RTL8111-1" class="headerlink" title="RTL8111"></a>RTL8111</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6m1a" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6m1a</a><br>密码: huk2</p><h3 id="RTL8100-1"><a href="#RTL8100-1" class="headerlink" title="RTL8100"></a>RTL8100</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6lqj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lqj</a><br>密码: 9x3l</p><h3 id="IntelMausi-1"><a href="#IntelMausi-1" class="headerlink" title="IntelMausi"></a>IntelMausi</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6lha" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lha</a><br>密码: a4zp</p><h3 id="IntelMausiEthernet-1"><a href="#IntelMausiEthernet-1" class="headerlink" title="IntelMausiEthernet"></a>IntelMausiEthernet</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6lve" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lve</a><br>密码: gu0a</p><h3 id="AtherosE2200Ethernet-1"><a href="#AtherosE2200Ethernet-1" class="headerlink" title="AtherosE2200Ethernet"></a>AtherosE2200Ethernet</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6lsb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lsb</a><br>密码: 322z</p><h3 id="AppleIntelE1000-1"><a href="#AppleIntelE1000-1" class="headerlink" title="AppleIntelE1000"></a>AppleIntelE1000</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6mkj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6mkj</a><br>密码: gw6w</p><h3 id="AppleIGB-1"><a href="#AppleIGB-1" class="headerlink" title="AppleIGB"></a>AppleIGB</h3><p>地址: <a href="https://taolu.lanzous.com/b01bdr60j" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdr60j</a><br>密码: 4mig</p><h3 id="ALXEthernet-1"><a href="#ALXEthernet-1" class="headerlink" title="ALXEthernet"></a>ALXEthernet</h3><p>地址: <a href="https://taolu.lanzous.com/b01bdr5oh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdr5oh</a><br>密码: 6kr1</p><h3 id="NullEthernet-1"><a href="#NullEthernet-1" class="headerlink" title="NullEthernet"></a>NullEthernet</h3><p>地址: <a href="https://taolu.lanzous.com/b01bd6nmh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6nmh</a><br>密码: fhul</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><ul><li><a href="https://github.com/Mieze/LucyRTL8125Ethernet" target="_blank" rel="noopener external nofollow noreferrer">RTL8125</a></li><li><a href="https://github.com/Mieze/RealtekRTL8100" target="_blank" rel="noopener external nofollow noreferrer">RTL8100</a></li><li><a href="https://github.com/Mieze/RTL8111_driver_for_OS_X" target="_blank" rel="noopener external nofollow noreferrer">RTL8111</a></li><li><a href="https://github.com/acidanthera/IntelMausi" target="_blank" rel="noopener external nofollow noreferrer">IntelMausi</a></li><li><a href="https://github.com/Mieze/IntelMausiEthernet" target="_blank" rel="noopener external nofollow noreferrer">IntelMausiEthernet</a></li><li><a href="https://github.com/Mieze/AtherosE2200Ethernet" target="_blank" rel="noopener external nofollow noreferrer">AtherosE2200Ethernet</a></li><li><a href="https://github.com/chris1111/AppleIntelE1000e" target="_blank" rel="noopener external nofollow noreferrer">AppleIntelE1000</a></li><li><a href="https://github.com/Dolnor/OSX-ALXEthernet" target="_blank" rel="noopener external nofollow noreferrer">ALXEthernet</a></li><li><a href="https://github.com/RehabMan/OS-X-Null-Ethernet" target="_blank" rel="noopener external nofollow noreferrer">NullEthernet</a></li></ul><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><table><thead><tr><th align="center">驱动名称</th><th align="center">更新时间</th><th align="center">版本号</th></tr></thead><tbody><tr><td align="center">RTL8111</td><td align="center">2020-5-8</td><td align="center">2.3.0d10</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 以太网 </tag>
            
            <tag> RTL8125 </tag>
            
            <tag> RTL8100 </tag>
            
            <tag> RTL8111 </tag>
            
            <tag> IntelMausi </tag>
            
            <tag> IntelMausiEthernet </tag>
            
            <tag> AtherosE2200Ethernet </tag>
            
            <tag> AppleIntelE1000 </tag>
            
            <tag> AppleIGB </tag>
            
            <tag> NullEthernet </tag>
            
            <tag> Ethernet </tag>
            
            <tag> 内建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FakePCIID 驱动汇总</title>
      <link href="/FakePCIID.html"/>
      <url>/FakePCIID.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="FakePCIID-kext"><a href="#FakePCIID-kext" class="headerlink" title="FakePCIID.kext"></a>FakePCIID.kext</h3><p>The purpose of this kext is to attach to any IOPCIDevice so it can provide alternate PCI ID when another driver attached to the same device requests them.  This technique can be used instead of patching binaries that may check for supported device-ids (or other PCI IDs) in their IOService::probe or IOService::start method.</p><p>In order to attach FakePCIID to a given IOPCIDevice, an injector kext must be built that IOKit can use to match against.<br>The FakePCIID.kext Info.plist has no built-in IOKitPersonalities, as it is generic and not built to suit a specific purpose.  The distribution ZIP provide has four such injector kexts, which are described below.  Custom injector kexts can be created for other devices.</p><p>Note: FakePCIID_Intel_HD_Graphics.kext works for HD4400 mobile, HD4600 mobile, HD4200 mobile, and HD4600 desktop.</p><p>In any case, a DSDT patch, FakeID configuration (Clover), or FakeProperties dictionary in the injector’s Info.plist will be required to inject the properties that FakePCIID can read on the IOPCIDevice.  The properties used by FakePCIID are described later in this post.  The properties must be present on the PCIDevice that is being hooked (the direct parent of FakePCIID).</p><h3 id="Downloads"><a href="#Downloads" class="headerlink" title="Downloads:"></a>Downloads:</h3><p>Downloads are available on Bitbucket:</p><p><a href="https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/" target="_blank" rel="noopener external nofollow noreferrer">https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/</a></p><h3 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h3><p>In all cases, FakePCIID.kext must be installed with a kext installer (such as Kext Wizard).  The Release build should be used for normal installs.  It has a minimum of output to system.log.  For troubleshooting, the Debug build can be used.</p><p>The separate folder ‘injectors’ in the distribution zip contains two extra codeless kexts:</p><ul><li><p>AppleIntelKBLGraphicsFramebufferInjector_3e9x.kext: Used for spoofing unsupported CoffeeLake as KabyLake</p></li><li><p>BroadcomWiFiInjector.kext: Used to load the native Broadcom WiFi kexts for unsupported devices.  To be used with AirportBrcmFixup.kext as replacement for FakePCIID_Broadcom_WiFi.kext (both will work, but with AirportBrcmFixup.kext, full functionality of FakePCIID.kext is not needed)</p></li></ul><p>In order to cause the kext to be loaded against a particular device, you must also install the appropriate FakePCIID injector kext.  Currently, seven injectors are provided:</p><ul><li><p>FakePCIID_Intel_HD_Graphics.kext (formerly FakePCIID_HD4600_HD4400.kext):<br>This kext will attach to <code>8086:0412</code>, <code>8086:0416</code>, <code>8086:0a1e</code>, <code>8086:041e</code>, <code>8086:0a16</code>, <code>8086:041a</code>, <code>8086:016a</code>, <code>8086:191d</code>,  <code>8086:162a</code>, <code>8086:5917</code>, <code>8086:3e91</code>, <code>8086:3e92</code>, <code>8086:1626</code>, <code>8086:1616</code></p><ul><li><p><code>8086:0412</code> is HD4600 desktop (now the only GT2 device supported in Yosemite as of 10.10.2)</p></li><li><p><code>8086:0a16</code> is HD4400 mobile.</p></li><li><p><code>8086:0416</code> is HD4600 mobile.</p></li><li><p><code>8086:0a1e</code> is HD4200 mobile.</p></li><li><p><code>8086:041e</code> is HD4400 desktop.</p></li><li><p><code>8086:041a</code> is P4600 server.</p></li><li><p><code>8086:016a</code> is P4000 server.</p></li><li><p><code>8086:191d</code> is P530 server.</p></li><li><p><code>8086:162a</code> is P6300 server.</p></li><li><p><code>8086:1616</code> is HD5500.  Some CPUs (i3-5005U for example), must spoof as 0x1626 to avoid hang at boot</p></li><li><p><code>8086:5917</code> is HD620 KabyLake-R.</p></li><li><p><code>8086:3e91</code> is UHD630 CoffeLake (typical 3e91 with i3 or other low-end CPUs)</p><p>For HD4600, normally fake device-id of <code>8086:0412</code> will be injected for Yosemite, as Yosemite does not natively recognize <code>8086:0416</code>.  <code>8086:0412</code> is the native device-id for HD4600 desktop.<br>By injecting <code>0412</code>, <code>AppleIntelFramebufferAzul</code> and <code>AppleIntelHD5000Graphics</code> will load.<br>And since, FakePCIID will also be attached to these devices, it will successfully fool both kexts that the device an Intel HD4600 Desktop IGPU (0412).</p><p>For P4000 support, inject device-id 0166 (HD4000).<br>For P530 support, inject device-id 1912 (HD530).<br>For P6300 support, inject device-id 1622 (HD6200)<br>For HD620 KabyLake-R, inject device-id 5916 (HD620)<br>For UHD630 CoffeeLake, inject device-id 3e92 (UHD630)</p></li></ul></li><li><p>FakePCIID_Intel_HDMI_Audio.kext:<br>This kext will attach to <code>8086:0c0c</code>, <code>8086:9d70</code>, <code>8086:9d71</code>, <code>8086:9d74</code>, <code>8086:a170</code>, <code>8086:a171</code>, <code>8086:a2f0</code>,  <code>8086:a348</code>, or <code>8086:9dc8</code></p><p>  The purpose is to provide support for unsupported HDAU (native B0D3) or unsuppored HDEF (100-series, 200-series, 300-series) ) devices which provide HDMI-audio on Haswell(+) systems.  <code>8086:0c0c</code> is one such unsupported ID.  The other two <code>8086:0d0c</code>, and <code>8086:0a0c</code> are supported.  This kext, AppleHDAController, loads by PCI class, so you normally would not inject device-id for it, but to allow FakePCIID to work, you may need to inject RM,device-id (one of the supported IDs).  By default for Haswell HDAU, the kext injects RM,device-id=&lt;0c 0a 00 00&gt; (0x0a0c).  For 100-series and later HDEF, the kext injects RM,device-id=&lt;70 a1 00 00&gt; or &lt;70 9d 00 00&gt; depending on HDEF device-id (refer to the Info.plist).</p><p>  You can override it with a DSDT edit or ACPI injection via SSDT.</p><p>  For example (_DSM patch for HDAU device for FakePCIID and HDMI audio, if you wanted 0x0d0c instead of 0x0a0c):</p></li></ul><pre class="line-numbers language-c"><code class="language-c">into method label _DSM parent_adr <span class="token number">0x00030000</span> remove_entry<span class="token punctuation">;</span>into device name_adr <span class="token number">0x00030000</span> insertbegin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span> <span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n        <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n                <span class="token string">"RM,device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x0c</span><span class="token punctuation">,</span> <span class="token number">0x0d</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"hda-gfx"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"onboard-1"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>In the case of Skylake 8086:9d70 or 8086:1a70, it is attaching to the HDEF device (usually called HDAS, but renamed to HDEF to match what Aple expects).  Skylake HDMI/DP audio codec is on HDEF along with onboard audio.  It injects RM,device-id=&lt;70 a1 00 00&gt; for 0x9d70 and RM,device-id=&lt;70 9d 00 00&gt; for 0xa170.  In other words, with these two device-ids, it will reverse them.  Try it if you have everything set correctly for HDMI/DP audio, but it is not working.  This was discovered by noting that Skylake HDMI audio works on the NUC6i7KYK (Skull Canyon), but not the other NUC6 devices.  It is quite system dependent.  Some computers need them swapped, others do not.  So test both with and without.This kext won't fix other problems/mistakes you may have with your HDMI/DP setup (eg. missing "hda-gfx", mismatched "layout-id" injection, incorrect or wrong framebuffer patches, or missing ACPI renames).</code></pre><ul><li><p>FakePCIID_AR9280_as_AR946x:<br>  This kext will attach to <code>168c:0034</code> or <code>168c:002a</code>.</p><p>  This particular application of FakePCIID.kext is used in a situation where you have an AR9280 re-branded as some other device.  For example, with the Lenovo u430, it is useful to rebrand an AR9280 ias an AR946x as that device is allowed by the BIOS whitelist where AR9280 is not.<br>  By using FakePCIID, we can remap the PCI IDs back to AR9280 (<code>168c:002a</code>) even though the device itself is reporting <code>168c:0034</code>.</p></li></ul><ul><li><p>FakePCIID_Broadcom_WiFi.kext (formerly FakePCIID_BCM94352Z_as_BCM94360CS2.kext)<br>  This kext will attach to <code>14e4:43b1</code>, <code>14e4:4357</code>, <code>14e4:4331</code>, <code>14e4:4353</code>, <code>14e4:432b</code>, <code>14e4:43ba</code>, <code>14e4:43a3</code>, or <code>14e4:43a0</code>.<br>  And also <code>106b:4e</code>, <code>14e4:4312</code>, <code>14e4:4313</code>, <code>14e4:4318</code>, <code>14e4:4319</code>, <code>14e4:431a</code>, <code>14e4:4320</code>, <code>14e4:4324</code>, <code>14e4:4325</code>, <code>14e4:4328</code>, <code>14e4:432c</code>, <code>14e4:432d</code>.</p><p>  Originally created for BCM94352Z, this particular application of FakePCIID.kext is used to emulate an authentic Apple Airport Extreme, when using a variety of supported Broadcom WiFi devices.</p></li></ul><ul><li>FakePCIID_BCM57XX_as_BCM57765.kext:<br>   This kext will attach to numerous unsupported BCM57XX Ethernet devices in order to make the native drivers work for a wider variety of BCM Ethernet chipsets that are compatible, but not supported due to probe testing of PCI device-id/subdevice-id values.<br>   Further details here: <a href="http://www.tonymacx86.com/network/155984-fakepciid-broadcom-bcm57xx-network-oob.html" target="_blank" rel="noopener external nofollow noreferrer">http://www.tonymacx86.com/network/155984-fakepciid-broadcom-bcm57xx-network-oob.html</a></li></ul><ul><li>FakePCIID_Intel_GbX.kext:<br>   This kext will attach to a number of Intel Ethernet devices in an attempt to make the Small Tree drivers for Intel chipset based cards work.<br>   Further details here: <a href="http://www.tonymacx86.com/network/156135-intel-network-adapters-os-x-small-tree-drivers.html" target="_blank" rel="noopener external nofollow noreferrer">http://www.tonymacx86.com/network/156135-intel-network-adapters-os-x-small-tree-drivers.html</a></li></ul><ul><li><p>FakePCIID_XHCIMux.kext<br>   This kext will attach to <code>8086:1e31</code>, <code>8086:9c31</code>, <code>8086:9cb1</code>, <code>8086:9c31</code>, and <code>8086:8cb1</code><br>   This injector is a bit of an extension to normal FakePCIID duties.  It doesn’t actually fake any PCI IDs.  Rather, it forces certain values to XUSB2PR (PCI config offset 0xD0) on the Intel XHCI USB3 controller.  The effect is to route any USB2 devices attached to the USB2 pins on the XHC ports to EHC1.  In other words, handle USB2 devices with the USB2 drivers instead of the USB3 drivers (AppleUSBEHCI vs. AppleUSBXHCI).</p><p>   So normally what is a complex “multiplex” DSDT patch (that is not well understood), is a simple kext install.</p><p>   Configuration properties and their defaults:</p><pre><code>  RM,pr2-force &lt;00 00 00 00&gt;.  By default forces all XHCI ports to route USB2 devices to EHC1.  RM,pr2-init &lt;01&gt;.  Will write RM,pr2-force value at startup if non-zero.  RM,pr2-block &lt;01&gt;.  Will block writes to XUSB2PR if non-zero.  RM,pr2m-block &lt;01&gt;.  No evidence that OS X drivers attempt to write XUSB2PRM (offset 0xD4), but since this kext relies on a valid value here (as provided by the BIOS), writes to it are blocked if non-zero.  RM,pr2-honor-pr2m &lt;01&gt;:  Changes to XUSB2PR will be masked by XUSB2PRM if this is non-zero.  RM,pr2-chipset-mask: Writes to XUSB2PR are masked by this value.  This is defined by the chipset documentation.  Default value depends on chipset.</code></pre><p>   Refer to Intel 7/8/9-series chipset data sheet for more info.</p></li></ul><p>In order to create your own injector, you should be familiar with IOKit matching and kext Info.plist files.  There is ample documentation available on developer.apple.com.  Use the existing injectors as a template to build your own.</p><h3 id="DSDT-patches"><a href="#DSDT-patches" class="headerlink" title="DSDT patches"></a>DSDT patches</h3><p>FakePCIID.kext will return the vendor-id, device-id, subsystem-vendor-id, and subsystem-id as found in the IO registry under the associated IOPCIDevice.  In order to provide the correct/supported values, _DSM injection is employed (or FakeID with Clover).</p><p>For example, this is one such patch that might be used for HD4600:</p><pre class="line-numbers language-c"><code class="language-c">into method label _DSM parent_adr <span class="token number">0x00020000</span> remove_entry<span class="token punctuation">;</span>into device name_adr <span class="token number">0x00020000</span> insertbegin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span> <span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n        <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n                <span class="token string">"device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"AAPL,ig-platform-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x0a</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"hda-gfx"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"onboard-1"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"model"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"Intel HD 4600"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Note that the only property read by FakePCIID in the patch above is “device-id”.  Also the “device-id” injection could have been provided by Clover’s config.plist (FakeID) or by (as an example) Chimera’s IGPDeviceID flag.</p><p>The “device-id” property is used both by FakePCIID and by IOKit matching. Generally this is OK, but for flexibility you can specify a different IDs to be used by FakePCIID by using the “RM,” prefixed properties.  </p><p>So, a minimalist patch would be as follows:</p><pre class="line-numbers language-c"><code class="language-c">into method label _DSM parent_adr <span class="token number">0x00020000</span> remove_entry<span class="token punctuation">;</span>into device name_adr <span class="token number">0x00020000</span> insertbegin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span> <span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n        <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n                <span class="token string">"RM,device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>You would have to inject “device-id” and “ig-platform-id” to have working HD4600 using some other mechanism, of course.  But FakePCIID.kext can do its work with only “RM,device-id”.</p><p>And this is the patch used in the AR9280 as AR946x scenario:</p><pre class="line-numbers language-c"><code class="language-c">into method label _DSM parent_label PXSX remove_entry<span class="token punctuation">;</span>into device label PXSX parent_label RP03 insertbegin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span> <span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n        <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n                <span class="token string">"vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x8c</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"subsystem-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"subsystem-vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"compatible"</span><span class="token punctuation">,</span> <span class="token string">"pci168c,2a"</span><span class="token punctuation">,</span>\n                <span class="token string">"IOName"</span><span class="token punctuation">,</span> <span class="token string">"pci168c,2a"</span><span class="token punctuation">,</span>\n                <span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"pci168c,2a"</span><span class="token punctuation">,</span>\n                <span class="token string">"AAPL,slot-name"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"AirPort"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"device_type"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"AirPort"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"model"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token string">"Atheros 928x 802.11 b/g/n Wireless Network Adapter"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>For BCM94352Z as BCM94360CS2 the following DSDT patch is used:</p><pre class="line-numbers language-c"><code class="language-c">into device Label PXSX parent_label RP03 replace_content begin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span><span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n    <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token string">"vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0xe4</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"subsystem-vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x6b</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"subsystem-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"compatible"</span><span class="token punctuation">,</span> <span class="token string">"pci14e4,43a0"</span><span class="token punctuation">,</span>\n        <span class="token string">"IOName"</span><span class="token punctuation">,</span> <span class="token string">"pci14e4,43a0"</span><span class="token punctuation">,</span>\n        <span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"pci14e4,43a0"</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Please realize that the nodes PXSX and RP03 are specific to the subject DSDT.  In this case a Lenovo u430 laptop.</p><p>Again, a minimalist patch for the WiFi scenario would look like this:</p><pre class="line-numbers language-c"><code class="language-c">into method label _DSM parent_label PXSX remove_entry<span class="token punctuation">;</span>into device label PXSX parent_label RP03 insertbegin<span class="token function">Method</span> <span class="token punctuation">(</span>_DSM<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> NotSerialized<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">If</span> <span class="token punctuation">(</span><span class="token function">LEqual</span> <span class="token punctuation">(</span>Arg2<span class="token punctuation">,</span> Zero<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x03</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span>\n        <span class="token function">Return</span> <span class="token punctuation">(</span><span class="token function">Package</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n                <span class="token string">"RM,vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x8c</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"RM,device-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"RM,subsystem-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">"RM,subsystem-vendor-id"</span><span class="token punctuation">,</span> <span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\nend<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Assuming that the function “compatible” served in the original example is with some other mechanism (an injector kext, or Clover configuration).</p><p>Properties supported by FakePCIID and their corresponding PCI configuration space offsets are listed below:</p><ul><li>Offset <code>0x00</code>: “vendor-id”, “RM,vendor-id”</li><li>Offset <code>0x02</code>: “device-id”, “RM,device-id”</li><li>Offset <code>0x2c</code>: “subsystem-vendor-id”, “RM,subsystem-vendor-id”</li><li>Offset <code>0x2e</code>: “subsystem-id”, “RM,subsystem-id”</li></ul><p>For more information on the PCI configuration space: <a href="http://en.wikipedia.org/wiki/PCI_configuration_space" target="_blank" rel="noopener external nofollow noreferrer">http://en.wikipedia.org/wiki/PCI_configuration_space</a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6mxc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6mxc</a><br>密码: 4tx2</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/RehabMan/OS-X-Fake-PCI-ID" target="_blank" rel="noopener external nofollow noreferrer">FakePCIID</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FakePCIID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FakeSMC 驱动汇总</title>
      <link href="/FakeSMC.html"/>
      <url>/FakeSMC.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>FakeSMC 是一个开源 SMC 设备驱动程序/仿真器。HWSensors 是一个软件包，其中包括驱动程序和应用程序，可以读取 Mac 上可用的硬件传感器信息。</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6mva" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6mva</a><br>密码: b428</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/RehabMan/OS-X-FakeSMC-kozlek" target="_blank" rel="noopener external nofollow noreferrer">FakeSMC</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FakeSMC </tag>
            
            <tag> SMC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelBluetoothFirmware 英特尔蓝牙驱动</title>
      <link href="/IntelBluetooth.html"/>
      <url>/IntelBluetooth.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>IntelBluetoothFirmware 是一个用于在 macOS 中启用原生蓝牙的固件上传驱动，固件的二进制文件来自 Linux。</p><p>经过数月的测试后，这个驱动已经被证实可以正常稳定工作。目前支持 macOS 10.13 及以上，支持的设备 ID 如下：</p><p>0x8087, 0x0a2a<br>0x8087, 0x07dc<br>0x8087, 0x0aa7<br>0x8087, 0x0025<br>0x8087, 0x0aaa<br>0x8087, 0x0026<br>0x8087, 0x0029<br>0x8087, 0x0a2b</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载最新 release，注入到引导工具后重启即可。<br><strong><em>不要把驱动安装到 /Library/Extensions 或 /System/Library/Extensions，系统很有可能因此冻结。</em></strong></p><ul><li>IntelBluetoothFirmware.kext<blockquote><p>用于上传固件</p></blockquote></li><li>IntelBluetoothInjector.kext <blockquote><p>用于修复系统设置内的蓝牙开关</p></blockquote></li></ul><h2 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h2><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>1.0.3</p><ul><li>fix dependencies mistake</li><li>replace newest firmwares</li><li>add ax201 support</li><li>support 10.13+</li><li>add fw_gen script to support cut off extra firmwares and reduce kext size</li></ul></li><li><p>1.0.2</p><ul><li>support 10.12+</li></ul></li><li><p>1.0.1</p><ul><li>修复睡眠唤醒后蓝牙消失</li></ul></li><li><p>1.0.0</p><ul><li>修复关机不断电的问题</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6lyh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lyh</a><br>密码: 9ix6</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/zxystd/IntelBluetoothFirmware" target="_blank" rel="noopener external nofollow noreferrer">IntelBluetoothFirmware</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝牙 </tag>
            
            <tag> IntelBluetoothFirmware </tag>
            
            <tag> Bluetooth </tag>
            
            <tag> 英特尔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NVMeFix NVMe修复驱动汇总</title>
      <link href="/NVMeFix.html"/>
      <url>/NVMeFix.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>NVMeFix 是 Apple NVMe 存储驱动程序 IONVMeFamily 的一组修补程序。 其目标是改善非 Apple SSD 的兼容性。 它可以在 Apple 和非 Apple 计算机上使用。</p><p>实现了以下功能：</p><ul><li>自主电源状态转换以减少控制器的空闲功耗。</li><li>主机驱动器有功功率状态管理。</li><li>某些控制器（VMware，三星PM981）上的超时恐慌的解决方法。</li><li>如果有足够的信息提交给Bugtracker，则可以解决与第三方SSD的其他不兼容问题。</li></ul><p><strong><em>不幸的是，某些问题不能仅通过内核端驱动程序来解决。 例如，MacBookPro 11,1 EFI包含旧版本的NVMHCI DXE驱动程序，当从启用完整磁盘加密的休眠状态恢复时，该驱动程序会挂起。</em></strong></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>v1.0.2</p><ul><li>Prevent timeout panic on certain controllers (VMware, Samsung PM981)</li><li>Only enable active NVMe power management for controllers that do not support APST</li></ul></li><li><p>v1.0.1</p><ul><li>Add OpenCore support for quirk autodetection</li></ul></li><li><p>v1.0.0</p><ul><li>Initial release</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6l2f" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l2f</a><br>密码: i913</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/NVMeFix" target="_blank" rel="noopener external nofollow noreferrer">NVMeFix</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> NVMeFix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NVWebDriverLibValFix 驱动汇总</title>
      <link href="/NVWebDriverLibValFix.html"/>
      <url>/NVWebDriverLibValFix.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>此 macOS 内核扩展修补了 macOS Sierra 以将 NVIDIA 的 Web 驱动程序识别为平台二进制文件。 这解决了透明窗口中没有内容的问题，该透明窗口出现在使用 Metal 并启用了库验证的应用程序中。受影响的常见应用程序是 iBooks 和 Little Snitch Network Monitor，此修补程序是通用的并修复了所有修补程序。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="1-0-0"><a href="#1-0-0" class="headerlink" title="1.0.0"></a>1.0.0</h3><blockquote><p>Initial release, compatible with:</p></blockquote><ul><li>Apple Macs, where kernel code signing is disabled</li><li>Hackintoshs (Clover and similar software tend to disable kernel code signing by default)</li><li>macOS 10.12.5 Sierra and NVIDIA Web Driver 378.05.05.15f01</li><li>macOS 10.12.6 Sierra and NVIDIA Web Driver 378.05.05.25f01</li><li>most likely all future updates within 10.12</li></ul><blockquote><p>Incompatible with:</p></blockquote><ul><li>NvidiaGraphicsFixup, which contains a port of this extension to Lilu. Use either this extension or NvidiaGraphicsFixup, but not both.</li><li>WhateverGreen, the successor of NvidiaGraphicsFixup, which also contains this patch</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6n9e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6n9e</a><br>密码: 7i6j</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/mologie/NVWebDriverLibValFix" target="_blank" rel="noopener external nofollow noreferrer">NVWebDriverLibValFix</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NVWebDriverLibValFix </tag>
            
            <tag> NVIDIA </tag>
            
            <tag> iBooks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NullCPUPowerManagement 禁用CPU电源管理驱动汇总</title>
      <link href="/NullCPUPowerManagement.html"/>
      <url>/NullCPUPowerManagement.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>在非 Apple 硬件（虚拟或其他）上运行的 OS X 的另一个问题是 AppleIntelCPUPowerManagement 内核扩展，该内核扩展可能会导致计算机死机或向控制台发出有关 HPET 及其与 CPU 的关系的无尽调试消息。</p><p>在虚拟环境中，访客 OS 确实不需要更改处理器 C 状态。只需发出暂停指令的内置代码就足够了。此外，虚拟器可能希望仅实现足够的 HPET 来通过 xnu 启动例程，而不实际使 HPET 工作。</p><p>NullCPUPowerManagement 的作用是在 IOKit 服务注册过程中发挥一些技巧，以确保它接管其 IOResources 提供程序 nub 上的AppleIntelCPUPowerManagement 匹配类别。诀窍在于，与 IOResources nub 匹配的任何 nub 必须具有与其 IOMatchCategory 属性值相同的名称。默认情况下，nub 名称是其 IOClass 属性的值，该属性必须是其 C++ 类名称，而不应该是 AppleIntelCPUPowerManagement。为什么不？因为内核无法加载两个具有相同名称的 C++ 类。发生这种情况时，一个或另一个将获胜。在最好的情况下，我们的副本将获胜。但是在最坏的情况下，真正的 AppleIntelCPUPowerManagement 获胜，从而造成负载并造成严重破坏，这正是我们试图避免的事情。</p><p>因此，我们使用了自己的 C++ 类名，但随后从 init 方法中检索了 IOMatchCategory 键的值，并调用 setName 来设置要匹配的 nub 名称。结合 100 的探测分数，我们保证我们的提供商（IOResources）将选择我们而不是 Apple 的 kext。理想情况下，我们将实现一个主动探测方法，该方法会进行一些检查以查看系统是否能够使用 AppleIntelCPUPowerManagement。不幸的是，很难确切知道必须满足哪些条件。因此，除非您在命令行上通过 -allowAppleCPUPM，否则该版本（r11）始终会成功执行其探测，在这种情况下，它将使它的探测失败，从而使 AppleIntelCPUPowerManagement 附加。</p><p>该选项不能保证存在，它更多是用于调试目的，因此在尝试使 Apple 的 CPU PM 工作时，可以将 NullCPUPowerManagement kext 保留在 Extensions 文件夹中。万一您做对了，可以从引导标志中删除 -allowAppleCPUPM，您仍然可以引导系统。</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bdrcaf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrcaf</a><br>密码: gayb</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/corpnewt/NullCPUPowerManagement" target="_blank" rel="noopener external nofollow noreferrer">NullCPUPowerManagement</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NullCPUPowerManagement </tag>
            
            <tag> 电源管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCorePkg 稳定版汇总</title>
      <link href="/OpenCorePkg.html"/>
      <url>/OpenCorePkg.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>OpenCorePkg 是一个开源的引导程序。</p><p>特性: </p><ul><li>Apple 磁盘映像加载支持</li><li>苹果键盘输入汇总</li><li>Apple PE 映像签名验证</li><li>Apple UEFI 安全启动补充代码</li><li>带有屏幕阅读支持的音频管理</li><li>基本的 ACPI 和 SMBIOS 操作</li><li>通过计时器支持收集 CPU 信息</li><li>加密原语(SHA-256，RSA等)</li><li>解压缩原语(zlib，lzss，lzvn等)</li><li>ACPI 的辅助代码读取和修改</li><li>文件，字符串，UEFI 变量的高级抽象</li><li>溢出检查算法</li><li>没有 UEFI 安全启动冲突的 PE 映像加载</li><li>Plist 配置格式解析</li><li>PNG 图像处理</li><li>文本输出和图形输出实现</li><li>XNU 内核驱动程序注入和补丁引擎</li></ul><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>v0.5.9</p><ul><li>Added full HiDPI support in OpenCanopy</li><li>Improved font rendering by using CoreText</li><li>Fixed light and custom background font rendering</li><li>Added Boot#### options support in boot entry listing</li><li>Removed HideSelf by pattern recognising BOOTx64.efi</li><li>Added BlacklistAppleUpdate to avoid Apple FW updates</li><li>Fixed accidental tool and NVRAM reset booting by default</li><li>Fixed unrecognised select com.apple.recovery.boot entries</li><li>Changed NVRAM reset not to erase BootProtect boot options</li><li>Improved boot performance when picker UI is disabled</li><li>Enforced the use of builtin picker when external fails</li></ul></li><li><p>v0.5.8</p><ul><li>Fixed invalid CPU object reference in SSDT-PLUG</li><li>Fixed incorrect utilities and resources packaging</li><li>Fixed Custom UpdateSMBIOSMode modifying SMBIOSv3 table</li><li>Updated docs to cover separating SMBIOS via UpdateSMBIOSMode</li><li>Fixed rendering macOS installer icons in OpenCanopy</li><li>Added APFS support with Fusion Drive and enhanced security</li><li>Added AppleEvent mouse support in OpenCanopy</li><li>Fixed AppleEvent and OpenCanopy compatibility with OVMF TPL restrictions</li><li>Added mouse drivers to the package as OVMF needs one</li><li>Added memory region reservation support</li><li>Added RtcRw tool to manipulate RTC memory</li><li>Added PatchAppleRtcChecksum kernel quirk</li><li>Added AppleRtcRam protocol implementation</li><li>Renamed Protocols to ProtocolOverrides for clarity</li><li>Added ResetSystem tool to allow shutdown/reset actions in the menu</li><li>Added experimental BootProtect Security option</li><li>Fixed kext injection in 10.8 installer</li><li>Added timeout support to OpenCanopy user interface</li><li>Fixed handling 24-bit screen resolutions</li><li>Added Ps2KeyboardDxe driver for DuetPkg</li><li>Updated BootInstall DuetPkg version (now opensource)</li><li>Added partial HiDPI support in OpenCanopy</li><li>Update builtin firmware</li><li>Fixed invalid checksum checks when creating vault (thx @dakanji)</li></ul></li><li><p>v0.5.7</p><ul><li>Added TimeMachine detection to picker</li><li>Added early preview version of OpenCanopy</li><li>Fixed FS discovery on NVMe with legacy drivers</li><li>Added DirectGopCacheMode option for FB cache policy</li><li>Added KeyFiltering option to workaround buggy KB drivers</li><li>Added tool and custom entry separation in audio assistant</li><li>Added OpenControl tool to configure full NVRAM access from Shell</li><li>Added boot.efi debug protocol support for 10.15.4+</li><li>Added boot.efi performance logging for 10.15.4+</li><li>Added ProtectUefiServices quirk to fix DevirtualiseMmio on Z390</li><li>Replaced BOOTCAMP Windows with Windows to match the original</li><li>Added bundled OpenShell originally available as OpenCoreShell</li><li>Rework readlabel utility into disklabel with encoding support</li><li>Renamed FwRuntimeServices driver to OpenRuntime</li><li>Renamed AppleUsbKbDxe driver to OpenUsbKbDxe</li><li>Update builtin firmware</li><li>Fixed PowerTimeoutKernelPanic on 10.15.4</li><li>Fixed 4K section alignment in OpenRuntime to fix Linux booting on SKL</li><li>Introduced SyncRuntimePermissions to fix multiple memory permission flaws</li><li>Introduced RebuildAppleMemoryMap to fix macOS booting on Dell 5490</li><li>Removed ShrinkMemoryMap in favour of more advanced RebuildAppleMemoryMap</li><li>Marked EnableWriteUnprotector as deprecated on modern systems</li><li>Introduced ProtectMemoryRegions to fix memory region handling</li><li>Removed ProtectCsmRegion in favour of ProtectMemoryRegions</li><li>Renamed PickerAttributes to ConsoleAttributes</li><li>Introduced PickerAttributes as a matter of UI configuration</li></ul></li><li><p>v0.5.6</p><ul><li>Various improvements to builtin text renderer</li><li>Fixed locating DMG recovery in APTIO IV firmwares on FAT32</li><li>Fixed loading DMG recovery in APTIO IV firmwares on FAT32</li><li>Removed AvoidHighAlloc quirk due to removed I/O over 4GB</li><li>Moved ConsoleMode, Resolution options to Output section</li><li>Moved console-related UEFI quirks to Output section</li><li>Replaced ConsoleControl and BuiltinTextRenderer with TextRenderer</li><li>Removed ConsoleBehaviourOs and ConsoleBehaviourUi</li><li>Fixed providing ConsoleOutHandle GOP when running from Shell</li><li>Added PickerAttributes option to colour picker</li><li>Added ProtectSecureBoot option through FwRuntimeServices</li><li>Replaced RequireVault and RequireSignature with Vault</li><li>Added BootKicker tool to support launching Apple BootPicker</li><li>Added BootPicker support as an external UI in OC through PickerMode</li><li>Added DirectGopRendering option to use direct GOP output</li><li>Multiple memory corruption and performance fixes for PNG support</li><li>Fixed DefaultBackgroundColor variable handling</li><li>Added HideAuxiliary and Auxiliary options</li><li>Fixed picker timeout and log timestamps for VMware</li><li>Fixed NULL parent DeviceHandle for launched tools</li><li>Added bundled HiiDatabase driver for very old firmwares</li><li>Added SSE2 support in memory intrinsics for better performance</li><li>Improved ACPI PM timer CPU frequency calculation performance</li><li>Improved LapicKernelPanic compatibility with newer macOS versions</li><li>Fixed drivers starting with # not being skipped</li><li>Added audio support through AudioDxe with optional boot chime</li><li>Added VoiceOver accessability support in boot.efi for 10.13+</li><li>Added PickerAudioAssist option for audio assistance in picker</li><li>Added HdaCodecDump.efi tool in default package</li><li>Added legacy AudioDxe and Microsoft namespaces to Reset NVRAM</li><li>Merged OcSupportPkg with OpenCorePkg for easier bisection</li><li>Disabled warnings in release versions of NVMe and XHCI drivers</li></ul></li><li><p>v0.5.5</p><ul><li>Fixed CPU bus ratio calculation for Nehalem and Westmere</li><li>Fixed CPU package calculation on MacPro5,1 and similar</li><li>Improved OpenCore rerun detection for new versions</li><li>Fixed loading picker on boot failure when it is hidden</li><li>Added PMC ACPI sample for 300-series chipsets</li><li>Improved driver connection performance on APTIO IV</li><li>Fixed boot option saving in LogoutHook.command</li><li>Added support for OEM information in ExposeSensitiveData</li><li>Improved SanitiseClearScreen to avoid mode switching</li><li>Replaced SupportsCsm with AdviseWindows enabling UEFI mode</li><li>Fixed issues with default boot path selection on some boards</li><li>Update builtin firmware versions</li><li>Fixed AdviseWindows not setting FirmwareFeatures in NVRAM</li><li>Added TakeoffDelay option for improved action hotkey support</li><li>Added Mac GOP support to ProvideConsoleGop quirk</li><li>Added experimental BuiltinTextRenderer boot option</li><li>Added DummyPowerManagement kernel quirk to disable CPU PM</li></ul></li><li><p>v0.5.4</p><ul><li>Added Enter key handling in boot menu for quick proceed</li><li>Update builtin firmware versions</li><li>Bundled FwRuntimeServices driver with OpenCore</li><li>Allowed writing to non-volatile variables with disabled write</li><li>Fixed microcode reading on Intel CPUs</li><li>Fixed SMBIOS Type4 External Clock values</li><li>Improved Windows compatibility on some setups (acidanthera/bugtracker#614)</li><li>Added SupportsCsm and option in PlatformInfo/Generic</li><li>Added OSInfo protocol support</li><li>Added SignalAppleOS Booter quirk to enable IGPU on Macs in other OS</li><li>Added AppleSmcIoprotocol support (replaces VirtualSmc UEFI driver)</li><li>Added AuthRestart security property for VirtualSMC authenticated restart</li><li>Fixed input protocol initialisation on VMware fusion</li><li>Added arrow key handling in boot menu</li><li>FileVault 2-like key input is now the only supported input in boot menu</li><li>Fixed 5 second delay when exiting Shell to OpenCore Picker</li><li>Added default boot option update and AllowSetDefault Security option</li><li>Fixed CPU package detection on configurations with multiple CPUs</li><li>Bundled CleanNvram and VerifyMsrE2 tools for debugging</li><li>Added screen clearing after choosing boot entry in picker</li><li>Added WriteFlash NVRAM option to enable writing variables in Add</li><li>Added LegacyOverwrite NVRAM option to allow overwriting variables by nvram.plist</li><li>Added AppleXcpmForceBoost kernel quirk to maximise select Xeon performance</li><li>Bundled NvmExpressDxe and XhciDxe drivers for platforms that need them</li><li>Added IncreasePciBarSize kernel quirk for select platforms with PCI space issues</li></ul></li><li><p>v0.5.3</p><ul><li>Update builtin firmware versions</li><li>Fixed interpreting letters in boot menu</li><li>Fixed timeout abortion with PollAppleHotKeys quirk</li><li>Fixed rare kext injection failure due to plist-only kext in prelinkedkernel</li><li>Fixed error reporting for dmg loading</li><li>Added various debugging improvements</li><li>Added new crypto stack resulting in vault key format changes</li><li>Added UnblockFsConnect UEFI quirk to fix missing filesystems on some laptops</li><li>Added RequestBootVarFallback UEFI quirk to circumvent firmware boot option issues</li><li>Added ThirdPartyDrives kernel quirk fixing SSD trim and 10.15 SATA hibernation (thx @lvs1974)</li><li>Removed ThirdPartyTrim kernel quirk in favour of ThirdPartyDrives</li><li>Added Intel Xeon E5 (Broadwell-EP) support (thx @crazyi)</li><li>Switched to edk2-stable201911, which is now the minimum supportd EDK II version</li></ul></li><li><p>v0.5.2</p><ul><li>Fixed MinKernel and MaxKernel logic (thx @dhinakg, @reitermarkus)</li><li>Fixed ASSERT when booting non-Apple OSes without arguments from the DEBUG version</li><li>Added MmioWhitelist configuration option</li><li>Added PowerTimeoutKernelPanic kernel quirk</li><li>Fixed erratic cursor appearing in release builds</li><li>Moved ReconnectOnResChange to a user-configurable quirk to avoid freezes</li><li>Added OpenCore version to picker ui, configured by ExposeSensitiveData</li><li>Added hypervisor CPUID support to work with virtualization (thx @Leoyzen)</li></ul></li><li><p>v0.5.1</p><ul><li>Added support of kernel resource kext injection</li><li>Added support for 0.25% clock slowdown on Xeon Scalable CPUs (thx @mrmiller)</li><li>Replaced MatchKernel with MinKernel and MaxKernel</li><li>Added Arguments to Tools and Entries sections</li><li>Fixed broken timer for 300 series Intel chipsets</li><li>Added Input section for mouse and keyboard aggregation</li></ul></li><li><p>v0.5.0</p><ul><li>Added builtin firmware versions for new models 2019</li><li>Fixed LogoutHook leaving random directories in $HOME</li><li>Fixed FSBFrequency calculation on Xeon Scalable CPUs (thx @mrmiller)</li><li>Fixed ARTFrequency specifying on Intel server and atom models</li><li>Increased log size to 256 KB by default</li><li>Added ReplaceTabWithSpace quirk to improve Shell experience</li><li>Added ClearScreenOnModeSwitch quirk to avoid visual glitches</li><li>Added MISC_PWR_MGMT patch to AppleXcpmExtraMsrs quirk (thx @mrmiller)</li><li>Added DevirtualiseMmio quirk to Booter section</li><li>Added FileVault 2 user interface protocols formerly in AppleUiSupport</li><li>Improved kernel patch logging to include configuration comments</li><li>Added MSFT basic data and Linux root fs recognition to ScanPolicy</li><li>Fixed RT region protection restoration regression (thx Sniki)</li><li>Added OPT, CMD+R, CMD+OPT+P+R boot action hotkey support</li><li>Added PollAppleHotKeys to register boot.efi hotkeys in the picker</li><li>Added DisableSingleUser quirk to prohibit single user mode</li><li>Upgraded EDK II base package to edk2-stable201908</li><li>Prohibited argument changing by BootNext</li></ul></li><li><p>v0.0.4</p><ul><li>Fixed kext injection issues with dummy dependencies</li><li>Fixed kext injection issues with reused vtables</li><li>Fixed Custom SMBIOS table update patches</li><li>Added timestamp to the log file and changed extension to txt</li><li>Enhanced LogoutHook script used for emulated NVRAM saving</li><li>Fixed multiple operating system support in APFS containers</li><li>Added AvoidHighAlloc UEFI quirk to avoid high memory allocs</li><li>Updated builtin firmware versions for 10.15 beta support</li><li>Added Booter section for Apple bootloader preferences</li><li>Dropped AptioMemoryFix.efi support for Booter and FwRuntimeServices.efi</li><li>Fixed hibernation issues in Windows with RequestBootVarRouting</li><li>Significantly improved boot stability on APTIO</li><li>Added support for Windows &amp; OpenCore on the same drive through BlessOverride</li><li>Added advanced user-specified boot entries through Misc -&gt; Entries</li><li>Added DisableVariableWrite quirk to disable hardware NVRAM write in macOS</li></ul></li><li><p>v0.0.3</p><ul><li>Added complete modern platform database (2012+)</li><li>Added DisableIoMapper kernel quirk</li><li>Fixed ACPI modification failures with nested multiboot</li><li>Dropped IgnoreForWindows quirk legacy</li><li>Added basic AMD Zen CPU support</li><li>Added Misc -&gt; Tools section to add third-party tools</li><li>Added Kernel -&gt; Emulate section for CPUID patches</li><li>Added CustomSMBIOSGuid quirk for Custom SMBIOS update mode</li><li>Added PanicNoKextDump quirk to avoid kext dump in panics</li><li>Switched to EDK II stable and reduced image size</li><li>Added LapicKernelPanic kernel quirk</li><li>Added AppleXcpmExtraMsrs quirk and improved XCPM patches</li><li>Added (external) suffix for external drives in boot menu</li><li>Added UsePicker option, do enable for OC boot management</li><li>Added nvram.plist loading for legacy and incompatible platforms</li><li>Improved instructions for legacy and Windows installation</li><li>Added Windows Boot Camp switching support</li><li>Added basic hibernation detection &amp; support</li><li>Added ResetHwSig ACPI quirk to workaround hibernation</li><li>Removed Custom subfolder requirement from ACPI tables</li><li>Fixed kext injection in 10.7.x and 10.8.x</li><li>Added ESP partition type detection to ScanPolicy</li><li>Added support for third-party user interfaces</li></ul></li><li><p>v0.0.2</p><ul><li>Documentation improvements (see Differences.pdf)</li><li>Platform information database updates</li><li>Fixed misbehaving Debug -&gt; Target enable bit</li><li>Added ResetLogoStatus ACPI quirk</li><li>Added SpoofVendor PlatformInfo feature</li><li>Replaced ExposeBootPath with ExposeSensitiveData</li><li>Added builtin implementation of Data Hub protocol</li><li>Dropped UpdateSMBIOSMode Auto mode in favour of Create</li><li>Fixed SMBIOS CPU detection for Xeon and Core models</li><li>Moved ConsoleControl configuration to Protocols</li><li>Added Security -&gt; ScanPolicy preference</li><li>Fixed invalid board-rev exposure in Data Hub</li><li>Fixed SMBIOS Type 133 table exposure</li><li>Added support for SMBIOS Type 134 table exposure</li></ul></li><li><p>v0.0.1</p><ul><li>Initial developer preview release</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6iwh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6iwh</a><br>密码: f4ki</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/OpenCorePkg" target="_blank" rel="noopener external nofollow noreferrer">OpenCorePkg</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCorePkg </tag>
            
            <tag> OC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SMCAMDProcessor AMD 电源管理驱动</title>
      <link href="/SMCAMDProcessor.html"/>
      <url>/SMCAMDProcessor.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>针对 AMD 处理器电源管理的 XNU 内核扩展。还带有<a href="https://github.com/acidanthera/VirtualSMC" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC</a>的插件，可将读数导出到其他应用程序。</p><p><strong><em>请注意，此版本处于开发的初始阶段，请确保已正确备份了EFI文件夹，并且切勿在任何重要的系统上运行。</em></strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>SMCAMDProcessor现在包含两个单独的二进制文件（内核扩展）：</p><ul><li><code>AMDRyzenCPUPowerManagement.kext</code> : 用于所有电源管理功能。 如果您想使用** AMD Power Gadget **，则也需要此kext。</li><li><code>SMCAMDProcessor.kext</code> : 将读取的数据发布到<a href="https://github.com/acidanthera/VirtualSMC" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC</a>，它使 iStat 之类的 macOS 应用程序能够显示传感器数据。该扩展程序依赖于 <code>AMDRyzenCPUPowerManagement.kext</code> 来收集传感器数据，因此必须在之后加载。</li></ul><p>1.从<a href="https://github.com/trulyspinach/SMCAMDProcessor/releases" target="_blank" rel="noopener external nofollow noreferrer">Release</a>页面下载kext和应用程序<br>2.将 <code>AMDRyzenCPUPowerManagement.kext</code> 添加到引导加载程序的 kext 文件夹中。<br>3.编辑您的引导加载程序的配置文件，以确保启用了 kext。<br>4.如果您正在使用<a href="https://github.com/acidanthera/VirtualSMC" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC</a>，则还可以加载 <code>SMCAMDProcessor.kext</code> 来发布传感器数据。<br>5.像 OpenCore 这样的引导程序会按照在配置文件中出现的顺序链接每个 kext，因此请确保将 AMDRyzenCPUPowerManagement.kext 放在 SMCAMDProcessor.kext 之前，因为它是一个依赖项。</p><h2 id="AMD-Power-Gadget"><a href="#AMD-Power-Gadget" class="headerlink" title="AMD Power Gadget"></a>AMD Power Gadget</h2><img src="https://cdn.jsdelivr.net/gh/trulyspinach/SMCAMDProcessor/imgs/all.png" width="80%"><h2 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h2><ul><li>AMD 17h 处理器的 CPU 电源管理。</li><li>支持在 AMD 17h 处理器上读取温度，电压和频率数据。</li><li>手动切换处理器速度。</li><li>PState 编辑。</li></ul><img src="https://cdn.jsdelivr.net/gh/trulyspinach/SMCAMDProcessor/imgs/ani.gif" width="100%"><h2 id="PState-编辑"><a href="#PState-编辑" class="headerlink" title="PState 编辑"></a>PState 编辑</h2><p>从 0.3.1 版本开始，可以使用 AMD Power Tool 编辑 CPU PState。</p><img src="https://cdn.jsdelivr.net/gh/trulyspinach/SMCAMDProcessor/imgs/pe.png" width="60%"><p>要访问 PState 编辑器:</p><ol><li>打开 AMD Power Tool</li><li>前往 <code>Speed</code> 标签</li><li>点击 <code>Advanced Options</code></li></ol><h2 id="安全说明"><a href="#安全说明" class="headerlink" title="安全说明"></a>安全说明</h2><ul><li>错误的 PState 设置可能会永久损坏您的计算机硬件。</li><li>出于安全考虑，此功能仅限于 root 用户。 您可以使用 root 用户启动 AMD Power Gadget，也可以使用 -amdpnopchk 禁用此检查。</li></ul><h2 id="已测试的处理器"><a href="#已测试的处理器" class="headerlink" title="已测试的处理器"></a>已测试的处理器</h2><ul><li>Ryzen 9 3900X</li><li>Ryzen 7 3700X</li><li>Ryzen 7 2700X</li><li>Ryzen 5 3600</li><li>Threadripper 2990WX</li></ul><img src="imgs/iStats.png" width="40%"><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="v0-6-1"><a href="#v0-6-1" class="headerlink" title="v0.6.1"></a>v0.6.1</h3><blockquote><p>This new release contains many bug fixes.</p></blockquote><ul><li>KEXTs<ul><li>System will no longer panic when SMT is disabled or not supported</li></ul></li><li>AMD Power Gadget<ul><li>Minor adjustments, typo fixes in UI elements.</li></ul></li></ul><h3 id="v0-6"><a href="#v0-6" class="headerlink" title="v0.6"></a>v0.6</h3><blockquote><p>This new release contains important changes.<br><strong><em>Please read carefully before you proceed.</em></strong></p></blockquote><blockquote><p>Note<br><strong><em>SMCAMDProcessor now comes in two separate binaries(kernel extensions) to allow the use of standalone features without VirtualSMC as a dependency. Please refer to the installation section in README for more instructions on upgrading.</em></strong></p></blockquote><ul><li>KEXTs<ul><li>Implements a better idle thread to reduce idle energy consumption and increase system performance(a little).</li><li>Dynamic PState stepping on demand.</li><li>Power reading now have a better accuracy.</li><li>Fixes issues with instructions retired counter.</li></ul></li><li>AMD Power Gadget<ul><li>Minor adjustments in UI to adapt to changes in Kext :).</li></ul></li><li>Known issues<ul><li>GraphView might not display as rounded corner on older version of macOS</li><li>Some sensor data will not show up in iStat depending on SMBios type. Refer to #10</li></ul></li></ul><h3 id="v0-3-4"><a href="#v0-3-4" class="headerlink" title="v0.3.4"></a>v0.3.4</h3><ul><li>KEXT<ul><li>SMC keys now registered correctly, again.</li><li>Fixes some issues preventing the reading of OEM board information.</li></ul></li><li>AMD Power Gadget<ul><li>Finally have an icon.</li></ul></li><li>Known issues<ul><li>GraphView might not display as rounded corner on older version of macOS</li><li>Some sensor data will not show up in iStat depending on SMBios type. Refer to #10</li><li>Instructions retired might not includes instructions from hyper threaded cores. This is due to some bug in underlying dependences.</li><li>Motherboard data may still failed to read on some system causes AMD Power Tool to displays it as unknown.</li></ul></li></ul><h3 id="v0-3-3"><a href="#v0-3-3" class="headerlink" title="v0.3.3"></a>v0.3.3</h3><ul><li>KEXT<ul><li>Introduced a new method for authorizing user process to perform dangerous changes.</li><li>Fixes temperature offset problem on some processor.</li></ul></li><li>AMD Power Tool<ul><li>Applying changes in PState Editor no longer require root user. A confirmation will be prompted by kernel when AMD Power Tool was launched by a normal user. You can still use boot-arg -amdpnopchk to disable this check.</li></ul></li><li>Known issues<ul><li>GraphView might not display as rounded corner on older version of macOS</li><li>Some sensor data will not show up in iStat depending on SMBios type. Refer to #10</li><li>Instructions retired might not includes instructions from hyper threaded cores. This is due to some bug in underlying dependences.</li><li>Motherboard data may failed to read on some system causes AMD Power Tool to displays it as unknown.</li></ul></li></ul><h3 id="v0-3-2"><a href="#v0-3-2" class="headerlink" title="v0.3.2"></a>v0.3.2</h3><ul><li>KEXT<ul><li>Added support for reading OEM board information.</li></ul></li><li>AMD Power Tool<ul><li>More system configurations, such as motherboard name, now displays in Overview tab.</li><li>PStateDef can now be saved as file and imported from a file using PState Editor</li></ul></li><li>Known issues<ul><li>GraphView might not display as rounded corner on older version of macOS</li><li>Some sensor data will not show up in iStat depending on SMBios type. Refer to #10</li><li>Instructions retired might not includes instructions from hyper threaded cores. This is due to some bug in underlying dependences.</li></ul></li></ul><h3 id="v0-3-1"><a href="#v0-3-1" class="headerlink" title="v0.3.1"></a>v0.3.1</h3><ul><li>KEXT<ul><li>Effective frequency calculated now have better accuracy(+/- 50MHz).</li><li>Added support for writing PStateDef.</li></ul></li><li>AMD Power Tool<ul><li>PState Editor is now available.</li></ul></li><li>Known issues<ul><li>GraphView might not display as rounded corner on older version of macOS</li><li>Some sensor data will not show up in iStat depending on SMBios type. Refer to #10</li><li>Instructions retired might not includes instructions from hyper threaded cores. This is due to some bug in underlying dependences.</li><li>System might panic when invalid PState are provided during apply.</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bdtqof" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdtqof</a><br>密码: dec2</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/trulyspinach/SMCAMDProcessor" target="_blank" rel="noopener external nofollow noreferrer">SMCAMDProcessor</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> SMC </tag>
            
            <tag> 电源管理 </tag>
            
            <tag> SMCAMDProcessor </tag>
            
            <tag> AMD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCIE 读卡器驱动汇总</title>
      <link href="/Sinetek-rtsx.html"/>
      <url>/Sinetek-rtsx.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>macOS 瑞昱读卡器驱动。</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6m5e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6m5e</a><br>密码: acdg</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/sinetek/Sinetek-rtsx" target="_blank" rel="noopener external nofollow noreferrer">Sinetek-rtsx</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读卡器 </tag>
            
            <tag> SD Card </tag>
            
            <tag> Sinetek-rtsx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoodooHDA 万能声卡驱动汇总</title>
      <link href="/VoodooHDA.html"/>
      <url>/VoodooHDA.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>VoodooHDA 是适用于符合 Intel High Definition Audio 规范的设备的开源音频驱动程序。旨在替代 Mac OS X 上的 AppleHDA，并支持多种音频控制器和编解码器。</p><p>特性</p><ul><li>automatic recognition of all HDA codecs</li><li>test jacks for autoswitch</li><li>control panel for fine tuning</li><li>sound treatment includes stereo enhancements</li><li>since v2.8 it works with two sound cards</li><li>v2.9 creates 5.1 channel as one device</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6nrc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6nrc</a><br>密码: hebb</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><ul><li><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="noopener external nofollow noreferrer">VoodooHDA</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 声卡 </tag>
            
            <tag> VoodooHDA </tag>
            
            <tag> 万能 </tag>
            
            <tag> HDA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoodooI2C 触摸板驱动汇总</title>
      <link href="/VoodooI2C.html"/>
      <url>/VoodooI2C.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>VoodooI2C 是一个由 macOS 内核扩展组成的项目，这些扩展支持 I2C 总线设备。该项目分为两个主要部分：Core - 核心扩展和其他各种 Satellites - 附属程序。</p><h3 id="Core"><a href="#Core" class="headerlink" title="Core"></a>Core</h3><p>Core 是 VoodooI2C.kext 内核扩展。由 I2C 控制器驱动程序组成，负责将设备块发布到 IOService 层。</p><h3 id="Satellites"><a href="#Satellites" class="headerlink" title="Satellites"></a>Satellites</h3><p>这些附属程序是各种内核扩展的集合，这些扩展实现了对特定类型的 I2C 设备的支持。例如 VoodooI2CHID.kext，它增加了对 I2C-HID 设备的支持。一般来说，需要为每类I2C设备安装一个附属程序。</p><h2 id="当前状态"><a href="#当前状态" class="headerlink" title="当前状态"></a>当前状态</h2><p>完全支持以下 Intel I2C 控制器：</p><ul><li>INT33C2 and INT33C3 - Haswell era</li><li>INT3432 and INT3433 - Broadwell era</li><li>pci8086,9d60, pci8086,9d61, pci8086,9d62 and pci8086,9d63 - Skylake era</li><li>pci8086,a160 and pci8086,a161 - Kaby Lake era</li><li>pci8086,9de8 and pci8086,9de9 - Cannon Lake/Whiskey Lake era</li><li>pci8086,a368, pci8086,a369, pci8086,a36a and pci8086,a36b - Coffee Lake era</li><li>pci8086,2e8 and pci8086,2e9 - Comet Lake era</li></ul><p>完全支持以下设备类型：</p><ul><li>I2C-HID 设备</li><li>ELAN 设备</li><li>FTE 设备</li></ul><p><strong><em>请注意，有时设备类之间存在重叠。例如，某些 ELAN 设备也可能是 I2C-HID 设备。</em></strong></p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>2.4.2</p><ul><li>Bump version to 2.4.2</li><li>Sync git submodules</li><li>Optimize I2C controller (#294)</li><li>Remove extra retain introduced by a merge conflict fix</li><li>Merge pull request #295 from blankmac/master</li><li>Ensure the stylus check is set to zero on start.</li><li>Correct issue with touchscreens requiring an additional finger for multitouch gestures. This was due to the device presenting a stylus at transducer 0. A simple check prior to sending the message to VoodooInput eliminates the problem. The stylus check in VoodooInput should be removed as unnecessary.</li><li>VoodooI2CELAN has polling support, thanks @EmotionalLove and @artem-tverdokhlebov</li><li>Smooth cursor support thanks @Erictoby and @hieplpvip</li><li>Various fixes within VoodooI2CHID and VoodooGPIO regarding interrupts and sleep/wake issues, thanks @Goshin</li></ul></li><li><p>2.4.1</p><ul><li>Added force touch emulation on button click, depending on SysPrefs (#276, #287).</li><li>Fixed several memory leaks and minor issues.</li><li>Fixed issues with kext unloading (#292).</li><li>Build is now done with Xcode 11.4.0.</li><li>Updated VoodooGPIO and satellite kext with memory leaks and bug fixes.</li></ul></li><li><p>2.4</p><ul><li>Bump version to 2.4</li><li>Do not use BUILD_HOME in the CI flows</li><li>CI updates (#272)</li><li>Update VoodooInput git submodule</li><li>Update VoodooGPIO git submodule</li><li>Remove deprecated VoodooI2CUPDDEngine git submodule (#271)</li><li>Update VoodooI2CHID and VooodooGPIO git submodules (#270)</li><li>Use Xcode 11.3 recommended settings</li><li>Update VoodooI2CHID (#268)</li><li>Update VoodooI2CHID git submodule (#261)</li></ul></li><li><p>2.3</p><ul><li>Bump version to 2.3</li><li>CI: Use Xcode 11.3, store build artifacts</li><li>Update VoodooGPIO, VoodooI2CHID and VoodooI2CELAN</li><li>Add Comet Lake PCI IDs</li><li>Merge pull request #229 from blankmac/master</li><li>Fix issue with some devices failing to meet the deadline in commandSleep.</li><li>Merge pull request #224 from al3xtjames/commandgate</li><li>Correct IOCommandGate::commandSleep call</li><li>Merge pull request #195 from kprinssu/master</li><li>Add 2 more supported Cannon Lake PCI IDs 8086,a36a &amp; 8086,a36b</li></ul></li><li><p>2.2</p><ul><li>Bump version number to v2.2</li><li>Merge pull request #191 from ben9923/cannonlake</li><li>Update deployment script to not override current releases</li><li>Update VoodooGPIO header name</li><li>Update README &amp; docs to indicate CNL/CFL support</li><li>Update VoodooGPIO</li><li>Update GPIO pinning guide for Cannon Point</li><li>Merge pull request #184 from williambj1/master</li><li>Merge branch ‘master’ into master</li><li>Add Sunrise Point-LP I2C2, I2C3 controllers</li></ul></li><li><p>2.1.6</p><ul><li>Update VoodooI2CHID</li><li>Fix SDK download script</li><li>Bump version number to v2.1.6</li><li>Use the macOS 10.12 SDK for CI build/release</li><li>Update VoodooI2CHID</li></ul></li><li><p>2.1.5</p><ul><li>Attempt to resolve checkout during deployment</li><li>Use a CircleCI workspace to persist build output for deployment</li><li>Use $TARGET_BUILD_DIR to get build directory</li><li>Merge pull request #176 from ben9923/release-215</li><li>Merge pull request #175 from alexandred/circleci-20</li><li>Merge pull request #174 from ben9923/fix-warnings</li><li>Bump version number to v2.1.5</li><li>Update VoodooI2CHID satellite</li><li>Remove unused members from MT2 simulator device</li><li>Use constants for MT2 maximum X/Y values</li></ul></li><li><p>2.1.4</p><ul><li>bump version number to v2.1.4</li><li>update submodule</li><li>Merge branch ‘master’ of <a href="https://github.com/alexandred/VoodooI2C" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/alexandred/VoodooI2C</a></li><li>update VoodooI2CHID</li></ul></li><li><p>2.1.3</p><ul><li>Merge pull request #104 from hieplpvip/master</li><li>update submodules, bump version to v2.1.3</li></ul></li><li><p>2.1.2</p><ul><li>Support for 10.14 Mojave</li><li>Reduce hidd CPU usage down to normal levels</li><li>Improves trackpad click (including on login screen)</li><li>Fixes a bug where the GPIO controller was not found on boot causing no input<blockquote><p>Since the last release there have been 14 commit(s). The descriptions for the first (at most) 10 of these are as follows</p></blockquote></li><li>bump version to v2.1.2</li><li>update VoodooI2CHID</li><li>update VoodooI2CFTE</li><li>Merge branch ‘master’ of <a href="https://github.com/alexandred/VoodooI2C" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/alexandred/VoodooI2C</a></li><li>Merge pull request #93 from prizraksarvar/master</li><li>update VoodooI2CHID</li><li>Merge pull request #92 from ben9923/wait-for-gpio</li><li>fix click issues, reduce hidd CPU usage, mojave support</li><li>Update VoodooI2CFTE</li><li>Update VoodooI2CFTE submodule</li></ul></li><li><p>2.1.1</p><ul><li>This is a quick release to fix the kernel panics occurring when sleeping, shutting down or rebooting on v2.1. Note that this does not yet fix any scaling issues nor is it compatible with Mojave 10.14.</li></ul></li><li><p>2.1</p><ul><li>small additions to readme</li><li>fix missing IOProviderClass in main Info.plist</li><li>fix FTE merge conflicts</li><li>gesture documentation and bump version to v2.1</li><li>fix merge conflict</li><li>finalise native gesture engine</li><li>some synaptics stuff</li><li>some native changes</li><li>2F tap is now moreore reliable (but still slightly delayed), still have the 1F drag issue</li><li>merge local changes</li></ul></li><li><p>2.0.3</p><ul><li>revert commits that regressed preferences</li><li>Revert “Use IOHIDEventService instead of IOHIPointing from CSGesture. Add touch screen support.”</li><li>Revert “small hack to ensure proper compilation of CSGesture with older SDKs”</li><li>Revert “change fixed scroll units to normal scroll units”</li><li>correct a typo in documentation</li></ul></li><li><p>2.0.2</p><ul><li>documentation changes</li><li>bump version to v2.0.2</li><li>add documentation for polling</li><li>add warning logs when not using either APIC or GPIO interrupts</li><li>change fixed scroll units to normal scroll units</li><li>small hack to ensure proper compilation of CSGesture with older SDKs</li><li>Merge remote-tracking branch ‘origin/master’</li><li>Fix integer overflow breaking certain touch screens/styluses</li><li>Use IOHIDEventService instead of IOHIPointing from CSGesture. Add touch screen support.</li></ul></li><li><p>2.0.1</p><ul><li>make sure all versions are set to v2.0.1</li><li>use latest versions of VoodooI2CHID and VoodooI2CElan, bump version to v2.0.1</li><li>Ensure 10.11+ support</li></ul></li><li><p>2.0.0</p><ul><li>adjust right click space</li><li>support hardware right click</li><li>add back in a commented return statement</li><li>move a condition elsewhere</li><li>make two finger taps more reliable, refactor</li><li>fix two finger tap</li><li>some updates to the documentation</li><li>fix some niggles</li><li>fix UPDD</li><li>fixing stuff</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><ul><li><p>VoodooI2C<br>地址: <a href="https://taolu.lanzous.com/b01bd6ljc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ljc</a><br>密码: 6uvv</p></li><li><p>VoodooInput<br>地址: <a href="https://taolu.lanzous.com/b01bd6kzc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6kzc</a><br>密码: cvq9</p></li></ul><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/alexandred/VoodooI2C" target="_blank" rel="noopener external nofollow noreferrer">VoodooI2C</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> I2C </tag>
            
            <tag> 触摸板 </tag>
            
            <tag> VoodooI2C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoodooTSCSync 多核心时钟同步驱动汇总</title>
      <link href="/VoodooTSCSync.html"/>
      <url>/VoodooTSCSync.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>在 Intel CPU 上同步 TSC 的内核扩展。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="2018-10-19-v1-5-0"><a href="#2018-10-19-v1-5-0" class="headerlink" title="2018-10-19 v1.5.0"></a>2018-10-19 v1.5.0</h3><ul><li>fork from denskop version</li><li>automatically attach only to last CPU object</li><li>add version info in ioreg, announce loading in kernel logs</li><li>remove AMD version</li><li>misc source code/kernel log cleanup</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>地址: <a href="https://taolu.lanzous.com/b01bd6nfa" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6nfa</a><br>密码: 9yg4</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/RehabMan/VoodooTSCSync" target="_blank" rel="noopener external nofollow noreferrer">VoodooTSCSync</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VoodooTSCSync </tag>
            
            <tag> 时钟同步 </tag>
            
            <tag> TSC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoodooPS2 触摸板驱动</title>
      <link href="/VoodooPS2.html"/>
      <url>/VoodooPS2.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><p>新的 VoodooPS2Trackpad 使用 VoodooInput 的 Magic Trackpad II 仿真，以使用 macOS 原生驱动程序处理所有手势。 这样就可以使用 Apple 定义的一到四个手指手势，包括：</p><ul><li>Look up &amp; data detectors</li><li>Secondary click (with two fingers, in bottom left corner<em>, in bottom right corner</em>)</li><li>Tap to click</li><li>Scrolling</li><li>Zoom in or out</li><li>Smart zoom</li><li>Rotate</li><li>Swipe between pages</li><li>Swipe between full-screen apps (with three or four fingers)</li><li>Notification Centre</li><li>Mission Control (with three or four fingers)</li><li>App Exposé (with three or four fingers)</li><li>Dragging with or without drag lock (configured in ‘Accessibility’/‘Universal Access’ prefpane)</li><li>Three finger drag (configured in ‘Accessibility’/‘Universal Access’ prefpane, may work unreliably**)</li><li>Launchpad (may work unreliably)</li><li>Show Desktop (may work unreliably)</li><li>Screen zoom (configured in ‘Accessibility’/‘Universal Access’ -&gt; Zoom -&gt; Advanced -&gt; Controls -&gt; Use trackpad gesture to zoom)</li><li>It also supports BetterTouchTool.</li></ul><p>另外，此 kext 支持 Force Touch 仿真(在 Info.plist 中配置): </p><ul><li>Mode 0 – Force Touch emulation is disabled (you can also disable it in System Preferences without setting the mode).</li><li>Mode 1 – Force Touch emulation using a physical button: on ClickPads (touchpads which have the whole surface clickable (the physical button is inside the laptop under the bottom of touchpad)), the physical button can be remapped to Force Touch. In such mode a tap is a regular click, if Tap to click gesture is enabled in System Preferences, and a click is a Force Touch. This mode is convenient for people who usually tap on the touchpad, not click.</li><li>Mode 2 – ‘wide tap’: for Force Touch one needs to increase the area of a finger touching the touchpad***. The necessary width can be set in Info.plist.</li><li>Mode 3 – pressure value is passed to the system as is; this mode shouldn’t be used.</li><li>Mode 4 (by @Tarik02) – pressure is passed to the system using the following formula: formula<br>!()[<a href="https://cdn.jsdelivr.net/gh/acidanthera/VoodooPS2/Docs/force_touch.png]" target="_blank" rel="noopener external nofollow noreferrer">https://cdn.jsdelivr.net/gh/acidanthera/VoodooPS2/Docs/force_touch.png]</a></li></ul><p><strong><em>使用Info.plist或配置SSDT中的ForceTouchCustomUpThreshold，ForceTouchCustomDownThreshold和ForceTouchCustomPower键配置公式中的参数。 请注意，ForceTouchCustomDownThreshold是压力值的上限，反之亦然，因为它对应于完全按下的触摸板。</em></strong></p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>为了使 VoodooPS2Trackpad.kext 正常工作，需要 VoodooInput.kext 的多点触摸界面引擎。新版的 VoodooPS2 已经将 VoodooInput 作为 PlugIns 插入到了 PlugIns 目录下。</p><p>在编译之前需要 VoodooInput.kext 引导程序。 默认情况下，Xcode 编译时会自动执行此操作。 如果希望自己控制该过程或使用命令行编译，请在项目目录执行以下命令以安装 VoodooInput 依赖：</p><pre class="line-numbers language-bash"><code class="language-bash">src<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/VoodooInput/master/VoodooInput/Scripts/bootstrap.sh<span class="token variable">)</span></span> <span class="token operator">&amp;&amp;</span> <span class="token function">eval</span> <span class="token string">"<span class="token variable">$src</span>"</span> <span class="token operator">||</span> <span class="token keyword">exit</span> 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><ul><li><p>v2.1.4</p><ul><li>Upgraded to VoodooInput 1.0.5</li><li>Improved Smart Zoom and four finger gestures</li><li>Enabled Extended W mode on all trackpads that support it</li><li>Added ability for one special key to block trackpad longer than other keys</li><li>Added a new Force Touch emulation mode</li></ul></li><li><p>v2.1.3</p><ul><li>Added ps2rst=0 boot-arg for select CFL laptop compatibility</li><li>Added compatibility with VoodooInput 1.0.4</li><li>VoodooInput is now bundled with VoodooPS2</li></ul></li><li><p>v2.1.2</p><ul><li>Fixed initialisation race conditions causing kernel panics</li></ul></li><li><p>v2.1.1</p><ul><li>Fixed kext unloading causing kernel panics</li><li>Fixed Caps Lock LED issues (thx @Goshin)</li></ul></li><li><p>v2.1.0</p><ul><li>Improved reliability of three-finger dragging</li><li>Improved reliability of finger renumbering algorithm</li><li>Support for four-finger swipes</li><li>Experimental support for four-finger pinch and spread gestures (very unstable)</li><li>Magic Trackpad 2 simulation moved to VoodooInput project</li></ul></li><li><p>v2.0.4</p><ul><li>Patched CapsLock workaround for Mojave</li></ul></li><li><p>v2.0.3</p><ul><li>Use touchpad sleep mode during mainboard sleep</li><li>Improve physical and trackpad button support</li></ul></li><li><p>v2.0.2</p><ul><li>Unified release archive names</li><li>Initial workaround to rare kernel panics</li><li>Rebranding and conflict resolution with other drivers</li><li>Improve reliability of edge swipe gestures</li><li>Support macOS 10.11 to 10.15 beta</li><li>Support Xcode 11 beta</li><li>Support clicking with multiple fingers</li><li>Fix bugs in finger renumbering algorithm</li><li>Ignore hovering above the touchpad</li><li>[Temporary] Support overriding touchpad dimensions for old touchpads that don’t report minimum coordinates</li></ul></li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><ul><li><p>VoodooPS2<br>地址: <a href="https://taolu.lanzous.com/b01bd6lad" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lad</a><br>密码: c6dg</p></li><li><p>VoodooInput<br>地址: <a href="https://taolu.lanzous.com/b01bd6kzc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6kzc</a><br>密码: cvq9</p></li></ul><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/VoodooPS2" target="_blank" rel="noopener external nofollow noreferrer">VoodooPS2</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 触摸板 </tag>
            
            <tag> VoodooPS2 </tag>
            
            <tag> PS2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>itlwm 英特尔无线网卡驱动汇总</title>
      <link href="/itlwm.html"/>
      <url>/itlwm.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="当前进度"><a href="#当前进度" class="headerlink" title="当前进度"></a>当前进度</h3><ul><li>WPA 加解密已经完成,支持wpa2 Wi-Fi连接, ssid为ssdt, 密码为zxyssdt112233，加载驱动之后会自动连接上。</li><li>目前需要解决网速慢跟固件不工作的问题.</li></ul><h3 id="支持设备"><a href="#支持设备" class="headerlink" title="支持设备"></a>支持设备</h3><ul><li>3 系：3160、3165、3168</li><li>7 系：7260、7265</li><li>8 系：8260、8265</li><li>9 系：9260、9560、9462</li></ul><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><p>暂无</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><p>暂无</p><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/zxystd/itlwm" target="_blank" rel="noopener external nofollow noreferrer">itlwm</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无线网卡 </tag>
            
            <tag> 英特尔 </tag>
            
            <tag> itlwm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lilu 插件库汇总</title>
      <link href="/Lilu.html"/>
      <url>/Lilu.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>一个开放源代码内核扩展，为 macOS 的整个系统提供了用于任意 kext，库和程序修补的平台。</p><h3 id="特性"><a href="#特性" class="headerlink" title=" 特性"></a><i class="fa fa-star" aria-hidden="true"></i> 特性</h3><ul><li>通用 KEXT 修补程序</li><li>通用进程修补程序（具有基本32位功能的64位）</li><li>通用框架/库修补程序（具有基本32位功能的64位）</li><li>提供统一的插件 API</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>您应该根据需要将此 kext 与插件 kexts 一起安装。</li><li>预构建的二进制文件可在发行页面上找到。</li><li>已知插件页面上提供了几个可能带有代码示例的现有插件。要编译插件，请将 Lilu.kext 的调试版本复制到其目录中。</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>添加 -liludbg 以启用调试打印（在 DEBUG 二进制文件中可用）。</li><li>添加 -liludbgall 以在 Lilu 和所有加载的插件中启用调试打印（在 DEBUG 二进制文件中可用）。</li><li>添加 -liluoff 以禁用Lilu。</li><li>添加 -liluuseroff 以禁用 Lilu 用户修补程序（例如 dyld_shared_cache 操作）。</li><li>添加 -liluslow 以启用旧版用户修补程序。</li><li>添加 -lilulowmem 以禁用内核解压缩（在恢复模式下禁用 Lilu）。</li><li>添加 -lilubeta 以在不受支持的操作系统版本上启用 Lilu（默认启用 10.13 及更低版本）。</li><li>添加 -lilubetaall 以在不受支持的 os 版本上启用 Lilu 和所有已加载的插件（使用时要非常小心）。</li><li>添加 -liluforce 以启用 Lilu，而不管其模式，操作系统，安装程序或恢复如何。</li><li>添加 liludelay=1000 可以在每次打印后启用1秒的延迟以进行故障排除。</li><li>添加 lilucpu=N 可使Lilu和插件假定第 N 个 CPUInfo::CpuGeneration。</li><li>添加 liludump=N，以使 Lilu DEBUG 版本在 N 秒后将日志转储到 /var/log/Lilu_VERSION_KERN_MAJOR.KERN_MINOR.txt</li></ul><h3 id="插件库"><a href="#插件库" class="headerlink" title="插件库"></a>插件库</h3><blockquote><p>这可能不是完整的列表。 如果您觉得缺少某些东西，可以在下方评论。</p></blockquote><table><thead><tr><th align="left">Name</th><th align="left">Short description</th></tr></thead><tbody><tr><td align="left"><a href="https://github.com/acidanthera/AirportBrcmFixup" target="_blank" rel="noopener external nofollow noreferrer">AirportBrcmFixup</a></td><td align="left">Various patches for Broadcom Airport Wi-Fi cards</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/AppleALC" target="_blank" rel="noopener external nofollow noreferrer">AppleALC</a></td><td align="left">Native macOS HD audio for not officially supported codecs</td></tr><tr><td align="left"><a href="https://github.com/chunnann/ATH9KFixup" target="_blank" rel="noopener external nofollow noreferrer">ATH9KFixup</a></td><td align="left">Various patches for unsupported Atheros Wi-Fi cards</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/BT4LEContinuityFixup" target="_blank" rel="noopener external nofollow noreferrer">BT4LEContinuityFixup</a></td><td align="left">Enable BT4LE-Handoff-Hotspot features</td></tr><tr><td align="left"><a href="https://github.com/PMheart/CPUFriend" target="_blank" rel="noopener external nofollow noreferrer">CPUFriend</a></td><td align="left">Dynamic power management data injection</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/DebugEnhancer" target="_blank" rel="noopener external nofollow noreferrer">DebugEnhancer</a></td><td align="left">Enable debug output in the macOS kernel</td></tr><tr><td align="left"><a href="https://github.com/Goldfish64/DiskArbitrationFixup" target="_blank" rel="noopener external nofollow noreferrer">DiskArbitrationFixup</a></td><td align="left">Disable the uninitialised disk message at disk insertion</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/HibernationFixup" target="_blank" rel="noopener external nofollow noreferrer">HibernationFixup</a></td><td align="left">Enable 3 &amp; 25 mode hibernation on certain hardware</td></tr><tr><td align="left"><a href="https://github.com/IOIIIO/MacProMemoryNotificationDisabler" target="_blank" rel="noopener external nofollow noreferrer">MacProMemoryNotificationDisabler</a></td><td align="left">Disabling the “more than maximum amount of memory” popup on MacPro7,1</td></tr><tr><td align="left"><a href="https://github.com/cdf/NightShiftEnabler" target="_blank" rel="noopener external nofollow noreferrer">NightShiftEnabler</a></td><td align="left">Enables Night Shift on all the models</td></tr><tr><td align="left"><a href="https://github.com/al3xtjames/NoTouchID" target="_blank" rel="noopener external nofollow noreferrer">NoTouchID</a></td><td align="left">Disables Touch ID checks causing hangs</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/NVMeFix" target="_blank" rel="noopener external nofollow noreferrer">NVMeFix</a></td><td align="left">Improved power management for generic NVMe SSDs</td></tr><tr><td align="left"><a href="https://www.insanelymac.com/forum/topic/329704-opcode-emulator-opemu-plug-in-project/" target="_blank" rel="noopener external nofollow noreferrer">OpcodeEmulator</a></td><td align="left">Intel Haswell Pentium / Celeron Series Or older processor expansion instruction set Emulation</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/RTCMemoryFixup" target="_blank" rel="noopener external nofollow noreferrer">RTCMemoryFixup</a></td><td align="left">Offsets in CMOS (RTC) memory emulation</td></tr><tr><td align="left"><a href="https://github.com/Goldfish64/SystemProfilerMemoryFixup" target="_blank" rel="noopener external nofollow noreferrer">SystemProfilerMemoryFixup</a></td><td align="left">Show memory tab on MacBook models with soldered RAM</td></tr><tr><td align="left"><a href="https://github.com/osy86/ThunderboltReset" target="_blank" rel="noopener external nofollow noreferrer">ThunderboltReset</a></td><td align="left">Disable the ICM in the Alpine Ridge</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/VirtualSMC" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC</a></td><td align="left">Advanced SMC emulation</td></tr><tr><td align="left"><a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td><td align="left">Various patches necessary for GPUs</td></tr></tbody></table><p>Plugins which functionality was merged into other plugins:</p><table><thead><tr><th align="left">Name</th><th align="left">Short description</th></tr></thead><tbody><tr><td align="left"><a href="https://github.com/coderobe/AzulPatcher4600" target="_blank" rel="noopener external nofollow noreferrer">AzulPatcher4600</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/hieplpvip/AppleBacklightFixup" target="_blank" rel="noopener external nofollow noreferrer">AppleBacklightFixup</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/syscl/EnableLidWake" target="_blank" rel="noopener external nofollow noreferrer">EnableLidWake</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/PMheart/BrcmWLFixup" target="_blank" rel="noopener external nofollow noreferrer">BrcmWLFixup</a></td><td align="left">Superseded by <a href="https://github.com/lvs1974/AirportBrcmFixup" target="_blank" rel="noopener external nofollow noreferrer">AirportBrcmFixup</a></td></tr><tr><td align="left"><a href="https://github.com/PMheart/CoreDisplayFixup" target="_blank" rel="noopener external nofollow noreferrer">CoreDisplayFixup</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/vulgo/NoVPAJpeg" target="_blank" rel="noopener external nofollow noreferrer">NoVPAJpeg</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/Austere-J/NightShiftUnlocker" target="_blank" rel="noopener external nofollow noreferrer">NightShiftUnlocker</a></td><td align="left">Superseded by <a href="https://github.com/cdf/NightShiftEnabler" target="_blank" rel="noopener external nofollow noreferrer">NightShiftEnabler</a></td></tr><tr><td align="left"><a href="https://github.com/BarbaraPalvin/IntelGraphicsDVMTFixup" target="_blank" rel="noopener external nofollow noreferrer">IntelGraphicsDVMTFixup</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/lvs1974/IntelGraphicsFixup" target="_blank" rel="noopener external nofollow noreferrer">IntelGraphicsFixup</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/lvs1974/NvidiaGraphicsFixup" target="_blank" rel="noopener external nofollow noreferrer">NvidiaGraphicsFixup</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr><tr><td align="left"><a href="https://github.com/acidanthera/Shiki" target="_blank" rel="noopener external nofollow noreferrer">Shiki</a></td><td align="left">Superseded by <a href="https://github.com/acidanthera/WhateverGreen" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen</a></td></tr></tbody></table><h3 id="特殊性"><a href="#特殊性" class="headerlink" title="特殊性"></a>特殊性</h3><ul><li>大多数插件会在安全（-x）模式下停止运行。</li><li>默认情况下，除非存在 -liluforce，否则 Lilu 本身在单用户（-s）模式下不起作用。</li></ul><h2 id="版本历史"><a href="#版本历史" class="headerlink" title=" 版本历史"></a><i class="fa fa-history" aria-hidden="true"></i> 版本历史</h2><h3 id="Lilu"><a href="#Lilu" class="headerlink" title="Lilu"></a>Lilu</h3><h4 id="v1-4-4"><a href="#v1-4-4" class="headerlink" title="v1.4.4"></a>v1.4.4</h4><ul><li>Added new CFL connector-less framebuffers: 0x9BC80003, 0x9BC50003, 0x9BC40003</li><li>Fixed KDK support disrespecting file suffixes</li></ul><h4 id="v1-4-3"><a href="#v1-4-3" class="headerlink" title="v1.4.3"></a>v1.4.3</h4><ul><li>Improved modern CPUID detection</li><li>Added BaseDeviceInfo API with improved performance</li><li>Deprecated CPUInfo::getGeneration, WIOKit::getComputerModel(), WIOKit::getComputerInfo()</li></ul><h4 id="v1-4-2"><a href="#v1-4-2" class="headerlink" title="v1.4.2"></a>v1.4.2</h4><ul><li>Fixed IMEI device detection on some platforms</li><li>Added CometLake CPU model support (thx @stormbirds)</li><li>Added getFatOffset MachO API</li></ul><h4 id="v1-4-1"><a href="#v1-4-1" class="headerlink" title="v1.4.1"></a>v1.4.1</h4><ul><li>Made applyLookupPatch support kernel patches by passsing null kext</li><li>Export hde64 interface</li><li>Added evector deleter without copying for improved performance</li><li>Allow C strings as module prefix argument to the logging functions</li></ul><h4 id="v1-4-0"><a href="#v1-4-0" class="headerlink" title="v1.4.0"></a>v1.4.0</h4><ul><li>Fixed mishandling user patches process list after processKernel API call</li><li>Fixed extra I/O in user patcher even when no patches were needed</li><li>Added support for per-process (LocalOnly) userspace patches</li></ul><h4 id="v1-3-9"><a href="#v1-3-9" class="headerlink" title="v1.3.9"></a>v1.3.9</h4><ul><li>Added QEMU/KVM vendor compatibility to device detection logic</li></ul><h4 id="v1-3-8"><a href="#v1-3-8" class="headerlink" title="v1.3.8"></a>v1.3.8</h4><ul><li>Compile Xcode 11 OSObject stubs into plugins to allow mixing compilers</li><li>Unified release archive names</li><li>Added multirouting support to routeFunction API enabling functions to have multiple proxies</li><li>Added explicit routing type to routeFunction APIs</li><li>Made Lilu use long function routes to ease third-part multirouting</li></ul><h4 id="v1-3-7"><a href="#v1-3-7" class="headerlink" title="v1.3.7"></a>v1.3.7</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Add support for Xcode 11 analysis tools</li><li>Add workaround to 10.15 SDK Dispatch method (use old Xcode when possible)</li></ul><h4 id="v1-3-6"><a href="#v1-3-6" class="headerlink" title="v1.3.6"></a>v1.3.6</h4><ul><li>Lilu now uses OpenCore NVRAM variable GUIDs</li><li>Add support for <code>0x3E980003</code> frame id for CFL refresh</li></ul><h4 id="v1-3-5"><a href="#v1-3-5" class="headerlink" title="v1.3.5"></a>v1.3.5</h4><ul><li>Fixed analog audio device detection on certain laptops with Insyde firmware</li></ul><h4 id="v1-3-4"><a href="#v1-3-4" class="headerlink" title="v1.3.4"></a>v1.3.4</h4><ul><li>Added implicit <code>eraseCoverageInstPrefix</code> to <code>routeMultiple</code></li><li>Fixed user patcher kernel panic when running process via <code>posix_spawn</code> without exec</li><li>Fixed user patcher codesign issues on recent 10.14 versions with SIP</li><li>Changed <code>kern_start</code> and <code>kern_stop</code> to contain product prefix to avoid collisions</li></ul><h4 id="v1-3-3"><a href="#v1-3-3" class="headerlink" title="v1.3.3"></a>v1.3.3</h4><ul><li>Added support for modern AMD device scanning by @AlGreyy</li><li>Added support for VMware device scanning</li></ul><h4 id="v1-3-2"><a href="#v1-3-2" class="headerlink" title="v1.3.2"></a>v1.3.2</h4><ul><li>Extended supported firmware vendor list</li></ul><h4 id="v1-3-1"><a href="#v1-3-1" class="headerlink" title="v1.3.1"></a>v1.3.1</h4><ul><li>Lowered version compatibility to 1.2.0 to let plugins load</li></ul><h4 id="v1-3-0"><a href="#v1-3-0" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Fixed a rare kernel panic on user patch failure</li><li>Removed unimplemented <code>genPlatformKey</code> API</li></ul><h4 id="v1-2-9"><a href="#v1-2-9" class="headerlink" title="v1.2.9"></a>v1.2.9</h4><ul><li>Added <code>kern_atomic.hpp</code> header to support atomic types with old Clang</li><li>Added ThreadLocal APIs</li><li>Added <code>KernelPatcher::eraseCoverageInstPrefix</code> API</li><li>Fixed race condition during bootstrap (thx @Download-Fritz)</li><li>Fixed potential race condition during user patching</li></ul><h4 id="v1-2-8"><a href="#v1-2-8" class="headerlink" title="v1.2.8"></a>v1.2.8</h4><ul><li>Fixed CPU generation detection for Coffee Lake-U</li><li>Fixed PEGP detection with 3D Controller <code>class-code</code></li><li>Fixed userspace patcher compatibility with macOS Mojave</li><li>Allow manually specified reservation in <code>evector</code></li><li>Improved version information printing in DEBUG builds</li></ul><h4 id="v1-2-7"><a href="#v1-2-7" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Added support for detecting optimus switch-off</li><li>Added Sanitize target with ubsan support (thx to NetBSD)</li><li>Added disk log dump in DEBUG builds via <code>liludump=N</code> boot-arg (requires plugin rebuild)</li><li>Fixed multiple Mach-O parsing issues</li><li>Fixed support of PCI devices without compatible property</li><li>Fixed PCI <code>class-code</code> masking not detecting HDEF devices</li></ul><h4 id="v1-2-6"><a href="#v1-2-6" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Added Cannon Lake and Ice Lake definitions</li><li>Added missing typed getOSData APIs</li><li>Added <code>-liluuseroff</code> boot-arg to disable user patcher (for e.g. shared cache manipulation)</li><li>Added <code>lilucpu=N</code> boot-arg to assume CPU generation</li><li>Added CPU topology detection APIs</li><li>Fixed routeMultiple kernel panic and log report</li><li>Switched to Apple lzvn implementation</li></ul><h4 id="v1-2-5"><a href="#v1-2-5" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Added new DeviceInfo API</li><li>Added checkKernelArgument API</li><li>Added enforced LiluAPI interfaces</li><li>Added KextInfo::switchOff API</li><li>Added cpuid API</li><li>Allowed for onKextLoad to accept no callback</li><li>Removed GPU detection code from CPUInfo API</li><li>Enabled by default on 10.14</li></ul><h4 id="v1-2-4"><a href="#v1-2-4" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>Internalize new APIs from 1.2.3</li><li>Added new EFI runtime API with custom variable extensions</li><li>Added new RTC storage API</li><li>Added centralised entitlement hooking API</li><li>Added lilu_os_qsort export (the supported interface is Apple-private)</li><li>Added <code>liludelay=1000</code> boot argument to insert a 1s delay after each print</li><li>Added new symbol routing API with simplified interface</li><li>Fixed a kernel panic in userspace patching code on 10.14b1</li></ul><h4 id="v1-2-3"><a href="#v1-2-3" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Added CPU information API for cpu families and generations</li><li>Added IGPU information API for framebuffers and stuff</li><li>Added WIOKit::renameDevice API for device renaming with compatible fixing</li><li>Added KernelPatcher::routeVirtual API for virtual function swapping</li><li>Added PCI register and address manipulation API</li><li>Added basic process modification API</li><li>Added plugin IOService access</li><li>Added address-printing macros</li><li>Added address validation API</li><li>Added strict kext UUID validation to workaround broken kextcache</li><li>Added version info reporting to IORegistry for Lilu and plugins</li><li>Fixed several inline function definitions</li><li>Fixed crash when loading user patches with no binary patches</li><li>Reduced long patch length in function routing API</li></ul><h4 id="v1-2-2"><a href="#v1-2-2" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>Acknowledged macOS Install Data and com.apple.recovery.boot prelinkedkernel paths (thx Piker-Alpha)</li><li>Fixed ignoring <code>kcsuffix=&lt;suffix&gt;</code> for kexts and less common names</li><li>Added extra logging for backtrace macros to ensure that they are not skipped</li><li>Fixed compilation issues with clang not supporting 2 args for deprecated attribute</li></ul><h4 id="v1-2-1"><a href="#v1-2-1" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>Fixed a rare kernel panic when running Lilu with <code>-liludbg</code></li><li>Added a workaround for 10.13.2 beta issues</li><li>Fixed compilation with Xcode 8.2</li><li>Added prelink usage detection to avoid confusing different kernels</li><li>Disabled prelink usage for kext address solving by default since it caused many issues</li></ul><h4 id="v1-2-0"><a href="#v1-2-0" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Added more handy reporting macros</li><li>Enabled Lilu in safe mode by default with all plugins required to declare supported environments</li><li>Added lzss compression API</li><li>Added crypto and nvram API</li><li>Added support for solving kext symbols from kextcache</li><li>Added memfunc wrappers (e.g. lilu_os_memcpy) to avoid undefined builtins from 10.13 SDK</li><li>Added <code>-liludbgall</code> boot argument (to be on par with <code>-lilubetaall</code>)</li><li>Added unexact process path matching</li><li>Changed compression API logic to support preallocated buffers</li><li>Changed memory allocation logic in certain APIs</li><li>Changed kernel protection API to accept a lock for cpu preemption control</li><li>Changed KextInfo structure to handle disabled and fsonly kexts</li><li>Changed logging API to enforce more proper style</li><li>Disabled advanced disassembly APIs by default (create an issue if you need them)</li><li>Fixed a memory issue in WIOKit::getComputerInfo introduced in 1.1.7</li><li>Fixed several assertions triggering in 10.13 development kernel</li><li>Fixed Xcode 9 compiled binary compatibility with older OS</li><li>Fixed FAT_CIGAM and FAT_MAGIC parsing issues</li><li>Fixed a number of potential memory issues in mach parsing code</li><li>Fixed debug and development kextcache loading issues</li><li>Fixed shutdown issues in <code>-lilulowmem</code> mode</li><li>Fixed seldom boot slowdown when disabling the plugins via boot arguments</li></ul><h4 id="v1-1-7"><a href="#v1-1-7" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Merged advanced disassembly API (thx Pb and others)</li><li>Added HDE disassembler for quick instruction decoding (by Vyacheslav Patkov)</li><li>Updated capstone to 3.0.5 rc3</li><li>Fixed load API lock type preventing dynamic memory allocation (thx Pb)</li><li>Added setInterrupts API</li><li>Added an option to define custom plugin entry points</li><li>Added const reference evector API</li><li>Added FAT_CIGAM Mach-O support</li><li>Added WIOKit::getComputerInfo API and improved some other WIOKit APIs</li><li>Added support of storing larger than pointer types in evector</li><li>Added <code>-lilubetaall</code> boot argument to skip version checking for all plugins</li></ul><h4 id="v1-1-6"><a href="#v1-1-6" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Ignored disabled kexts earlier for speed reasons</li><li>Added High Sierra to the list of compatible OS</li><li>Added arrsize API</li><li>Made patch count warning only show in debug mode</li><li>Made kinfo not found logging only show in debug mode</li><li>Added routeBlock API for opcode-based routing</li><li>Centralised user and kernel patcher start time</li><li>Added c-compliant kern_os_cfree implementation</li><li>Added a workaround for page fault kernel panics</li><li>Added a workaround for xnu printf limitations</li></ul><h4 id="v1-1-5"><a href="#v1-1-5" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Increased executable memory buffer to page size</li><li>Added auth-root-dmg support High Sierra installer detection (thx Piker-Alpha)</li><li>Added -liluforce to force enable Lilu in safe mode and recovery</li><li>Added preliminary Xcode 9 compatibility</li><li>Added support for unloadable kexts</li><li>Merged official capstone patches up to c508224</li></ul><h4 id="v1-1-4"><a href="#v1-1-4" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Slightly improved userspace patcher speed for 10.12</li><li>Added missing dyld_shared_cache detection with a fallback</li><li>Defined High Sierra kernel version</li></ul><h4 id="v1-1-3"><a href="#v1-1-3" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Reduced binary size by modding capstone</li><li>Fixed LiluAPI::onProcLoad return code</li><li>Added MachInfo::setRunningAddresses for userspace symbol solving</li><li>Added getKernelMinorVersion for symmetry</li><li>Added kernel write protection and interrupt state validation</li></ul><h4 id="v1-1-1"><a href="#v1-1-1" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Changed loading policy to ignore kexts that are not permitted to load</li><li>Increased executable memory buffer from 256 to 1024 bytes</li><li>Allowed different plugins load the same kexts</li></ul><h4 id="v1-1-0"><a href="#v1-1-0" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Added support for patching different sections/segments</li><li>Added file writing API by lvs1974</li><li>Added strrchr API</li><li>Changed requestAccess to include API version to workaround kext loading issues</li><li>Updated capstone to 3.0.5 rc2</li><li>Improved 32-bit userspace patcher</li><li>Enforced <code>-liluslow</code> in installer and recovery</li></ul><h4 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h4><ul><li>Initial release</li></ul><h3 id="AirportBrcmFixup"><a href="#AirportBrcmFixup" class="headerlink" title="AirportBrcmFixup"></a>AirportBrcmFixup</h3><h4 id="v1-0-0"><a href="#v1-0-0" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h4 id="v1-0-1"><a href="#v1-0-1" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Refactoring, patch for “Failed PCIe configuration” added”</li><li>Patch for 5Ghz / Country code added</li><li>A new pseudo device FakeBrcm is introduced. It is started instead of original broadcom driver. Original driver is started in processKext.</li></ul><h4 id="v1-0-2"><a href="#v1-0-2" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>5 Ghz/country code patch reimplemented. Boot arg brcmfx-country=XX is supported.</li></ul><h4 id="v1-0-3"><a href="#v1-0-3" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Don’t use FakeBrcm under 10.13 and higher.</li></ul><h4 id="v1-0-4"><a href="#v1-0-4" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Bug in release version has been fixed (EXPORT added).</li><li>Debugging output was improved.</li></ul><h4 id="v1-0-5"><a href="#v1-0-5" class="headerlink" title="v1.0.5"></a>v1.0.5</h4><ul><li>Fix for High Sierra Developer Beta 7 (loading order)</li></ul><h4 id="v1-0-6"><a href="#v1-0-6" class="headerlink" title="v1.0.6"></a>v1.0.6</h4><ul><li>Pass property table to the newly created instance of a driver. Disable FakeBrcm if processKext was called earlier.</li></ul><h4 id="v1-0-7"><a href="#v1-0-7" class="headerlink" title="v1.0.7"></a>v1.0.7</h4><ul><li>New boot-args: wl_msg_level=XXXXX and wl_msg_level2=XXXXX pass specified values to respective fields in driver, allows to get a full log</li><li>FakePCIID functionality is built-in</li></ul><h4 id="v1-0-8"><a href="#v1-0-8" class="headerlink" title="v1.0.8"></a>v1.0.8</h4><ul><li>5 Ghz/country code patch fixed (low speed after wake up)</li></ul><h4 id="v1-0-9"><a href="#v1-0-9" class="headerlink" title="v1.0.9"></a>v1.0.9</h4><ul><li>Parameter brcmfx-country can be located in ioreg (in provider, ARPT for example)</li></ul><h4 id="v1-0-10"><a href="#v1-0-10" class="headerlink" title="v1.0.10"></a>v1.0.10</h4><ul><li>WOWL (WoWLAN) is disabled by default. Use boot-arg -brcmfxwowl to enable it.</li></ul><h4 id="v-1-0-11"><a href="#v-1-0-11" class="headerlink" title="v.1.0.11"></a>v.1.0.11</h4><ul><li>Fix co-existing with FakePCIID_Broadcom_WiFi.kext &amp; FakePCIID</li></ul><h4 id="v1-1-0-1"><a href="#v1-1-0-1" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>XCode 9 &amp; Lilu 1.2.0 compatibility fixes (Lilu 1.2.0 is required)</li></ul><h4 id="v1-1-1-1"><a href="#v1-1-1-1" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Cosmetic change</li></ul><h4 id="v1-1-2"><a href="#v1-1-2" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>FakeBrcm is destroyed &amp; removed from ioreg, there is no need to start original ariport driver, gIOCatalogue-&gt;removeDrivers called for FakeBrcm does this.</li></ul><h4 id="v1-1-3-1"><a href="#v1-1-3-1" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Allow to load all matched drivers for broadcom wi-fi (in case if there is a concurrency), except AirPortBrcmNIC-MFG.kext</li><li>AirPortBrcmNIC-MFG probe &amp; start are hooked to prevent using of this driver</li><li>Fix a name conflict for config variable</li></ul><h4 id="v1-1-4-1"><a href="#v1-1-4-1" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Add patch to disable LPO panic in AirPortBrcmNIC: on some cards (DW1820A/BCM4350), the external LPO clock is sometimes<br>not set upon initialization. While harmless in AirPortBrcm4360, AirPortBrcmNIC panics if this occurs. As it wasn’t present previously,<br>_osl_panic for string “32KHz LPO Clock not running” does not produce panic in AirPortBrcmNIC. Idea by al3xtjames.</li></ul><h4 id="v1-1-5-1"><a href="#v1-1-5-1" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Mojave compatible</li></ul><h4 id="v1-1-6-1"><a href="#v1-1-6-1" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Try to resolve linker issue with __ZN13Configuration18bootargBrcmCountryE (with older Xcode versions)</li></ul><h4 id="v1-1-7-1"><a href="#v1-1-7-1" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Use separate variables and methods wlc_set_countrycode_rev &amp; siPmuFvcoPllreg for every driver</li><li>Introduce a new boot-arg brcmfx-driver=[0|1|2], 0 - AirPort.BrcmNIC-MFG, 1 - AirPort.Brcm4360, 2 - AirPort.BrcmNIC</li><li>Remove redundancy boot-args wl_msg_level and wl_msg_level2 (they are supported by Apple)</li><li>pci14e4,43b1 &amp; pci14e4,43b2 matched also to AirPort_BrcmNIC</li></ul><h4 id="v1-1-8"><a href="#v1-1-8" class="headerlink" title="v1.1.8"></a>v1.1.8</h4><ul><li>Support AirPort_Brcm4331</li></ul><h4 id="v1-1-9"><a href="#v1-1-9" class="headerlink" title="v1.1.9"></a>v1.1.9</h4><ul><li>Fix issue with IOProbeScore for Airport_BrcmNIC</li></ul><h4 id="v2-0-0"><a href="#v2-0-0" class="headerlink" title="v2.0.0"></a>v2.0.0</h4><ul><li>checkBoardId patch has been improved: returns false for boardId in cpmChanSwitchWhitelist</li><li>Service provider name is changed to ARPT automatically</li></ul><h4 id="v2-0-1"><a href="#v2-0-1" class="headerlink" title="v2.0.1"></a>v2.0.1</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li></ul><h4 id="v2-0-2"><a href="#v2-0-2" class="headerlink" title="v2.0.2"></a>v2.0.2</h4><ul><li>Fixed compatibility with 10.15</li></ul><h4 id="v2-0-3"><a href="#v2-0-3" class="headerlink" title="v2.0.3"></a>v2.0.3</h4><ul><li>Unified binary archive names</li></ul><h4 id="v2-0-4"><a href="#v2-0-4" class="headerlink" title="v2.0.4"></a>v2.0.4</h4><ul><li>Minor improvement in method findService (based on panic report analysis)</li><li>Do not use removeObject, use getNextObject</li></ul><h4 id="v2-0-5"><a href="#v2-0-5" class="headerlink" title="v2.0.5"></a>v2.0.5</h4><ul><li>Re-implement wowl disabler (fix bug #615)</li></ul><h4 id="v2-0-6"><a href="#v2-0-6" class="headerlink" title="v2.0.6"></a>v2.0.6</h4><ul><li>Add previous implementation of wowl disabler (both methods wlc_wowl_enable and wowCapablePlatform must be overridden)</li><li>Add support for DW1820A CN-096JNT &amp; Fix freezing issues (thanks to Sniki)</li><li>Read property brcmfx-driver from provider’s IOReg entry (can be injected by bootloader as well as brcmfx-country property)</li></ul><h4 id="v2-0-7"><a href="#v2-0-7" class="headerlink" title="v2.0.7"></a>v2.0.7</h4><ul><li>Fix for kernel panic when FakeBrcm is detached from provider (provider-&gt;close(service))</li></ul><h3 id="AppleALC"><a href="#AppleALC" class="headerlink" title="AppleALC"></a>AppleALC</h3><h4 id="v1-4-9"><a href="#v1-4-9" class="headerlink" title="v1.4.9"></a>v1.4.9</h4><ul><li>Added IDT92HD73E1X5 layout-id 15 for HP Envy h8 1425eg by MacPeet</li><li>Fix Headphone NodeID ALC269VC layout-id 22 Veritron Z4640G by Andres ZeroCross</li><li>Added ALC255 layout-id 29 for Acer Predator G3-571 by dhinakg</li><li>Added ALC256 layout-id 17 for Magicbook with 4CH by hjmmc</li><li>Updated ConfigData &amp; Added WakeConfigData for ALC295 layout-id 14 by hieplpvip</li><li>Added ALC671 layout-id 88 for HP 280 Pro G4 by lcp6668</li><li>Added ALC294 layout-id 22 for ASUS ROG GL504GW by cowpod</li><li>Added ALC892 layout-id 22 for ASRock Z390m-ITX/ac by imEgo</li><li>Added wakeconfigdata for ALC230 layout-id 20 by ameenjuz</li><li>Added ALC235 layout-id 24 for ASUS TUF FX705GM by therealgudv1n</li><li>Added ALC892 layout-id 20 for GIGABYTE Z390M GAMING by bokeylee</li><li>Added ALC298 layout-id 16 for Dell Precision 5520 by Pingren</li><li>Added ALC269 layout-id 77 for Thunderobot-G7000S by Phoenix-Liang</li><li>Rename 400 series LP controller, add 400 series PCH-H controller</li></ul><h4 id="v1-4-8"><a href="#v1-4-8" class="headerlink" title="v1.4.8"></a>v1.4.8</h4><ul><li>MaxKernel HS for GM/GP</li><li>Support startup delay for AppleHDAController via <code>alc-delay</code> property or <code>alcdelay</code> boot-arg (in ms)</li><li>Guarded TCSEL change to TC0 with <code>alctsel=&lt;01 00 00 00&gt;</code> property or <code>alctsel=1</code> boot-arg</li><li>Improved performance with Lilu 1.4.3 APIs</li><li>Added ALC257 layout-id 99 and100 for Lenovo XiaoXin Pro 2019 by DalianSky</li><li>Added ALC283 layout-id 88 for DELL R14 3437 by Zoran</li><li>Add mute button to ALC230 layout 13 by Ab2774</li><li>Update for Better Input Range ALC 235 by Andres ZeroCross</li><li>Added ALC269VC layout-id 22 for Acer Veriton Z4640G by Andres ZeroCross</li><li>Updated ConfigData &amp; Added WakeConfigData to fix CodecCommander dependency CX20751/2 layout-id 28 LineIn Sniki</li><li>Updated ConfigData &amp; Updated WakeConfigData to fix CodecCommander dependency ALC221 layout-id 11 LineIn(s) by Sniki</li><li>Added ALC255/ALC3234 layout-id 7 for Dell 7348 by armenio</li><li>Fix Conexant CX8050 LineIn for headsets with combo jack</li></ul><h4 id="v1-4-7"><a href="#v1-4-7" class="headerlink" title="v1.4.7"></a>v1.4.7</h4><ul><li>Added support for Intel C620 series PCH Audio</li><li>Fixed injected MaximumBootBeepVolume</li><li>Added ALC256 layout-id 23 by Andres ZeroCross for Razer Blade 15 RZ09-02705E75</li><li>Added mute button to ALC230 layout 20</li><li>Added ALC295 layout-id 23 for HP OMEN 15-AX000 by Lancet-z</li><li>Added ALC256 layout-id 16 for Dell 7000 Series with 2.1Ch by vicjl</li><li>Added ALC294 layout-id 66 for ASUS X542UQR by KKKIIINNN</li><li>Added ALC236 layout-id 12 for Lenovo Xiaoxin Air 14IKBR by AlexanderLake</li><li>Added ALC292 layout-id 15 for LENOVO THINKPAD T450_T450s_X240 - Manual by ModeMacPeet</li><li>Added ALC1220 layout-id 30 for Z370 AORUS Gaming 7 - Output SP/HP SwitchMode by MacPeet</li><li>Added ALC294 layout-id 28 for Asus ROG G531GD by ayatkyo</li><li>Added ALC255 layout-id 71 for Acer Aspire A515-51(G) by DoctorStrange96</li><li>Added ALC235 layout-id 17 for Lenovo ThinkCentre Tiny M720q by marianvlaza</li></ul><h4 id="v1-4-6"><a href="#v1-4-6" class="headerlink" title="v1.4.6"></a>v1.4.6</h4><ul><li>Add missing pinconfig ALC235 layout-id 16</li><li>Fixed speaker/headphone priority ALC700 layout-id 11</li><li>300 Series PCH HD Audio is native in 10.14+</li><li>Added ALC215 layout-id 18 for HP 830 G6 by 965987400abc</li><li>Added TCSEL change to TC0 for Intel codecs</li></ul><h4 id="v1-4-5"><a href="#v1-4-5" class="headerlink" title="v1.4.5"></a>v1.4.5</h4><ul><li>Update MuteGPIO and AMP Values ALC255 layout-id 21 by Andres ZeroCross</li><li>Added ALC272 layout-id 21 for  Lenovo All In One PC C440 by Andres ZeroCross</li><li>Conflict patches for NUC7 HDMI audio are deleted.</li><li>Added ALC285 layout-id 52 for Thinkpad P52 by liuyishengalan</li><li>Added  Intel 400 series controller (Comet Lake) by fewtarius</li><li>Added 4 channel support and fixed mute button to ALC256 layout 97</li><li>Added ALC1220 layout-id 99 for MiBook 2019 by Dynamix1997</li><li>Added ALC262 layout-id 66 for MS-7847 by Dynamix1997</li><li>Added ALC269VC layout-id 47 for Hasee K790s by Dynamix1997</li></ul><h4 id="v1-4-4-1"><a href="#v1-4-4-1" class="headerlink" title="v1.4.4"></a>v1.4.4</h4><ul><li>Added ALC269 layout-id 12 for Asus Vivobook S200CE by chunnann</li><li>Update ALC269 layout-id 19 for Asus Vivobook S300CA by chunnann</li><li>Update ALC230 layout-id 20 to fix sleep after wake by ameenjuz</li><li>Added CX8150 layout-id 22 for ASUS VivoBook S405UA-EB906T by Andres ZeroCross</li><li>Added ALC285 layout-id 31 for Thinkpad X1E 8750H version by Flymin</li></ul><h4 id="v1-4-3-1"><a href="#v1-4-3-1" class="headerlink" title="v1.4.3"></a>v1.4.3</h4><ul><li>Added support for <code>No-hda-gfx</code> HDEF property disabling IGPU digital audio</li><li>Added CX8050 layout-id 13 for ASUS S410U/X411U by cowpod</li><li>Fix layout 13 CX8050 microphone after sleep by cowpod</li><li>Added STAC9872AK layout-id 12 for Sony VGN-FZ11MR by ctich</li><li>Added support for intel NUC7 HDMI audio device-id 719d by Sevift</li><li>Update configdata for dell-5488 by daggeryu</li><li>Fixed ALC292 layout-id 55 with linein (dock mic) boost issue by baesar0</li></ul><h4 id="v1-4-2-1"><a href="#v1-4-2-1" class="headerlink" title="v1.4.2"></a>v1.4.2</h4><ul><li>Added Conexant CX20632 layout-id 28 for HP EliteDesk by Halelluja12</li><li>Added wake verb for ALC1220 layout-id 34 for MSI P65 Creator / MSI GS65</li><li>Added Conexant CX20632 layout 23 for  HP ProDesk 480 G4 by frankiezdh</li><li>Fix headphone and speaker switch not working for CX8200 HP Probook 440 G5</li><li>Added ALC1220 layout-id 21 for MSI GE63 Raider RGB 8RF by Andres ZeroCross</li><li>Added ALC292 layout-id 32 for Lenovo T450s by EchoEsprit</li><li>Fixed string Platforms97.xml.zlib Realtek ALC256 layout-id 97 by DalianSky</li><li>Fix ALC700 HeadPhones and SPDIF outputs by osy86</li></ul><h4 id="v1-4-1-1"><a href="#v1-4-1-1" class="headerlink" title="v1.4.1"></a>v1.4.1</h4><ul><li>Fixed memory leaks</li><li>Added AMD Radeon R9 Fury/R9 Fury X HDMI audio support</li><li>Added ALC256 layout-id 66 for ASUS Y5000U X507UBR by lgs3137</li><li>Added ALC235 layout-id 22 for Asus ROG GL553VD-FY380 by Andres ZeroCross</li><li>Added ALC892 layout-id 90 for GIGABYTE B360M M AORUS PRO by xunyard</li><li>Added ALC298 layout-id 32 for XPS 9570 8750H version by smallssnow</li><li>Added ALC292 layout-id 55 for Dell Latitude E6440/E6540 with docking station linein/lineout support by baesar0</li><li>Added ALC256 layout-id 97 for MateBook X Pro 2019 by DalianSky</li><li>Added ALC269 layout-id 100 for GPD P2 Max by DalianSky</li><li>Merged Lenovo Air13 IWL with WhiskeyLake Mobile PCH HD Audio</li><li>Added CX8200 layout-id 23 for HP Probook 440 G5 by frankiezdh</li></ul><h4 id="v1-4-0-1"><a href="#v1-4-0-1" class="headerlink" title="v1.4.0"></a>v1.4.0</h4><ul><li>Unified release archive names</li><li>Added AMD Zen 2 controller patches by camielverdult</li><li>Added ALC274 layout-id 21 for Dell Inspiron 27-7777 AIO Series by Andres ZeroCross</li><li>Added ALC257 layout-id 18 for Lenovo Legion Y540 and Y7000-2019 by xiaoMGitHub</li><li>Added ALC289 layout-id 23 for Acer PT515-51 By Bugprogrammer and Rover</li><li>Added ALC285 layout 31 for Thinkpad X1E 8750H version by Flymin</li></ul><h4 id="v1-3-9-1"><a href="#v1-3-9-1" class="headerlink" title="v1.3.9"></a>v1.3.9</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Added ALC272 layout-id 18 for Lenovo B570 and B570e by Sniki</li><li>Added Conexant CX8070 (CX11880) layout-id 15 for Lenovo ThinkPad E590 by MacPeet</li><li>Added ALC1220 layout-id 29 for Z390 Aorus Ultra - Output SP/HP SwitchMode by MacPeet</li><li>Added Conexant CX8200 layout-id 15 for HP ZbooK 15UG4 by MacPeet</li><li>Update AD1984 layout-id 11 by MacPeet</li><li>Added ALC663 layout-id 15 for Fujitsu Celsius r670 by MacPeet</li><li>Added ALC700 layout-id 11 for NUC HC</li><li>Added AMD Vega-M HDMI</li><li>Added ALC235 layout-id 12 for Lenovo Rescuer 15ISK by Z39</li><li>Added ALC235 layout-id 21 for Lenovo C530 Desktop PC by Andres ZeroCross</li><li>Added ALC256 layout-id 22 for Asus VivoBook Pro 17 N705UDR by Andres ZeroCross</li><li>Added ALC255(3234) layout-id 11 for dell optiplex by Heporis</li><li>Added ALC256 layout-id 14 for Dell Series with Subwoofer courtesy of @insanelydeepak</li><li>Update ALC892 layout-id 97 by gitawake</li><li>Update ALC298 layout-id 66 for MECHREVO S1 by lgs3137</li><li>Added ALCS1220A layout-id 11 for Asus Z270-G (based on Mirone’s layout 7) by Kushamot </li></ul><h4 id="v1-3-8-1"><a href="#v1-3-8-1" class="headerlink" title="v1.3.8"></a>v1.3.8</h4><ul><li>Fixed rare random audio init failure on 10.14</li><li>Added ALC255 (3246) layout-id 100 for alienware alpha r2 by DalianSky</li><li>Added ALC262 layout-id 7 for MS-7480N1 by DalianSky</li><li>Added ALC236 layout-id 54 for DELL-5488 by Daggeryu</li><li>Added ALC280 layout-id 16 for Optiplex 9020SFF by cowpod</li><li>Added ALC1220 layout-id 34 for MSI P65 Creator Laptop by CleverCoder</li><li>Added ALC892 layout-id 97 for Hasee K770e i7 D1 (P170sm-a) by gitawake</li><li>Fix Typo/Update Pinconfig ALC294 layout21 by Andres and Add HDAController patch for WhiskeyLake Notebook</li><li>Update PathMap for ALC298 layout-id 99 for XiaoMi-Pro</li><li>Added ALC892 layout-id 17 for MSI B150M MORTAR - SwitchMode by MacPeet</li><li>Added ALC892 layout-id 18 for MSI B150M MORTAR - ManualMode by MacPeet</li><li>Added ALC1220 layout-id 28 for Z390 Aorus Ultra - Output SP/HP Manualmode by MacPeet</li><li>Added VT1802 layout-id 65 for hasee K650D by ivothgle</li><li>Added ALCS1220A layout-id 20 and 21 for Asus ROG STRIX Z370-F Gaming by RodionS &amp; Nacho</li><li>Added ALC270 layout-id 21 for Asus A46CB-WX024D Laptop by Andres ZeroCross</li></ul><h4 id="v-1-3-7"><a href="#v-1-3-7" class="headerlink" title="v.1.3.7"></a>v.1.3.7</h4><ul><li>VT2020_2021 anticlick patches by chrome</li><li>VT1802 anticlick patches by chrome</li><li>VT1705 anticlick patches by chrome</li><li>AD2000B anticlick patches by chrome</li><li>AD1988B anticlick patches by chrome</li><li>CA0132 added sоme anticlick patches by chrome</li><li>STAC9200 10.14.4 compatible anticlick patch by chrome</li><li>ALCS1200A 10.14.4 compatible anticlick patch by chrome</li><li>ALC891 10.14.4 compatible anticlick patch by chrome</li><li>ALC1150 10.14.4 compatible anticlick patch by chrome</li><li>Update resources for ALC298 layout-id 99 for XiaoMi Pro by stevezhengshiqi</li><li>Added ALC235 layout-id 16 for ASUS GL553VD by MacPeet  </li><li>Added ALC256 layout-id 57 for huawei honor magic book by ROSstudy</li></ul><h4 id="v1-3-6-1"><a href="#v1-3-6-1" class="headerlink" title="v1.3.6"></a>v1.3.6</h4><ul><li>Update Revision 0x100001 for CX20751/2 (Toshiba Kira 107)</li><li>Added ALC255 layout-id 15 for Gigabyte Brix BRi5(H), BRi7(H)] by najdanovicivan</li><li>Added ALC295/ALC3254 for Dell Latitude 5290 by Unbelievable9</li><li>Fix ALC1220 audio after sleep</li><li>Added ALC1220 layout-id 27 for Gigabyte-Z370-HD3P by lostwolf</li><li>Added ALC299 layout-id 22 for Dell XPS 13 by andreszerocross</li><li>Added ALC887-VD layout-id 87 for GA-Z97-HD3 ver2.1 by varrtix</li><li>Update resources for ALC236 layout-id 18 by xiaoMGitHub</li><li>Added CX20753/4 layout-id 15 for Lenovo Thinkpad E580 by MacPeet</li><li>Added CX20753/4 layout-id 14 by InsanelyDeepak</li><li>Change ALC887 layout-id 52 for Asus PRIME Z270-P by ctich</li><li>Added ALC887 layout-id 53 for Asus PRIME Z270-P by ctich</li></ul><h4 id="v1-3-5-1"><a href="#v1-3-5-1" class="headerlink" title="v1.3.5"></a>v1.3.5</h4><ul><li>Added AD1988A layout-id 12 by chrome</li><li>Added ALC282 layout-id 41/43/51 for Lenovo Y410P/Y430P/Y510P by yunsur</li><li>Added CX8400 layout-id 12 for Elitebook 1050 G1 by tyufhl &amp; kuque</li><li>Added ALC269VC layout-id 55 for Thinkpad X230 with Dock4338</li><li>Added ALC235 layout-id 15 for ASUS FX53VD by qiuchenly</li><li>Added Chinese readme</li><li>Added ALC255 layout-id 31 for ASUS UX360CA by cowpod</li><li>Added ALC269VC layout-id 188 for Lenovo Y500 by BaoStorm</li><li>Update audio layouts with fixes ALC887, ALC892, ALC1220, ALCS1220A and ALC1150 by toleda</li><li>Added ALC889 layout-id 2, 3 by toleda</li><li>Added ALCS1200A layout-id 1, 2, 3 by toleda</li><li>Added ALC256 layout-id 5  by chrome</li><li>Fix headphone input in ALC255 layout-id 99 for XiaoMI Air by ourfor</li><li>Added ALC285 layout-id 21 by andreszerocross</li><li>Added ALC298 layout-id 22 by andreszerocross</li><li>Added ALC299 layout-id 21 by andreszerocross</li><li>Added CX20753 layout-id 21 by andreszerocross</li><li>Added ALC233 layout-id 21 by andreszerocross</li><li>Added IDT 92HD73C1X5 layout-id 21 by andreszerocross</li><li>Added ALC294 layout-id 21 by andreszerocross</li><li>Added ALC256 layout-id 21 by andreszerocross</li><li>Added CX8200 layout-id 21 by andreszerocross</li><li>Added CX20751/2 layout-id 21 by andreszerocross</li><li>Added ALC286 layout-id 11 for Lenovo Yoga3 pro by gdllzkusi</li><li>Added ALC236 layout-id 18 for LEGION Y7000/Y530 by xiaoMGitHub</li><li>Fixed ALC256 layout-id 56 by daliansky</li><li>Added 10.14.4 compatible anticlick patch by chrome</li><li>Added CX20757 layout-id 28 for Lenovo G510 by Z39</li><li>Simplified analog codec code to permit special locations like VMware or AMD</li><li>Added patches for AMD Zen controllers (0x1457, 0x15E3) thx Ydeng and AlGreyy</li><li>Added ALC898 layout-id 66 for Clevo P750DM2-G by chrome</li><li>Added ALC283 layout-id 15 for LENOVO IDEAPAD 14 by MacPeet</li><li>Added ALC671 layout-id 15 for Fujitsu  Esprimo C720 by MacPeet</li><li>Added ALC221 layout-id 15 for HP ELITE DESK 800 G1 by MacPeet</li><li>Added ALC269 layout-id 21 for Dell OptiPlex 7010 by Goldfish64</li></ul><h4 id="v1-3-4-1"><a href="#v1-3-4-1" class="headerlink" title="v1.3.4"></a>v1.3.4</h4><ul><li>Disabled AppleGFXHDA matching onto HDEF to force AppleHDA usage</li><li>Added Wern Apfel’s menubar patch for CX20590</li><li>Added ALC255 layout-id 21 for Asus X441UA-WX096D by Andres ZeroCross</li><li>Added ALC255 layout-id 21 for Asus VivoBook Pro 15 CX8150 by Andres ZeroCross</li><li>Added ability to disable controller injection with property <code>no-controller-inject</code></li><li>Added SigmaTel STAC9200 layout-id 11 for Dell Precision 390 by Goldfish64</li><li>Added support for HDMI Audio of Alienware Alpha GTX860M</li><li>Added ALC1220 layout-id 15 for MSI WT75 Laptop by fleaplus.</li><li>Fix ConfigData in  ALC256 (3246) for Dell Series by Insanelydeepak</li><li>Added ALC298 layout-id 21 for Lenovo 720S-15IKB by Andres ZeroCross</li><li>Added ALC236 layout-id 99 for Lenovo Air 13 IWL by DalianSky</li><li>Fix speaker volume slider CX8050</li><li>Enable NVIDIA HDMI patches for laptop GPUs</li><li>Added ALC280 layout-id 21 for Dell Precision ﻿T7610 ﻿Workstation by Andres ZeroCross</li><li>Added ALC295 layout-id 21 for Acer Nitro 5 Spin (NP515-51) by Andres ZeroCross</li><li>Added VIA VT1705 layout-id 21 for ECS H81H3-M4 (1.0A) by Andres ZeroCross</li><li>Added ALC269 layoutid=88 for MECHREVO X8Ti Plus by DalianSky</li><li>Added ALC662 layout-id 17 for HP Compaq Elite 8000 SFF by aloha_cn</li><li>Added ALC288 layout-id 23 for Dell XPS 9343 by yyfn</li><li>Added ALC892 layout-id 16 for MSI GL73-8RD by MacPeet</li><li>Change CX20585 layout-id 13 resources</li><li>Added ALC887 layout-id 52 for Asus PRIME Z270-P by ctich</li><li>Added AD1984A layout-id 44 by Giesteira</li><li>Added ALC269 layout-id 44 for Samsung _NP350V5C by Giesteira</li><li>Added ALC269 layout-id 17 by MacPeet</li><li>Added ALC1220 layout-id 16 for Gigabyte Z390 by MacPeet</li></ul><h4 id="v1-3-3-1"><a href="#v1-3-3-1" class="headerlink" title="v1.3.3"></a>v1.3.3</h4><ul><li>Added ability to disable controller patching by injecting property ‘no-controller-patch’ (for use of FakePCIID_Intel_HDMI_Audio)</li><li>Fixed volume control for CX8200 with Wern Apfel patch from CX20724</li><li>Fixed patches for IDT92HD872_4 (IDT 76d9)</li><li>Added ALC235 layout-id 14 for Lenovo Y520/Y720 series by the-braveknight</li><li>Added ALC230 layout-id 20 for Lenovo Ideapad 320 by maiconjs</li><li>Added ALC887-VD AD0 layout-id 20 for Asus Z97M-PLUS/BR by maiconjs</li><li>Added ALC887-VD layout-id 40 for Asus B85-ME by maiconjs</li><li>Added ALC236 layout-id 16 for Lenovo Ideapad 320s 14ikb by RodionS</li><li>Added ALC885 layout-id 15 for GA-G33M-DS2R by MacPeet</li><li>Added ALC662 layout-id 15 for Acer Aspire A7600U All in One by MacPeet</li><li>Added ALC255 layout-id 30 for XiaoMi Notebook Air by HongyuS</li><li>Added CX20590 layout-id 13 and 14 for Lenovo T420 by tluck</li><li>Added ALC283 layout-id 44 for ThinkCentre M93z 10AF ALC283 by giesteira</li><li>Added ALC662v3 layout-id 16 for Lenovo ThinkCentre M92P SFF by phucnguyen.2411</li><li>Added ALC282 layout-id 22 for Lenovo Y430P  by lovert</li><li>Fixed CX20756 layout-id 13</li><li>Added ALC892 layout-id 15 for MSi Z97S SLI Krait Edition by MacPeet</li><li>Fix volume control for CX20756 layout-id 13 and external mic minor changes/fixes</li></ul><h4 id="v1-3-2-1"><a href="#v1-3-2-1" class="headerlink" title="v1.3.2"></a>v1.3.2</h4><ul><li>Added ALC269 layout-id 45 for Asus A45A and K45 by maiconjs (Wolfield)</li><li>Added WakeConfigData for ALC892 layout-id 1 by FredWst</li><li>Added ALC295 layout-id 14 for Asus UX430UA by InsanelyDeepak</li><li>Added ALC295 layout-id 15 for ALC295/ALC3254 by InsanelyDeepak</li><li>Remove duplicate resources for ALC295 layout-id 12 on Asus UX430</li><li>Added ALC230 layout-id 13 for Lenovo 310-14ISK by Andres</li></ul><h4 id="v1-3-1-1"><a href="#v1-3-1-1" class="headerlink" title="v1.3.1"></a>v1.3.1</h4><ul><li>Fixed incorrect unused HDAU termination</li><li>Fixed pinconfig refresh causing random init failures</li><li>Added ALC225/ALC3253 layout-id 30 for Dell Inspiron 17-7779 by Constanta</li><li>Added ALC295 layout-id 12 for Asus UX430 by hieplpvip</li><li>Added Realtek ALC256 (3246) layout-id 11 for dell 7559 by Rockjesus</li><li>Added ALC887 layout-id 50 for Asus PRIME B250-PLUS by 0th3r</li><li>Added ALC295 layout-id 1 for HP Envy x360 15-bp107tx by Damon</li></ul><h4 id="v1-3-0-1"><a href="#v1-3-0-1" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Requires Lilu 1.2.5 and higher and enabled on 10.14 by default</li><li>Added digital audio property injection for AMD, Intel, NVIDIA</li><li>Added NVIDIA multi-gpu NVIDIA HDAU patch support</li><li>Added ALC269VC layout-id 30 for Hasee Z6SL7R3 by HF</li></ul><h4 id="v1-2-8-1"><a href="#v1-2-8-1" class="headerlink" title="v1.2.8"></a>v1.2.8</h4><ul><li>Added basic 10.14 compatibility via masking real <code>layout-id</code></li><li>AppleALC selected <code>layout-id</code> is now shown as <code>alc-layout-id</code> in ioreg</li><li>Overriden <code>layout-id</code> can be passed as<code>apple-layout-id</code> (<code>alcaaplid=X</code>)</li><li>Added ALC298 layout-id 66 for MECHREVO S1 by lgs3137</li><li>Added ALC298 revision-id 0x100101 support</li><li>Added ALC892 layout-id 12 for MSI GP70/CR70 by Slava77</li><li>Added ALC257 layout-id 11 for Lenovo T480 by MacPeet</li><li>Added ALC294 layout-id 12 for Lenovo M710Q by MacPeet</li><li>Added ALC298 layout-id 30 for Xiaomi Mi Notebook Air 13.3 by Constanta</li></ul><h4 id="v1-2-7-1"><a href="#v1-2-7-1" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Added NVIDIA HDMI patch for GP107 and GP108 for 10.13.4+</li><li>Added NVIDIA HDMI patch for GP104 for 10.13.4+</li><li>Added ALC898 layout-id 98 for MSI GE62 7RE Apache Pro by spectra</li><li>Added ALC1220 layout-id 13 for Clevo P950HR by MacPeet</li><li>Added ALC888 layout-id 27 for Acer Aspire 7738G by MacPeet</li><li>Added 300 Series PCH HD Audio Controller patch by chrome</li><li>Added ALC269 layout-id 66 for Clevo N155RD by DalianSky</li><li>Added ALC285 layout-id 11 for Lenovo ThinkPad X1C6th by Rover</li><li>Added ALC294 layout-id 11 for Asus FL8000U by Rover</li><li>Added ALC269 layout-id 58 for HASEE Z6-i78154S2 by lianny</li><li>Added ALC233 layout-id 32 for ASUS VIVOBOOK S301LA by MacPeet</li></ul><h4 id="v1-2-6-1"><a href="#v1-2-6-1" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Fixed a rare kernel panic due to use-after-free in verb code at waking from sleep</li></ul><h4 id="v1-2-5-1"><a href="#v1-2-5-1" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Implemented verb execution after wake (via <code>WakeVerbReinit</code> in PinConfigs), obsoletes CodecCommander in fixed resources</li><li>Implemented custom verbs for wake  (via <code>WakeConfigData</code> in PinConfigs), <code>ConfigData</code> is used by default</li><li>Merged PinConfigs into AppleALC main binary by default for compatibility reasons</li><li>Hardened solved symbol verification to avoid panics with broken kext cache</li><li>Added PinConfigurations injection, since they provide useful debugging info</li><li>Added NVIDIA HDMI patch for GM204 for 10.13.4+</li><li>Added ALC233 layout-id 33 for ASUS VIVOBOOK S451LA by MacPeet</li><li>Added HD3000 desktop and laptop HDMI patches</li><li>Added wake verbs for ALCS1220A layout-id 1, 2, 5, 7 to avoid the need of CodecCommander</li><li>Added EAPD wake verbs to all ALC 221, 225, 233, 235, 236, 255, 256, 270, 271, 272, 284, 286, 288, 290, 293, 295 by Vandroiy</li><li>Added EAPD wake verbs to some ALC 269, 275, 280, 282, 283, 292, 294, 298, 662, 663, 668, 887, 888, 889, 892, 898, 1150 by Vandroiy</li><li>Fixed broken AFGLowPowerState, LayouID and other fields in several PinConfigs info.plist</li><li>Fixed rare kernel panics due to short incompatible HDEF controller patches affecting other code</li></ul><h4 id="v1-2-4-1"><a href="#v1-2-4-1" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>Added ALC269 layout-id 10 (toleda) for Brix by ttimasdf</li><li>Added ALC663 layout-id 99 for ASUS N71J by alex1960</li><li>Added CX20641 layout-id 11 and layout-id 13 for Dell OptiPlex 3010 or compatible by MacPeet</li><li>Added CX20642 layout-id 11 and layout-id 13 for Fujitsu ESPRIMO E910 E90+ or compatible by MacPeet</li><li>Added NVIDIA HDMI patches for GK208, GM206, GP102, GP106 for 10.13.4+ by FredWst</li><li>Added Intel HDMI patches for Haswell 0x0A260005  by Andrey1970</li><li>Added NVIDIA HDMI patch for GM200 by al3xtjames</li></ul><h4 id="v1-2-3-1"><a href="#v1-2-3-1" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Added <code>alcid=layout</code> boot argument for testing purposes</li><li>Added automatic rename for HDEF device</li><li>Added ALC255 layout-id 18 for Aorus X5V7 by DuNe</li><li>Change Platforms18.xml.zlib for ALC255 by DuNe</li><li>Added ALC898 layout-id 101 by Andrey1970 (4 Line Out)</li><li>Added ALC262 layout-id 28 for HP Z800-Z600 series by MacPeet</li><li>Added ALC225 layout-id 33 by ChalesYu</li><li>Added ALC282 layout-id 127 No input boost Acer Aspire on IvyBridge by Andrey1970</li><li>Added ALC294 layout-id 13 by InsanelyDeepak</li><li>Added IDT92HD91BXX layout-id 13 for HP Envy 6 1171-SG by MacPeet</li></ul><h4 id="v1-2-2-1"><a href="#v1-2-2-1" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>Added ALC256 layout-id 56 for Dell 7000 by DalianSky</li><li>Added ALC298 layout-id 47 for ThinkPad T470P by DalianSky</li><li>Update ALC269 layout27.xml.zlib by Andrey1970</li><li>Added ALC269 layout-id 93, 99 and 127 by Andrey1970 (No input boost - no noise in Siri)</li><li>Added ALC671 layout-id 12 for Fujitsu-Siemens D3433-S (Q170 chip) by MacPeet</li><li>Added ALC280 layout-id 13 and 15 for DELL T20 by MacPeet</li><li>Added ALC262 layout-id 13 for Fujitsu Celsius H270 by MacPeet</li><li>Added ALC891 layout-id 11 for HP Pavilion Power 580-030ng by MacPeet</li><li>Added ALC282 layout-id 76 for Hasee K580C by YM2008</li><li>Fix desktop HD4000 id by Andrey1970</li><li>Added IDT92HD91BXX layout-id 84 for HP Elitebook 840 G1 by macish</li><li>Added ALC295 layout-id 13 for Dell7570 by DalianSky</li><li>Added ALC298 layout-id 99 for XiaoMIPro by DalianSky</li><li>Added ALC283 layout-id 1 for NUC/BRIX by Toleda</li><li>Added ALC255 (3246) layout-id 99 for XiaoMi Air by DalianSky</li><li>Added ALC236 layout-id 15 for Lenovo Ideapad 500-15ISK by MacPeet</li><li>Added ALC892 layout-id 98 with working SPDIF</li></ul><h4 id="v1-2-1-1"><a href="#v1-2-1-1" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>Added ALC298 layout-id 11 for Alienware 17 (ALC3266) by Rockjesus</li><li>Added VIA VT2020/2021 layout-id 9 by SonicBSV</li><li>Added ALC269 layout-id 18 for Thinkpad X230 by Hypereitan</li><li>Added ALC235 layout-id 28 for Lenovo Legion Y520 by vusun123</li><li>Added ALC898 layout-id 65 for CLEVO P65xRS(-G) by datasone</li><li>Added ALC298 layout-id 29 for Lenovo X270 by vusun123</li><li>Added ALC292 layout-id 18 for Dell Precision M4800/M6800 by vanquybn</li><li>Added IDT92HD87B1/3 layout-id 13 by InsanelyDeepak</li></ul><h4 id="v1-2-0-1"><a href="#v1-2-0-1" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Requires Lilu 1.2.0 and higher</li><li>Added Lilu 1.2.0 safe mode loading compatibility</li><li>Added Intel Broadwell HD6000 HDMI audio support (ig-platform-id 0x16260004)</li><li>Added ALC262 layout-id 12 for HP Compaq dc7700 SFF by Goldfish64</li><li>Added Intel 200 Series Mobile HDA controller 0xA171 support</li><li>Added IDT92HD81B1C5 layout-id 11 for Dell Latitude E6410 by Goldfish64</li><li>Added ALC898 layout-id 99 for MSI GP62 Leopard Pro by edward-p</li><li>Correct issues with layout 11 for IDT92HD81B1C5 for Dell Latitude E6410</li><li>Added ALC221 layout-id 11 for HP Compaq Pro 4300/Pro 6300/Elite 8300 by Goldfish64</li><li>Added ALC892 layout-id 31 for Clevo P65xSE/SA by Derek Zhu</li><li>Added Conexant CX20585 layout-id 13 for Toshiba L755-16R by Constanta</li><li>Added ALC889 layout-id 11 for Medion P4020 D by MacPeet</li><li>Update ConfigData for ALC898 layout-id 99</li><li>Update ALC269 layout-id 16 by MacPeet</li></ul><h4 id="v1-1-4-2"><a href="#v1-1-4-2" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Added High Sierra to the list of compatible OS</li><li>Added ALC295/ALC3254 layout-id 3 by Mirone</li><li>Added ALC298 layout-id 72 for Dell XPS 9560 by KNNSpeed</li><li>Added ALC236 layout-id 3 by Mirone</li><li>Added ALC236 layout-id 13 for Lenovo Air 13 Pro by rexx0520</li><li>Added a workaround for xnu printf limitations</li><li>Added ALC235 layout-id 11 for Ienovo by soto2080</li><li>Disabled redundant warnings for non-debug mode by PMheart</li><li>Added AMD R9 290X HDMI patches</li><li>Fix ALC236 layout 13’s Headphone amplification</li><li>Added ALC260 layout-id 11 for Fujitsu Celsius M 450 by MacPeet</li><li>Added AD1984A layout-id 13 for Dell Optiplex760/780 by MacPeet</li><li>Added ALC269VB layout-id 16 for Dell Optiplex 790 by MacPeet</li></ul><h4 id="v1-1-3-2"><a href="#v1-1-3-2" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Fixed ALC889 info.plist min/max kernel</li><li>Added Desktop Intel Kaby Lake HD630 HDMI audio support (ig-platform-id 0x59120000)</li><li>Added Conexant CX20756 layout-id 13 by InsanelyDeepak</li><li>Added ALC282 layout-id 13 by InsanelyDeepak</li><li>Fixed separate layout/platform injection</li><li>Added AppleHDA8086_9D70Controller for 10.13</li><li>Changed ALC255 layout-id 13 &amp; 17 by InsanelyDeepak</li><li>Fixed typo in ALC255 CodecID</li><li>Fixed audio reenable after kextunload/kextload AppleHDA</li><li>Added <code>-alcdhost</code> argument to enable custom audio drivers in 10.12+ (e.g. Audirvana)</li><li>Added ALC255 layout-id 27 for Asus X556UA m-dudarev</li></ul><h4 id="v1-1-2-1"><a href="#v1-1-2-1" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Added ALC225 layout-id 28 for Dell Inspirion 7579 by ChalesYu</li><li>Added ALC298 layout-id 28 for Dell XPS 9x50 by vusun123</li><li>Changed ALC290 layout-id 28 resources Mic &amp; Line In Fix by vusun123</li><li>Added VIA VT1802 layout-id 33 for asus S400CA by ChalesYu</li><li>Added IDT92HD91BXX layout-id 33 for HP Envy by jl4c </li><li>Added ALCS1220A layout-id 1, 2 for ASUS 200 series by Toleda</li><li>Added ALC1220 layout-id 1, 2 for 200 series by Toleda</li><li>Added ALC662 layout-id 12 for Lenovo ThinkCentre M800 by stich86 </li><li>Added ALC892 layout-id 28 for Clevo P751DMG by crysehillmes</li><li>Added ALC269VC layout-id 40 for Lenovo W530 by vusun123</li><li>Added ALC280 (ALC3220) layout-id 11 for Alienware alpha (ONLY SPDIF) by ganxiao</li><li>Added ALC662 layout-id 13 by Vandroiy for Asus X66Ic, Asus K61Ic, Asus K70Ic</li><li>Added SPDIF support to ALC887 layout-id 99</li><li>Added Conexant CX20590 revision-id 0x100000</li><li>Added revision-id 0x100002 in ALC670 info.plist</li><li>Added ALC288 layout-id 13 for Dell XPS 9343 by InsanelyDeepak</li><li>Added ALC286 revision-id 0x100003</li><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v1-1-1-2"><a href="#v1-1-1-2" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Requires Lilu 1.1.0 or newer</li><li>Fixed IDT92HD71B7X macOS 10.12 compatibility issue</li><li>Added IDT92HD91BXX revision-id 0x100303</li><li>Added CX20722 menubar patch for 10.10 and above by Wern Apfel</li><li>Added CX20724 menubar patch for 10.10 and above by Wern Apfel</li><li>Added CX20751/2 menubar patch for 10.10 and above by Wern Apfel</li><li>Updated ALC269VB layout-id 11 for Dell Precision Workstation T1600 by Mosser</li><li>Added ALC1220 layout-id 5 and 7 by Mirone</li><li>Added ALCS1220A layout-id 5 and 7 by Mirone</li><li>Increased replacement count for several SKL hdmi patches to workaround matching sequence issues by Andrey1970</li><li>Update Intel HD4000 HDMI patches for 0x01660009 and 0x0166000A by Andrey1970</li><li>Implemented simple byte sequence deduplication to reduce kext size</li><li>Update pinconfig for ALC1220 layout-id 11 by truesoldier</li><li>Added IDT92HD71B7 menubar patch for 10.10 and above by Wern Apfel</li><li>Added IDT92HD91BXX ambient noise reduction to layout-id 12</li><li>Added ALC887 revision-id 0x100202</li><li>Changed ALC255 layout-id 3 resources by Mirone. It should fix kernel task loading issue</li><li>Added CA0132 layout-ids 0-6 by Wern Apfel </li><li>Fix CX20756 typo in layout3.xml.zlib</li></ul><h4 id="v1-1-0-2"><a href="#v1-1-0-2" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>AppleALC now has its kernel patcher moved to <a href="https://github.com/vit9696/Lilu" target="_blank" rel="noopener external nofollow noreferrer">Lilu.kext</a></li><li>Added Intel 200 Series Audio controller support by chrome</li><li>Fixed typo in PinConfigs.kext for ALC233 layout-id 29</li><li>Added 10.8 support to ALC282</li><li>Added ALC286 layout-id 3 initial support by Mirone</li><li>Added ALC888S-VD layout-id 29 for MedionP8610 by MacPeet</li><li>Added IDT 92HD73C1X5 layout-id 19 for Dell Studio 1535 by chunnann</li><li>Added ALC269 layout-id 19 for Asus Vivobook S300CA by chunnann</li><li>Added ALC283 layout-id 66 for ASRock DeskMini 110(H110M-STX) by licheedev</li><li>Optimize and compress ALC283 resources from previous commit</li><li>Added ALC256 layout-id 28 for Asus X555UJ by vusun123</li><li>Added Realtek ALC1220 initial support layout-id 11 by truesoldier</li><li>Update PinConfig for ALC1220 by truesoldier</li></ul><h4 id="v1-0-19"><a href="#v1-0-19" class="headerlink" title="v1.0.19"></a>v1.0.19</h4><ul><li>Added ALC269 layout-id 35 for Samsung NP350V5C-S0URU by Mirone</li><li>Added Conexant CX20755 layout-id 3 by Mirone</li><li>Added ALC269VB layout-id 76 for ENZ C16B by jimmy19990</li><li>Added UserPatches.plist for internal testing</li><li>Added ALC269VB layout-id 11 for Dell Precision Workstation T1600 by Mosser</li><li>Recovered Creative CA0132 macOS 10.12 patch due to caused issues</li><li>Maximised zlib resource compression level</li><li>Added stripping of tabs and new lines in resources</li><li>Added ALC236 layout-id 11 Initial support by Jake Lo (forum.osxlatitude)</li><li>Added ALC269VC layout-id 14 for Samsung NT550P7C-S65 with subwoofer 2.1ch by Rockjesus</li><li>Added Laptop Intel Skylake HD530 HDMI audio support (ig-platform-id 0x191B0000)</li><li>Added revision-id 0x100001 into ALC236 info.plist </li><li>Added ALC293 codec support layout-id 28, 29 for Lenovo T460/T560 by tluck</li><li>Added Conexant CX20751_2 HDMI/DisplayPort Output fix by syscl</li><li>Added ALC282 layout-id 29 for Dell Inspirion 3521 by Generation88</li><li>Added ALC293 layout-id 11 for Dell E7450 by Andres ZeroCross </li><li>Update PinConfig data for ALC269 layout-id 27 by Andrey1970</li><li>Added ALC3236 (ALC233) layout-id 29 for Asus X550LDV by Mirone</li><li>Added Conexant CX20722 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20753/4 codec support layout-id 3 by Mirone</li><li>Added Conexant CX8050 codec support layout-id 3 by Mirone</li><li>Added Conexant CX8200 codec support layout-id 3 by Mirone</li><li>Added revision-id 0x100103 for ALC885</li><li>Added ALC269VB layout-id 15 for Dell Optiplex 790 by MacPeet</li><li>Allowed building for 10.8 without using 10.8 SDK</li></ul><h4 id="v1-0-18"><a href="#v1-0-18" class="headerlink" title="v1.0.18"></a>v1.0.18</h4><ul><li>Improved operating system detection</li><li>Decent workaround for 10.12 issues and panics</li><li>Added ALC888S-VD layout-it 11 and 28 for Medion P9614 and E7216 by MacPeet</li><li>Added initial support AD1984 layout-id 11 for IBM_Lenovo_ThinkPad_T61 by MacPeet</li><li>Added ALC272 layout-id 11 for Lenovo B470 by Sam Chen</li><li>Added Laptop Intel Broadwell HD5500/5600 HDMI audio support (ig-platform-id 0x16260006)</li><li>Added Laptop Intel Skylake HD515/520/530 HDMI audio support (ig-platform-id 0x191E0000, 0x19160000)</li><li>Added Desktop Intel Skylake HD530 HDMI audio support (ig-platform-id 0x19120000)</li><li>Fixed Creative CA0132 macOS 10.12 compatibility issue</li><li>Added ALC892 layout-id 92 for GA-Z87-HD3 by BIM167</li><li>Added ALC295 codec support layout-id 28 for Skylake HP Pavilion by vusun123</li><li>Added IDT92HD81B1X5 layout-id 20 and 21 by Sergey_Galan for HP ProBook 4520s and HP DV6-6169er</li><li>Added IDT92HD81B1X5 layout-id 28 by Gujiangjiang for HP Pavilion g4 1000 series</li></ul><h4 id="v1-0-17"><a href="#v1-0-17" class="headerlink" title="v1.0.17"></a>v1.0.17</h4><ul><li>Added C610/X99 Audio Controller r1 support by masking to 8ca0</li><li>Added C610/X99 Audio Controller r2 support by masking to 8ca0</li><li>Disabled Z97 controller patching on 10.10 and newer because it is supported by default</li><li>Fixed ALC272 macOS 10.12 compatibility issue</li><li>Fixed ALC885 and ALC888 macOS 10.12 compatibility issue</li><li>Added ALC888 revision-id 100302</li><li>Fixed CX20585 macOS 10.12 compatibility issue</li><li>Fixed CX20588, CX20590 and CX20724 macOS 10.12 compatibility issue</li><li>Fixed CX20757 macOS 10.12 compatibility issue</li><li>Fixed rest of Conexant codecs for macOS 10.12 compatibility</li><li>Added missing zero patch in IDT 92HD81B1X5 info.plist</li><li>Added ALC892 layout-id 99 for DNS P150EM by Constanta</li><li>Added ALC898 layout-id 5 and 7 by Mirone</li><li>Changed logging to be done by IOLog since printf is broken on 10.12</li><li>Added ALC3236 layout-id 28 for Asus TP500LN by Mohamed Khairy</li><li>Fixed ALC235, ALC260, ALC280, ALC284, ALC288, ALC290, ALC292 macOS 10.12 compatibility issue</li><li>Added ALC233 layout-id 27 for SONY VAIO Fit 14E(SVF14316SCW) by SquallATF</li><li>Fixed all Conexant codecs macOS 10.12 compatibility issue</li><li>Added IDT 92HD81B1X5 layout-id 11 by Andres ZeroCross</li><li>Added ALC887 layout-id 33 for GA-Q87TN by klblk</li><li>Added ALC256 (3246) codec support layout-id 13 by InsanelyDeepak</li><li>Added ALC255 layout-id 13 and 17 by InsanelyDeepak</li><li>Fixed an extremely rare crash on 10.12</li></ul><h4 id="v1-0-16"><a href="#v1-0-16" class="headerlink" title="v1.0.16"></a>v1.0.16</h4><ul><li>Fixed a rare lock acquisition issue on 10.12</li><li>Fixed a rare kernel panic on initialisation failure</li><li>Improved ALC887 layout-id 11, 13 by InsanelyDeepak</li><li>Added ALC269VC layout-id 33 for NP530U3C-A0F by BblDE3HAP</li><li>Added ALC898 layout-id 12 with autodetect disabled by D-an-W</li><li>Deleted not working ALC233 layout-id 12</li><li>Added ALC233 layout-id 13 for Asus X550LC by InsanelyDeepak</li><li>Added ALC662 layout-id 11 for Lenovo ThinkCentre M8400t-N000 by Irving23</li><li>Fixed ALC255 macOS 10.12 compatibility issue</li><li>Changed ALC898 layout-id 12 to 28 due to compatibility issue</li><li>Fixed ALC275 macOS 10.12 compatibility issue</li><li>Added ALC255 layout-id 28 for Lenovo B470 by vusun123</li><li>Added Atom Z36xxx/Z37xxx Audio Controller support by masking to 0c0c</li></ul><h4 id="v1-0-15"><a href="#v1-0-15" class="headerlink" title="v1.0.15"></a>v1.0.15</h4><ul><li>Added macOS 10.12 to the list of supported systems</li><li>Added ALC262 codec support layout-id 11 by MacPeet</li><li>Added ALC898 layout-id 13 for MSI GS40 by InsanelyDeepak</li><li>Added ALC887 layout-id 18 by InsanelyDeepak</li><li>Several optimisations to ALC887 resources by InsanelyDeepak</li><li>Removed not working ALC887 layout-id 12 by InsanelyDeepak</li><li>Added revision-id in IDT 92HD91BXX info.plist</li><li>Fixed an undefined behaviour when failing to perform an i/o operation</li><li>Guaranteed null termination for readFileToBuffer buffers</li></ul><h4 id="v1-0-14"><a href="#v1-0-14" class="headerlink" title="v1.0.14"></a>v1.0.14</h4><ul><li>Added ALC290 layout-id 28 for Dell Vostro 5480 by vusun123</li><li>Added ALC292 layout-id 28 for Lenovo T440 vusun123</li><li>Added a few more fixes to lock acquisition panic on 10.12 Beta</li><li>Fixed VT2020/2021 patches for 10.12 Beta by melxman</li><li>Fixed Creative CA0132 patches for 10.12 by nmano</li><li>Added revision-id 0x100002 for Conexant CX20590 </li><li>Added ALC233 layout-id 12 for Asus X550LC</li><li>Added revision-id into ALC233 info.plist</li><li>Added CX20590 layout-id 28 for Dell Vostro 3x60 by vusun123</li><li>Added IDT 92HD81B1X5 layout-id 12 for HP Elitebook 8460P by RehabMan</li><li>Added IDT 92HD81B1C5 codec support layout-id 3 by Mirone</li><li>Added ALC298 layout-id 3 with ComboJack by Mirone</li><li>Added ALC233/3236 layout-id 5 by Mirone</li><li>Added ALC1150 layout-id’s 1, 2, 3 by Toleda</li></ul><h4 id="v1-0-13"><a href="#v1-0-13" class="headerlink" title="v1.0.13"></a>v1.0.13</h4><ul><li>Improved workaround for 10.12 Beta issues</li><li>Fixed PAGE FAULT panic on 10.12 Beta</li><li>Added version information on boot</li><li>Added ALC898 layout-id 11 for MSI GT72S 6QF-065CN by Irving23</li><li>Added Conexant CX20724 layout-id 13 by InsanelyDeepak</li><li>Added Cirrus Logic CS4210 codec support layout-id 13 by InsanelyDeepak</li><li>Added Realtek ALC275 layout-id 13 by InsanelyDeepak</li><li>Added Realtek ALC891 codec support layout-id 13 by InsanelyDeepak</li><li>Added IDT 92HD90BXX layout-id 12 for Dell Latitude E6x20/Dell Precision Mx600 by vusun123</li><li>Added ALC275 layout-id 28 for Sony Vaio by vusun123</li><li>Added ALC298 codec support layout-id 13 by InsanelyDeepak</li><li>Added AD1984A codec support layout-id 11 by MacPeet</li><li>Added revision-id into AD1984A info.plist</li><li>Fixed lock acquisition panic in iokit routins on 10.12 Beta</li><li>Removed ALC1150 layouts 1-3 to reduce kext size</li><li>Added ALC1150 layout 11 with boosted microphone (built on 7)</li></ul><h4 id="v1-0-12"><a href="#v1-0-12" class="headerlink" title="v1.0.12"></a>v1.0.12</h4><ul><li>Lowered minimal OS requirement to 10.8 for ALC269</li><li>Added ALC269 revision-id 0x100203 support</li><li>Workaround for booting in 10.12 Beta</li><li>Added a new version of null (8319D411) patch (now 8A19D411) for 10.12</li><li>ALC269 deleted unnecessary macOS Sierra patch</li><li>ALC887 added macOS Sierra patch</li><li>Added revision-id 0x100005 to ALC275</li><li>Added ALC271x layout-id 31 for Acer Aspire s3-951</li><li>Added IDT 92HD90BXX layout-id 3 by Mirone</li><li>Changed ALC233 layout-id 3 resources</li><li>ALC662 deleted unnecessary macOS Sierra patch</li><li>Added layout-id 9, 10 to CA0132 by Andres ZeroCross</li><li>Fixed MuteGPIO in ALC3236(ALC233) by nguyenlc1993</li><li>Disabled by default on unsupported operating systems (e.g. 10.12), use -alcbeta boot arg to override this</li><li>Added ALC269 layout-id 32 for Samsung np880z5e-x01ru by Constanta</li><li>Added CX20561 layout-id 3 by depingzheng</li><li>Changed CX20561 layout 3 -&gt; layout 11</li><li>Optimized CX20561 platforms11.xml.zlib</li></ul><h4 id="v1-0-11"><a href="#v1-0-11" class="headerlink" title="v1.0.11"></a>v1.0.11</h4><ul><li>Added ALC668 layout-id 29 for Asus N750JV by DroID969</li><li>ALC887VD Optimization Layout 11 officially will Support AC97 Front Panel like Windows Driver</li><li>ALC887VD Optimization Added Layout 11, 12, 13, 17</li><li>ALC887VD Optimization Layout 11 Front Mic and Back Mic Fix</li><li>ALC887VD Optimization Layout 12 LinIn Fix</li><li>ALC887VD Optimization Added AMD Support in all Layouts</li><li>ALC887VD Optimization replace several custom platforms.xml.zlib with common platformsID.xml.zlib</li><li>Added ALC233 layout-id 4 for ALC3236 codec </li><li>Added ALC290 layout-id 4 for ALC3241 codec</li><li>Added IDT92HD91BXX layout-id 12 by RehabMan for HP Envy laptops</li><li>Changed ALC665 resources by InsanelyDeepak </li><li>Added ALC269VC layout-id 13 for Samsung NP350V5C-S08IT by InsanelyDeepak</li><li>Changed ALC233 resources layout-id 4 for ALC3236 codec</li><li>Added ALC888 layout-id 4 for Laptop by Mirone</li><li>Added ALC892 layout-id 4 for Laptop by Mirone</li><li>Added ALC269VB layout-id 9 for Toshiba Satellite C660-1DR</li></ul><h4 id="v1-0-10-1"><a href="#v1-0-10-1" class="headerlink" title="v1.0.10"></a>v1.0.10</h4><ul><li>Added ALC665 codec support layout-id 12, 13 by insanelydeepak</li><li>Added ALC292 codec support layout-id 12</li><li>Added ALC283 layout-id 11 for Aspire V3-371 by Slbomber</li><li>Added IDT92HD75B3X5 layout-id 11 with a custom pinconfig by olderst</li><li>Prohibited kext unloading in policy mode since our policy is registered as static and cannot be unregistered</li><li>Bumped module versions to 10.8 to avoid accidental loading on 10.7</li><li>Added No-sleep, no-click patches into ALC892 info.plist</li><li>Added ALC670 codec support layout-id 12 by Alex Auditore</li><li>Added revision-id in ALC889 info.plist</li><li>Added ALC260 codec support layout-id 12</li><li>Added Creative CA0132 codec support layout-id 11 and 12</li><li>Added CirrusLogic CS4213 codec support layout-id 28 by insanelydeepak</li><li>Added revision 0x100202 into ALC888 info.plist</li><li>Changed not working layout12 and platforms12 for Creative CA0132</li></ul><h4 id="v1-0-9-1"><a href="#v1-0-9-1" class="headerlink" title="v1.0.9"></a>v1.0.9</h4><ul><li>Replace ALC888 patch 11d4198b-&gt;10ec0885 it prevents Sound Asserions on layout-id 1, 2, 3</li><li>Deleted unnecessary ALC888 patch 11d41983</li><li>Changed patch for Intel HD4600 HDMI (ig-platform-id 0x0d220003)</li><li>Changed ALC275 Resources</li><li>Deleted not working Intel HD4000 LVDS, HDMI (ig-platform-id 0x0166000A) Laptop only patch</li><li>Added Conexant CX20583 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20585 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20588 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20724 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20752 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20756 codec support layout-id 3 by Mirone</li><li>Added Conexant CX20757 codec support layout-id 3 by Mirone</li><li>Added NoSleep/NoClick pathes to Conexant CX20590 info.plist</li><li>Added ALC280 layout-id 4 Combo Jack Support by Mirone</li><li>Added ALC1150 support for OS X 10.8</li><li>Changed Comment lines for Toleda resources in 1150 info.plist</li><li>Added IDT92HD93BXX codec support layout-id 12</li></ul><h4 id="v1-0-8-1"><a href="#v1-0-8-1" class="headerlink" title="v1.0.8"></a>v1.0.8</h4><ul><li>Added ALC885 Toleda resources layout-id 1</li><li>Added ALC887 Toleda resources layout-id 1, 2, 3</li><li>Fix mistake in CX20751/2 info.plist and change layout-id to 28</li><li>Added ALC888 Toleda resources layout-id 1, 2, 3</li><li>Added ALC668 layout 20 for Asus G551JM </li><li>Added ALC275 layout-id 3 Mirone resources</li><li>Added ALC283 layout-id 3 Mirone resources</li><li>Added ALC284 layout-id 3 Mirone resources</li><li>Added ALC288 layout-id 3 Mirone resources</li><li>Added ALC290 layout-id 3 Mirone resources</li><li>Added IDT92HD66C3/65 layout-id 3 Mirone resources</li><li>Added IDT92HD71B7X layout-id 3 Mirone resources</li><li>Added IDT92HD75B2X5 layout-id 3 Mirone resources</li><li>Added IDT92HD75B3X5 layout-id 3 Mirone resources</li><li>Added IDT92HD99BXX layout-id 3 Mirone resources</li><li>Added IDT92HD87B1 layout-id 3 Mirone resources</li><li>Change IDT92HD81B1X5 to Mirone resources layout-id 3</li><li>Change IDT92HD91BXX  to Mirone resources layout-id 3</li><li>AppleALC should not abort loading if it fails to find some kext</li></ul><h4 id="v1-0-7-1"><a href="#v1-0-7-1" class="headerlink" title="v1.0.7"></a>v1.0.7</h4><ul><li>Added 0x100004 revision to ALC269</li><li>Added custom ALC269 resources for SONY VAIO VPCEB3M1R layout-id 20</li><li>Added custom ALC282 resources for Acer Aspire E1-572G layout-id 28</li><li>Added into ALC269 info.plist no-sleep, no-click, headphone detect patches</li><li>Added ALC282 resources for Acer Aspire on IvyBridge by Andrey1970 layout-id 27</li><li>Added Mirone resources to ALC892 thanks to cecekpawon</li><li>Added ALC668 resources for DELL Precision M3800 by Syscl</li><li>Allowed providing non-existent layouts</li><li>Added IDT92HD81B1X5 codec support layout-id 12 by RehabMan</li><li>Added IDT92HD87B1/3 codec support layout-id 12 by RehabMan</li><li>Added IDT92HD87B2/4 codec support layout-id 12 by RehabMan</li><li>Added IDT92HD91BXX codec support layout-id 12 by RehabMan</li><li>Added IDT92HD95 codec support layout-id 12 by RehabMan</li><li>Added Conexant CX20751/2 codec support layout-id 12 by RehabMan</li><li>Added ALC280 codec support layout-id 3 by Mirone</li><li>Fixed CX20590 platform12.xml.zlib &gt; platforms12.xml.zlib</li><li>Reduced kext size by optimizing every platforms.xml.zlib in Resources folder</li><li>Fixed codec-id in PinConfigs info.plist for IDT 92HD87B1/3 should be 287143633</li></ul><h4 id="v1-0-6-1"><a href="#v1-0-6-1" class="headerlink" title="v1.0.6"></a>v1.0.6</h4><ul><li>Reduced kext size by optimising capstone build options</li><li>Added Model key with possible Laptop/Desktop/Any values to Controllers.plist (matches IODT/comptaible)</li><li>Added VIA VT2020/2021 codec support layout-id 5, 7 Mirone resources</li><li>Added Z97 HDEF controller patch</li><li>Added Intel HD4000 HDMI support ig-platform-id 0x0166000A for Laptop and Desktop</li><li>Added ALC668 layout-id 28 (for Asus N750Jk int.mic and sub working)</li><li>Added ALC272 layout-id 3 Mirone resources</li><li>Added ALC1150 layout-id 3 (Toleda update)</li><li>Added missing data for ALC1150 resources</li><li>Added ALC233 codec support layout-id 3 Mirone resources</li><li>Added ALC235 codec support layout-id 3 Mirone resources</li><li>Added ALC255 codec support layout-id 3 Mirone resources</li><li>Added ALC268 codec support layout-id 3 Mirone resources</li><li>Fixed incorrect ALC282 codec-id (should be 642)</li></ul><h4 id="v1-0-5-1"><a href="#v1-0-5-1" class="headerlink" title="v1.0.5"></a>v1.0.5</h4><ul><li>Fixed AppleHDAController patching regression</li><li>Fixed incorrect ALC269 codec-id (should be 617)</li><li>Added embedded resource file deduplication reducing the size</li><li>Added ALC887-VD, layout-id 11-15 codec support (by InsanelyDeepak)</li><li>Added ALC883, layout-id 7 codec support (by Andrey1970)</li><li>Changed resources and pinconfig for ALC888 deleted layout 1 using layout 5 for 3 ports and layout 7 for 5/6 ports </li><li>Added CX20590 Mirone resources layout-id 3</li><li>Added ALC1150 Mirone resources layout-id 5 for 3 ports and layout-id 7 for 5/6 ports </li><li>Added ALC887-VD Mirone resources layout-id 5 for 3 ports and layout-id 7 for 5/6 ports </li><li>Added ALC882 codec support Mirone resources layout-id 5 for 3 ports and layout-id 7 for 5/6 ports</li><li>Changed ALC668 resources and pinconfig Mirone resources</li><li>Added ALC663 Mirone resources v1 - layout-id 3, v2 - layout-id 4</li><li>Changed ALC662 resources to Mirone resources layout-id 5 for 3 ports and layout-id 7 for 5/6 ports </li><li>Added ALC282 Mirone resources v1 - layout-id 3, v2 - layout-id 4</li><li>Sync PinConfig info.plist deleted unnesessary items</li><li>Sync layout names (1,2,3 - Toleda Desktop, 1-8 - Mirone Laptop Patches, 5,7 - Mirone Desktop, 10-99 - Custom User layouts)</li><li>Sync platforms names (platformsT - Toleda, PlatformsM - Mirone, Platforms10-99 - custom user platforms)</li><li>Fix error in ALC282 PinConfig</li><li>Added ALC270 Mirone resources layout-id 3, 4</li><li>Added ALC269, ALC269-VB, ALC269-VC Mirone resources layout-id 1, 2, 3, 4, 5, 6, 7, 8</li><li>Changed ALC269 layout-id 27 pinconfig</li><li>Added revision 0x100001 into ALC888 info.plist and sync platforms name to common view</li><li>Added VIA VT1802 revision 0x100000 layout-id 3 codec support Mirone resources</li><li>Added AD1988B layout-id 5, 7 (3 ports, 5/6 Ports) Mirone resources and patch for El Capitan 8319D411-&gt;00000000</li><li>Added AD2000B codec support layout-id 5, 7 (3 ports, 5/6 Ports) Mirone resources</li><li>Change ALC270 layout28.xml.zlib and platforms28xml.zlib workaround for external microphone</li></ul><h4 id="v1-0-4-1"><a href="#v1-0-4-1" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Fixed a rare kernel panic due to uninitialised kern_proc</li><li>Fixed a rare loading failure due to IOHDA value bruteforce necessity</li><li>Added retry possibility for -alcpolicy</li><li>Set -alcpolicy mode the default mode</li><li>Added patch for AMD Radeon R7 370 HDMI (by John998)</li><li>Changed platforms12.xml.zlib for ALC889 set MinimumSampleRate to 48000 (by Sergey_Galan)</li><li>Added ALC269VC for Lenovo V850 codec support (by Ar4erR07)</li><li>Added ALC270, layout-id 27 codec support (by m-dudarev)</li><li>Added ALC282 DSP features and config improvements (by savvamitrofanov)</li><li>Added ALC662, layout-id 12 codec support (by AxenovGosha)</li><li>Added ALC663, layout-id 28 codec support (by m-dudarev)</li></ul><h4 id="v1-0-3-1"><a href="#v1-0-3-1" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Fixed AAPL,ig-platform-id naming</li><li>Added preliminary start modes support</li><li>Added TrustedBSD start via -alcpolicy and IOService::start via -alciokit arguments</li><li>Allowed kext patches with 0 count replacing all entries (use this with a reason)</li><li>Fixed ALC270 regressions</li><li>Added ALC889, layout-id 12 codec support (by Sergey_Galan)</li><li>Added ALC887-VD, layout 99 codec support (by Constanta)</li><li>Removed unnecessary NVIDIA GT240 HDMI patches</li></ul><h4 id="v1-0-2-1"><a href="#v1-0-2-1" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Added Controller.plist with controller-specific patches</li><li>Added Intel X99 and Intel HD4600 controller patches</li><li>Reverted device-id comparison code, it was redundant</li><li>Added prelinkedkernel reading (used exclusively in OS X Installer/Recovery HD)</li><li>Added AppleIntelFramebufferAzul patches to fix HD4600 audio</li><li>Added ALC269 10.9.x/10.10.x patches (by Andrey1970)</li><li>Added ALC269 for Asus K53SJ (by alex1960)</li><li>Added ALC270 codec support (by m-dudarev)</li><li>Added ALC270 for Asus K56CB (by m-dudarev)</li><li>Added ALC668 for Asus N750Jk (by alex1960)</li><li>Added ALC885 (by alex1960)</li><li>Added NVIDIA GT240 HDMI patches (by Vandroiy)</li><li>Added Intel HD4000 patches (by Andrey1970)</li></ul><h4 id="v1-0-1-1"><a href="#v1-0-1-1" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>boot-args presence is now optional</li><li>Platforms must conform to layout-id from now on</li><li>Workaround a race-condition kernel panic when accessing current_thread credential</li><li>Fixed a kernel panic when kaslr is disabled</li><li>Renamed control boot arguments to -alcdbg and -alcoff</li><li>Added optional device-id comparison to patch and file matching</li><li>Added PinConfs plugin injecting pin configurations</li><li>Added AD1988B codec support (by Rodion)</li><li>Added ALC269VC (Lenovo Z580) codec support (by John)</li><li>Added ALC269 (Acer Aspire) codec support (by Andrey1970)</li><li>Added ALC282 codec support (by S.Mitrofanov)</li><li>Added ALC887 codec support (by x-tropic)</li><li>Added ALC888 codec support (by Vandroiy)</li><li>Added ALC889 codec support (by Ukr55)</li><li>Added ALC892 codec support (by FredWst, m-dudarev)</li><li>Added ALC898 codec support (by Andrey1970)</li><li>Added CX20590 codec support (by usr-sse2)</li></ul><h4 id="v1-0-0-1"><a href="#v1-0-0-1" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="ATH9KFixup"><a href="#ATH9KFixup" class="headerlink" title="ATH9KFixup"></a>ATH9KFixup</h3><h4 id="v1-3-3-2"><a href="#v1-3-3-2" class="headerlink" title="v1.3.3"></a>v1.3.3</h4><ul><li>Performance improvements</li><li>Lilu.kext updated to 1.3.3</li></ul><h4 id="v1-3-0-2"><a href="#v1-3-0-2" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Added Mojave compatibility</li><li>Lilu.kext updated to 1.3.0</li></ul><h4 id="v1-2-0-2"><a href="#v1-2-0-2" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Lilu.kext updated to 1.2.0</li></ul><h4 id="v1-1-0-3"><a href="#v1-1-0-3" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Added High Sierra compatibility</li></ul><h4 id="v1-0-5-2"><a href="#v1-0-5-2" class="headerlink" title="v1.0.5"></a>v1.0.5</h4><ul><li>Cosmetic changes</li></ul><h4 id="v1-0-4-2"><a href="#v1-0-4-2" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Lilu.kext updated to 1.1.7</li></ul><h4 id="v1-0-3-2"><a href="#v1-0-3-2" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Cosmetic changes</li></ul><h4 id="v1-0-2-2"><a href="#v1-0-2-2" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Lilu.kext updated to 1.1.6</li></ul><h4 id="v1-0-1-2"><a href="#v1-0-1-2" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Cosmetic changes</li></ul><h4 id="v1-0-0-2"><a href="#v1-0-0-2" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="BT4LEContinuityFixup"><a href="#BT4LEContinuityFixup" class="headerlink" title="BT4LEContinuityFixup"></a>BT4LEContinuityFixup</h3><h4 id="v1-1-4-3"><a href="#v1-1-4-3" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Unified release archive names</li></ul><h4 id="v1-1-3-3"><a href="#v1-1-3-3" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Rename BT4LEContiunityFixup to BT4LEContinuityFixup (ticket 375)</li></ul><h4 id="v1-1-2-2"><a href="#v1-1-2-2" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Try to adapt this kext for &lt;= Yosemite</li></ul><h4 id="v1-1-1-3"><a href="#v1-1-1-3" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Basic 10.14 compatibility</li></ul><h4 id="v1-1-0-4"><a href="#v1-1-0-4" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>XCode 9 &amp; Lilu 1.2.0 compatibility fixes (Lilu 1.2.0 is required)</li></ul><h4 id="v1-0-0-3"><a href="#v1-0-0-3" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="CPUFriend"><a href="#CPUFriend" class="headerlink" title="CPUFriend"></a>CPUFriend</h3><h4 id="v1-2-0-3"><a href="#v1-2-0-3" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Dropped broken AppleIntelMCEReporter prevention support</li></ul><h4 id="v1-1-9-1"><a href="#v1-1-9-1" class="headerlink" title="v1.1.9"></a>v1.1.9</h4><ul><li>Unified release archive names</li><li>Added support for prevention of AppleIntelMCEReporter, details can be found <a href="https://github.com/acidanthera/bugtracker/issues/424#issuecomment-512596034" target="_blank" rel="noopener external nofollow noreferrer">here</a></li></ul><h4 id="v1-1-8-1"><a href="#v1-1-8-1" class="headerlink" title="v1.1.8"></a>v1.1.8</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li></ul><h4 id="v1-1-7-2"><a href="#v1-1-7-2" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Reduced debug logging in release builds</li></ul><h4 id="v1-1-6-2"><a href="#v1-1-6-2" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Fixed a bug where CPUFriend ceased to work on v1.1.5</li></ul><h4 id="v1-1-5-2"><a href="#v1-1-5-2" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Support for the old ACPI_SMC_Plugin (as claimed in TO-DO)</li></ul><h4 id="v1-1-4-4"><a href="#v1-1-4-4" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Sync with Lilu 1.2.5</li><li>Native macOS 10.14 support</li></ul><h4 id="v1-1-3-4"><a href="#v1-1-3-4" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Added Lilu 1.2.3 compatibility</li><li>Requires Lilu 1.2.3 or higher</li></ul><h4 id="v1-1-2-3"><a href="#v1-1-2-3" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Code style changed</li></ul><h4 id="v1-1-1-4"><a href="#v1-1-1-4" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Various typo fixes</li></ul><h4 id="v1-1-0-5"><a href="#v1-1-0-5" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Requires Lilu 1.2.0 or higher</li></ul><h4 id="v1-0-1-3"><a href="#v1-0-1-3" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Corrected some typos.</li></ul><h4 id="v1-0-0-4"><a href="#v1-0-0-4" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="DebugEnhancer"><a href="#DebugEnhancer" class="headerlink" title="DebugEnhancer"></a>DebugEnhancer</h3><h4 id="v1-0-0-5"><a href="#v1-0-0-5" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="DiskArbitrationFixup"><a href="#DiskArbitrationFixup" class="headerlink" title="DiskArbitrationFixup"></a>DiskArbitrationFixup</h3><ul><li>暂无</li></ul><h3 id="HibernationFixup"><a href="#HibernationFixup" class="headerlink" title="HibernationFixup"></a>HibernationFixup</h3><h4 id="v1-3-3-3"><a href="#v1-3-3-3" class="headerlink" title="v1.3.3"></a>v1.3.3</h4><ul><li>Improve auto-hibernate feature: support standby and autopoweroff separately (with respective delay). Immediate hibernate is possible with zero delay.</li></ul><h4 id="v1-3-2-2"><a href="#v1-3-2-2" class="headerlink" title="v1.3.2"></a>v1.3.2</h4><ul><li>Fix nvram.plist saving in Catalina, new path is used when the root folder is not writable: /System/Volumes/Data/nvram.plist</li></ul><h4 id="v1-3-1-2"><a href="#v1-3-1-2" class="headerlink" title="v1.3.1"></a>v1.3.1</h4><ul><li>Code refactoring, fix duplicates in log, auto-hibernate can work without power source</li></ul><h4 id="v1-3-0-3"><a href="#v1-3-0-3" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Do not use recursive iterator to detect EmuVariableUefiPresent  (based on panic report analysis)</li></ul><h4 id="v1-2-9-1"><a href="#v1-2-9-1" class="headerlink" title="v1.2.9"></a>v1.2.9</h4><ul><li>Improve auto-hibernate feature: if power nap is enabled, hibernation will start after next Maintenance/SleepService wake (standbyDelay value is respected)</li></ul><h4 id="v1-2-8-2"><a href="#v1-2-8-2" class="headerlink" title="v1.2.8"></a>v1.2.8</h4><ul><li>Fixed memory leaks</li><li>Fixed EmuVariableUefiPresent detection (nvram.plist will be properly saved if EmuVariableUefiPresent == Yes in ioreg)</li><li>Improve auto-hibernate feature: modify next wake time only before regular sleep</li></ul><h4 id="v1-2-7-2"><a href="#v1-2-7-2" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Unified release archive names</li></ul><h4 id="v1-2-6-2"><a href="#v1-2-6-2" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Fix minor typos in code and comments (credits to PMheart)</li></ul><h4 id="v1-2-5-2"><a href="#v1-2-5-2" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Improve auto-hibernate feature: modify next wake time to currentTime + standbyDelay</li></ul><h4 id="v1-2-4-2"><a href="#v1-2-4-2" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>New feature:  forces hibernate mode depending on specified factors (auto hibernate modes)</li></ul><h4 id="v1-2-3-2"><a href="#v1-2-3-2" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Basic 10.14 support</li></ul><h4 id="v1-2-2-2"><a href="#v1-2-2-2" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>Fix a name conflict for config variable</li><li>Improve pci patch (allow to write to PCI config command register, but bit <code>memory space</code> must be always set )</li></ul><h4 id="v1-2-1-2"><a href="#v1-2-1-2" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>Save hibernation keys in NVRAM only if boot-arg <code>-hbfx-dump-nvram</code> is specified or if the second bank of RTC memory (next block of 128 bytes) is not available</li><li>PCI Family patch is always enabled, boot-arg <code>-hbfx-patch-pci</code> is obsolete. A new boot arg <code>-hbfx-disable-patch-pci</code> is introduced to disable any patching</li></ul><h4 id="v1-1-7-3"><a href="#v1-1-7-3" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Fixes for 1.1.6b (Release was non-working)</li><li>Use pollers to provoke writing of SMC-keys earlier</li></ul><h4 id="v1-1-6-3"><a href="#v1-1-6-3" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Requires Lilu 1.1.6</li><li>Compatibility with High Sierra</li><li>PCI Family patch was improved</li><li>New boot-arg hbfx-patch-pci=[comma-separated list of ignored devices] supported</li></ul><h4 id="v1-1-5-3"><a href="#v1-1-5-3" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v1-1-4-5"><a href="#v1-1-4-5" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Fix system freeze and black screen when resume after hibernation (Sierra only)</li></ul><h4 id="v1-1-3-5"><a href="#v1-1-3-5" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Panic handling and writing to nvram.plist</li></ul><h4 id="v1-1-2-4"><a href="#v1-1-2-4" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Works with EmuVariable</li></ul><h4 id="v1-1-1-5"><a href="#v1-1-1-5" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Call file sync method (to be sure that nvram.plist will be written)</li></ul><h4 id="v1-1-0-6"><a href="#v1-1-0-6" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Write NVRAM to file</li></ul><h4 id="v1-0-0-6"><a href="#v1-0-0-6" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="MacProMemoryNotificationDisabler"><a href="#MacProMemoryNotificationDisabler" class="headerlink" title="MacProMemoryNotificationDisabler"></a>MacProMemoryNotificationDisabler</h3><ul><li>暂无</li></ul><h3 id="NightShiftEnabler"><a href="#NightShiftEnabler" class="headerlink" title="NightShiftEnabler"></a>NightShiftEnabler</h3><h4 id="v1-0-0-7"><a href="#v1-0-0-7" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release.</li></ul><h3 id="NoTouchID"><a href="#NoTouchID" class="headerlink" title="NoTouchID"></a>NoTouchID</h3><h4 id="v1-0-3-3"><a href="#v1-0-3-3" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Fixed compilation with Lilu 1.4.0</li></ul><h4 id="v1-0-2-3"><a href="#v1-0-2-3" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Enabled Catalina support by default</li></ul><h4 id="v1-0-1-4"><a href="#v1-0-1-4" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Enabled Mojave support by default</li></ul><h4 id="v1-0-0-8"><a href="#v1-0-0-8" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="NVMeFix"><a href="#NVMeFix" class="headerlink" title="NVMeFix"></a>NVMeFix</h3><h4 id="v1-0-2-4"><a href="#v1-0-2-4" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Prevent timeout panic on certain controllers (VMware, Samsung PM981)</li><li>Only enable active NVMe power management for controllers that do not support APST</li></ul><h4 id="v1-0-1-5"><a href="#v1-0-1-5" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Add OpenCore support for quirk autodetection</li></ul><h4 id="v1-0-0-9"><a href="#v1-0-0-9" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="OpcodeEmulator"><a href="#OpcodeEmulator" class="headerlink" title="OpcodeEmulator"></a>OpcodeEmulator</h3><h4 id="2017-11-17"><a href="#2017-11-17" class="headerlink" title="2017/11/17"></a>2017/11/17</h4><ul><li>FIX kernel_trap</li></ul><h4 id="2019-02-11"><a href="#2019-02-11" class="headerlink" title="2019/02/11"></a>2019/02/11</h4><ul><li>BMI1/BMI2 Instruction Set Fix</li></ul><h4 id="2019-02-15"><a href="#2019-02-15" class="headerlink" title="2019/02/15"></a>2019/02/15</h4><ul><li>Store &amp; Load x86/x64 Register Fix</li></ul><h4 id="2019-02-18"><a href="#2019-02-18" class="headerlink" title="2019/02/18"></a>2019/02/18</h4><ul><li>Modrm Addressing、XMM/R64/R32 Register Store &amp; Load Fix</li></ul><h4 id="2019-02-20"><a href="#2019-02-20" class="headerlink" title="2019/02/20"></a>2019/02/20</h4><ul><li>BMI1/BMI2 Instruction Set Completed</li></ul><h4 id="2019-02-22"><a href="#2019-02-22" class="headerlink" title="2019/02/22"></a>2019/02/22</h4><ul><li>IMM Byte Fix</li></ul><h4 id="2019-03-03"><a href="#2019-03-03" class="headerlink" title="2019/03/03"></a>2019/03/03</h4><ul><li>High Sierra Support</li></ul><h4 id="2019-03-07"><a href="#2019-03-07" class="headerlink" title="2019/03/07"></a>2019/03/07</h4><ul><li>“lock” &amp; “ud2” instruction return</li></ul><h4 id="2019-04-08"><a href="#2019-04-08" class="headerlink" title="2019/04/08"></a>2019/04/08</h4><ul><li>add YMM Register &amp; F16C Instruction Set &amp; VSSEX Instruction Set</li></ul><h4 id="2019-04-25"><a href="#2019-04-25" class="headerlink" title="2019/04/25"></a>2019/04/25</h4><ul><li>add AES / VAES Instruction Set、AVX 2.0 Gather Instruction、VSIB Addressing</li></ul><h4 id="2019-05-03"><a href="#2019-05-03" class="headerlink" title="2019/05/03"></a>2019/05/03</h4><ul><li>add AVX / AVX2 / FMA Instruction Set</li></ul><h4 id="2019-05-15"><a href="#2019-05-15" class="headerlink" title="2019/05/15"></a>2019/05/15</h4><ul><li>VSSE (VEX SSE) 、VSSE2 (VEX SSE2) Instruction Set Completed.</li></ul><h4 id="2019-05-18"><a href="#2019-05-18" class="headerlink" title="2019/05/18"></a>2019/05/18</h4><ul><li>VSSE3、VSSSE3、VSSE4.1 VSSE4.2 Instruction Set Completed.</li></ul><h4 id="2019-05-19"><a href="#2019-05-19" class="headerlink" title="2019/05/19"></a>2019/05/19</h4><ul><li>add “vpclmulqdq” instruction. &amp; fix BMI andn &amp; bzhi instruction.</li></ul><h4 id="2019-05-20"><a href="#2019-05-20" class="headerlink" title="2019/05/20"></a>2019/05/20</h4><ul><li>add “sysenter”、”sysexit” instruction for AMD Machines 32-bit Mode</li></ul><h4 id="2019-05-21"><a href="#2019-05-21" class="headerlink" title="2019/05/21"></a>2019/05/21</h4><ul><li>add  “vpclmulqdq” VEX.256 Version &amp; Update Lilu to 1.3.5 (Build based on Lilu 1.3.5)</li></ul><h4 id="2019-05-25"><a href="#2019-05-25" class="headerlink" title="2019/05/25"></a>2019/05/25</h4><ul><li>YMM Register Store &amp; Load FIX.</li></ul><h3 id="RTCMemoryFixup"><a href="#RTCMemoryFixup" class="headerlink" title="RTCMemoryFixup"></a>RTCMemoryFixup</h3><h4 id="v1-0-5-3"><a href="#v1-0-5-3" class="headerlink" title="v1.0.5"></a>v1.0.5</h4><ul><li>Support key rtc-blacklist set by OpenCore in NVRAM</li></ul><h4 id="v1-0-4-3"><a href="#v1-0-4-3" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Unified release archive names</li></ul><h4 id="v1-0-3-4"><a href="#v1-0-3-4" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Fixed compiling and loading on older OS</li><li>Fixed loading from /Library/Extensions</li><li>rtcfx_exclude property is read as string from RTC provider’s properties</li></ul><h4 id="v1-0-2-5"><a href="#v1-0-2-5" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Wrong range start value in debug message has been fixed (thanks to nms42)</li></ul><h4 id="v1-0-1-6"><a href="#v1-0-1-6" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Bug fix: prevent kext unloading </li></ul><h4 id="v1-0-0-10"><a href="#v1-0-0-10" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="SystemProfilerMemoryFixup"><a href="#SystemProfilerMemoryFixup" class="headerlink" title="SystemProfilerMemoryFixup"></a>SystemProfilerMemoryFixup</h3><ul><li>暂无</li></ul><h3 id="ThunderboltReset"><a href="#ThunderboltReset" class="headerlink" title="ThunderboltReset"></a>ThunderboltReset</h3><h4 id="v1-0-1"><a href="#v1-0-1" class="headerlink" title="v1.0"></a>v1.0</h4><ul><li>Initial commit</li></ul><h3 id="VirtualSMC"><a href="#VirtualSMC" class="headerlink" title="VirtualSMC"></a>VirtualSMC</h3><h4 id="v1-1-3-6"><a href="#v1-1-3-6" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Fixed compatibility with 10.15 debug kernel with traptrace enabled</li></ul><h4 id="v1-1-2-5"><a href="#v1-1-2-5" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Improved performance with Lilu 1.4.3 APIs</li></ul><h4 id="v1-1-1-6"><a href="#v1-1-1-6" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Fixed SMCSuperIO crashes with unsupported chips</li><li>SMCSuperIO detected chip name to ioreg</li></ul><h4 id="v1-1-0-7"><a href="#v1-1-0-7" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Minor performance improvements</li><li>Added OpenCore builtin protocol support (VirtualSmc.efi can still be used in other bootloaders)</li><li>Added fan and voltage reporting in SMCSuperIO through I/O Registry (requires client updates) by @joedmru</li></ul><h4 id="v1-0-9-2"><a href="#v1-0-9-2" class="headerlink" title="v1.0.9"></a>v1.0.9</h4><ul><li>Fixed multiple issues with charge level reports in SMCBatteryManager</li></ul><h4 id="v1-0-8-2"><a href="#v1-0-8-2" class="headerlink" title="v1.0.8"></a>v1.0.8</h4><ul><li>Added Xcode 11 compatibility to plugin kexts on 10.14</li></ul><h4 id="v1-0-7-2"><a href="#v1-0-7-2" class="headerlink" title="v1.0.7"></a>v1.0.7</h4><ul><li>Unified release archive names</li><li>Added new ssio sensors</li></ul><h4 id="v1-0-6-2"><a href="#v1-0-6-2" class="headerlink" title="v1.0.6"></a>v1.0.6</h4><ul><li>Fixed <code>vsmcgen=1</code> support on select models</li><li>Improve SMCBatteryManager compatibility with 10.15</li></ul><h4 id="v1-0-5-4"><a href="#v1-0-5-4" class="headerlink" title="v1.0.5"></a>v1.0.5</h4><ul><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Fixed SMCBatteryManager compatibility with 10.15</li><li>Changed RGEN 3 -&gt; 2 for AppleIntelPCHPMC.kext compatibility</li></ul><h4 id="v1-0-4-4"><a href="#v1-0-4-4" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Removed exposed REV, RBr, RPlt keys from I/O Registry</li><li>Minor EFI driver compatibility improvements</li><li>Synced RVUF, RVFB with REV from booter keys</li><li>Fixed prebuilt revisions for GEN 3 chip emulation</li><li>Dropped custom prebuilt revisions in favour of loader inject</li></ul><h4 id="v1-0-3-5"><a href="#v1-0-3-5" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Added multiple new ssio sensors</li><li>Improved 3rd generation SMC support (they have no REV and RBr keys)</li></ul><h4 id="v1-0-2-6"><a href="#v1-0-2-6" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Fixed TC0C/TC1C selection in SMCProcessor to match mac models</li><li>Added per-plugin debug switches (<code>-scpudbg</code>, <code>-sbatdbg</code>, <code>-ssiodbg</code>, <code>-alsddbg</code>)</li></ul><h4 id="v1-0-1-7"><a href="#v1-0-1-7" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Added Penryn CPU support to SMCProcessor</li><li>Improved keystore management</li><li>Initial implementation of SuperIO devices: support fans reading</li></ul><h4 id="v1-0-0-11"><a href="#v1-0-0-11" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="WhateverGreen"><a href="#WhateverGreen" class="headerlink" title="WhateverGreen"></a>WhateverGreen</h3><h4 id="v1-3-9-2"><a href="#v1-3-9-2" class="headerlink" title="v1.3.9"></a>v1.3.9</h4><ul><li>Added <code>igfxdumpdelay</code> boot argument to delay <code>-igfxdump</code> in ms</li><li>Partially fix ICL framebuffer patching</li><li>Add support to injecting <code>Force_Load_FalconSMUFW</code> from OpenCore</li><li>Disabled automatic enabling of GVA for Polaris on 10.13 and lower</li><li>Replaced -radnogva argument with radgva=0/1 to force GVA for Polaris</li><li>Added <code>wegtree=1</code> boot argument (<code>rebuild-device-tree</code> property) to force device renaming on Apple FW</li></ul><h4 id="v1-3-8-2"><a href="#v1-3-8-2" class="headerlink" title="v1.3.8"></a>v1.3.8</h4><ul><li>Added <code>igfxfw=2</code> boot argument and <code>igfxfw</code> IGPU property to load Apple GuC firmware</li><li>Added <code>igfxpavp=1</code> boot argument (and <code>igfxpavp</code> property) to force enable PAVP output</li><li>Added <code>igfxfcms=1</code> boot argument (and <code>complete-modeset</code> property) on Skylake and Apple</li><li>Improved performance with Lilu 1.4.3 APIs</li><li>Added <code>-igfxfbdbg</code> boot argument to debug IGPU framebuffer (debug builds only)</li><li>Added <code>igfxagdc=0</code> boot argument and <code>disable-agdc</code> IGPU property to disable AGDC</li><li>Added <code>igfxonln=1</code> boot argument and <code>force-online</code> IGPU property force online status for all displays</li><li>Added <code>igfxonlnfbs=MASK</code> boot argument and <code>force-online-framebuffers</code> IGPU property to override display status</li></ul><h4 id="v1-3-7-1"><a href="#v1-3-7-1" class="headerlink" title="v1.3.7"></a>v1.3.7</h4><ul><li>Improved the maximum link rate fix: Now correct the value read from extended DPCD as well. (by @0xFireWolf)</li><li>Improved firmware loading handling on 10.15.4 (may fix booting issues on KBL+)</li><li>Improved support for Comet Lake IGPUs (thx @stormbirds)</li></ul><h4 id="v1-3-6-2"><a href="#v1-3-6-2" class="headerlink" title="v1.3.6"></a>v1.3.6</h4><ul><li>Enabled CoreLSKD streaming patches by default for AMD hardware DRM on Ivy Bridge</li><li>Repurposed 64 bit for FP 2.x streaming hardware accelerated streaming patches (can be used as <code>shikigva=80</code>)</li><li>Fixed accelerator name update logic for X4xxx kexts</li><li>Fixed Verde IOGVACodec injection to make hardware video decoder work</li><li>Enable software TV+ decoding on all CPUs without IGPU (<code>shikigva=256</code>)</li><li>Added HEVC capabilities to AMD6 decoders for all GPUs (disabled by <code>-radnogva</code> or <code>disable-gva-support</code>)</li><li>Added HW decoder device-id spoofing via <code>-radcodec</code> boot-arg, by @osy86</li></ul><h4 id="v1-3-5-2"><a href="#v1-3-5-2" class="headerlink" title="v1.3.5"></a>v1.3.5</h4><ul><li>Added Lilu 1.4.0 support, which is now the minimum supported version</li><li>Dropped legacy boot arguments (<code>-shikigva</code>, <code>-shikifps</code>)</li><li>Fixed handling <code>agdpmod</code> GPU property (in IGPUs and in conjunction with boot-arg)</li><li>Added <code>-wegtree</code> boot argument to force device renaming</li><li>Fixed FairPlay DRM playback patches on 10.15</li><li>Added <code>shikigva</code> and <code>shiki-id</code> aliases in IORegistry</li><li>Added <code>applbkl</code> aliases to IORegistry (data, 32-bit)</li><li>Added <code>applbkl-name</code> and <code>applbkl-data</code> IORegistry data keys to provide custom backlight data</li><li>Fixed applying CoreFP patches on Apple firmware, when they are not needed</li><li>Added <code>shikigva=16</code> (repurposed) property to use AMD hardware DRM decoder in select apps</li><li>Added <code>shikigva=128</code> (repurposed) property to use hardware decoder for FairPlay 1.0 (can be used as <code>shikigva=144</code>)</li><li>Do not disable DRM patches when <code>shikigva</code> is used even on Apple hardware for MacPro5,1 support</li></ul><h4 id="v1-3-4-2"><a href="#v1-3-4-2" class="headerlink" title="v1.3.4"></a>v1.3.4</h4><ul><li>Added support for disabled AppleGraphicsDevicePolicy in AMD drivers on 10.15.1</li><li>Added basic support for <code>-radcfg</code> and <code>-radgl</code> on AMD Navi GPUs</li></ul><h4 id="v1-3-3-4"><a href="#v1-3-3-4" class="headerlink" title="v1.3.3"></a>v1.3.3</h4><ul><li>Rework backlight panel info injection to fix Mac issues</li></ul><h4 id="v1-3-2-3"><a href="#v1-3-2-3" class="headerlink" title="v1.3.2"></a>v1.3.2</h4><ul><li>Added more GPUs for detection</li><li>Enable IGPU graphics kernel panic workaround on 10.14.4+ on SKL</li></ul><h4 id="v1-3-1-3"><a href="#v1-3-1-3" class="headerlink" title="v1.3.1"></a>v1.3.1</h4><ul><li>Fixed an issue that LSPCON driver fails to set the mode after the adapter power is off, i.e. sleep/wake up cycle.</li><li>Unified release archive names</li><li>Enforce complete IGPU modeset on Kaby Lake and newer (overridable by igfxfcmsfbs bootarg or<br>complete-modeset-framebuffers device property)</li><li>Disable VRAM testing on AMD GPUs on 10.14.4+ (based on vladie’s patch)</li></ul><h4 id="v1-3-0-4"><a href="#v1-3-0-4" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Fixed custom connector support for Radeon GPUs, thx @lwfitzgerald</li><li>Added <code>disable-gfx-submit</code> property to back <code>ngfxsubmit=0</code> boot argument</li><li>Added GuC firmware loading patch for latest SKL+ drivers</li><li>Allow loading on 10.15 without <code>-lilubetaall</code></li><li>Disabled NVIDIA performance fix on 10.15, as it now is built-in</li><li>Enable HDMI 2.0 patches on 10.14+ (Use at own risk in case of undiscovered change)</li><li>Added CFL graphics kernel panic workaround on 10.14.4+</li><li>Added infinite loop fix when calculating dividers for Intel HDMI connections on SKL, KBL and CFL platforms.</li><li>Added driver support for onboard LSPCON chips to enable DisplayPort to HDMI 2.0 output on Intel IGPUs (by @0xFireWolf)</li></ul><h4 id="v1-2-9-2"><a href="#v1-2-9-2" class="headerlink" title="v1.2.9"></a>v1.2.9</h4><ul><li>Added AMD Radeon VII to detected list</li><li>Disabled automatic framebuffer usage on Polaris GPUs</li><li>Added <code>preserve-names</code> device property to preserve current GPU names</li><li>Added <code>AppleVPA</code> patching support, replaces NoVPAJpeg.kext (thx CMMChris and uglyJoe)</li></ul><h4 id="v-1-2-8"><a href="#v-1-2-8" class="headerlink" title="v.1.2.8"></a>v.1.2.8</h4><ul><li>Added KBL graphics kernel panic workaround on 10.14.4+</li><li>Added IGPU DPCD link incompatible rate patch (thanks @0xFireWolf)</li></ul><h4 id="v1-2-7-3"><a href="#v1-2-7-3" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Added more IGPU device-ids to detected list</li></ul><h4 id="v1-2-6-3"><a href="#v1-2-6-3" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Added <code>applbkl=0</code> boot argument to termporarily disable <code>AppleBacklight</code> patching code</li><li>Fixed AMD Verde CAIL injection logic</li><li>Fixed breaking backlight on Apple hardware, on laptops with AMD GPUs, and on 10.11 or earlier</li><li>Changed CFL backlight patches to enable by default on CFL drivers only (avoids issues with faux “KBL” 8xxx CPUs)</li></ul><h4 id="v1-2-5-3"><a href="#v1-2-5-3" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Added support for specifying <code>agpmod</code> in external GPU properties</li><li>Added fatal error on <code>agpmod=cfgmap</code> on 10.14 and newer, which had no effect since 10.13.4</li><li>Added <code>igfxcflbklt</code> boot argument and <code>enable-cfl-backlight-fix</code> property to fix CFL backlight</li><li>Added max backlight frequency override via  <code>max-backlight-freq</code> IGPU property on CFL</li><li>Added <code>framebuffer-camellia</code> and <code>framebuffer-flags</code> patching</li><li>Added <code>AppleBacklight</code> patching code (based on <code>AppleBacklightFixup</code> by <code>hieplpvip</code>)</li><li>Added NVIDIA HDMI enabling code for firmwares that disable it by default (thanks @Fraxul)</li><li>Enabled CFL backlight patches by default on laptops with CFL graphics</li><li>Fixed SNB IGPU HDMI automatic patching</li><li>Fix multiple AMD GPU support improperly handling configuration properties</li></ul><h4 id="v1-2-4-3"><a href="#v1-2-4-3" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>Added platform list dumping to ioreg (at IOService:/IOResources/WhateverGreen), debug build only with -igfxfbdump</li><li>Fixed 10.14.1 IGPU KBL/CFL support without external GPU</li><li>Fixed warning about legacy processors (e.g. Xeon)</li><li>Fixed the support for providing custom names on <code>Radeon RX</code> models</li></ul><h4 id="v1-2-3-3"><a href="#v1-2-3-3" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Added <code>framebuffer-cursormem</code> IGPU patch support (Haswell specific)</li><li>Added <code>framebuffer-conX-XXXXXXXX-alldata</code> IGPU patch support (platform-id specific conX-alldata)</li><li>Changed AGDP patch defaults to vit+pikera patch</li><li>Fixed semantic patches for Coffee Lake when it pretends to be Kaby</li></ul><h4 id="v1-2-2-3"><a href="#v1-2-2-3" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>Added <code>framebuffer-conX-alldata</code> IGPU patch support</li><li>Fixed automatic frame selection with <code>-wegnoegpu</code> boot-arg or <code>disable-external-gpu</code> IGPU property (Lilu 1.2.7 or newer)</li></ul><h4 id="v1-2-1-3"><a href="#v1-2-1-3" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>Added <code>-wegnoegpu</code> boot-arg and <code>disable-external-gpu</code> IGPU property to kill external GPU</li><li>Fixed IGPU framebuffer patches (requires Lilu 1.2.6)</li><li>Fixed <code>-shikioff</code> not working (note, <code>-liluuseroff</code> may be more handy)</li><li>Fixed loading on 10.8 and 10.9</li><li>Fixed device property reading for AMD CAIL overrides</li><li>Recovered GuC loading for internal usage (do NOT use, causes freezes and crashes)</li><li>Disabled HDMI 2.0 by default, use <code>-cdfon</code> boot-arg or <code>enable-hdmi20</code> IGPU/GFX0 property to enable</li></ul><h4 id="v1-2-0-4"><a href="#v1-2-0-4" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Merged GPU kexts into one (AMD, Intel, NVIDIA) including H/W acceleration (Shiki)</li><li>Added binary and structural Intel framebuffer patches (thx to headkaze)</li><li>Added Intel CFL support</li><li>Fixed certain AMD multimonitor issues</li><li>Enabled 10.14 support by default</li></ul><h4 id="v1-1-8-2"><a href="#v1-1-8-2" class="headerlink" title="v1.1.8"></a>v1.1.8</h4><ul><li>Added more GPU models to automatic detection</li><li>Hardened solved symbol verification to avoid panics with broken kext cache</li><li>Fixed compiling with older Xcode</li></ul><h4 id="v1-1-7-4"><a href="#v1-1-7-4" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Added <code>-radgl</code> boot argument to disable Metal support</li><li>Disabled a few more unnecessary patches for 10.13.4</li></ul><p>In order to boot with <code>-radgl</code> you may need to set the defaults:</p><pre><code>sudo defaults write /Library/Preferences/com.apple.CoreDisplay useMetal -boolean nosudo defaults write /Library/Preferences/com.apple.CoreDisplay useIOP -boolean no</code></pre><h4 id="v1-1-6-4"><a href="#v1-1-6-4" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Ensure proper GFX0 and HDAU renaming</li></ul><h4 id="v1-1-5-4"><a href="#v1-1-5-4" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Added more GPU models to automatic detection (including new names from 10.13.4)</li><li>Added automatic <code>CFG_USE_AGDC</code> disabling to avoid constant issues with 4K display sleep and broken HDMI/DP ports</li></ul><h4 id="v1-1-4-6"><a href="#v1-1-4-6" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Added automatic screen boot artifact correction (<code>-radlogo</code> is no longer necessary and is removed)</li><li>Added automatic <code>CFG_FB_LIMIT</code> correction to avoid issues on several Polaris GPUs on 10.13</li></ul><h4 id="v1-1-3-7"><a href="#v1-1-3-7" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Added more GPU models to automatic detection</li><li>Added <code>-rad4200</code> option to fix freezes and possibly improve the performance of Radeon Pro 560 on 10.13</li></ul><h4 id="v1-1-2-6"><a href="#v1-1-2-6" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Enabled the kext in installer and recovery by default</li><li>Improved controller start debugging</li></ul><h4 id="v1-1-1-7"><a href="#v1-1-1-7" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Added more GPU models to automatic detection</li><li>Rename GPU name to GFX0 only if it does not start with GFX prefix</li><li>Added <code>-radnoaudio</code> boot argument to avoid DP/HDMI audio autoenabling</li><li>Added <code>no-audio-autofix</code> gpu controller property to avoid DP/HDMI audio autoenabling</li></ul><h4 id="v1-1-0-8"><a href="#v1-1-0-8" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Requires Lilu 1.2.0 or newer</li><li>Added more GPU models to automatic detection</li><li>Fixed GPU controller name to GFX0 if not already changed</li><li>Fixed HDMI audio initialising even when the kext is disabled</li></ul><h4 id="v1-0-4-5"><a href="#v1-0-4-5" class="headerlink" title="v1.0.4"></a>v1.0.4</h4><ul><li>Added more GPU models to automatic detection</li><li>Initial Vega series support</li><li>Fixed minor issues in HDMI audio enabling code</li></ul><h4 id="v1-0-3-6"><a href="#v1-0-3-6" class="headerlink" title="v1.0.3"></a>v1.0.3</h4><ul><li>Fixed <code>radpg</code> bit mask working incorrectly</li><li>Added manual tuning of <code>aty_config</code>, <code>aty_properties</code>, and <code>cail_properties</code> via ACPI</li><li>Changed HDMI audio layout-id to match HDEF layout-id if available</li></ul><h4 id="v1-0-2-7"><a href="#v1-0-2-7" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Added more GPU models to automatic detection</li><li>Added basic automatic HDMI audio correction</li><li>Fixed WhateverName os version requirements</li><li>Disabled connector ordering by default (use <code>connector-priority</code> if needed)</li><li>Changed <code>connector-priority</code> default type importance</li><li>Added version info for easier debugging</li></ul><h4 id="v1-0-1-8"><a href="#v1-0-1-8" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Added more GPU models to automatic detection</li><li>Disabled DVI transmitter changes by default (use <code>-raddvi</code> boot-arg)</li><li>Added IOAccelDeviceGetName correction</li><li>Added libWhateverName.dylib with an app for GPU GL/Compute/Metal engine name correction</li></ul><h4 id="v1-0-0-12"><a href="#v1-0-0-12" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="AzulPatcher4600-Superseded-by-WhateverGreen"><a href="#AzulPatcher4600-Superseded-by-WhateverGreen" class="headerlink" title="AzulPatcher4600(Superseded by WhateverGreen)"></a>AzulPatcher4600(Superseded by WhateverGreen)</h3><h4 id="v1-2"><a href="#v1-2" class="headerlink" title="v1.2"></a>v1.2</h4><ul><li>Clarify dependencies</li></ul><h4 id="v1-0-2"><a href="#v1-0-2" class="headerlink" title="v1.0"></a>v1.0</h4><ul><li>fix syslog messages</li></ul><h3 id="AppleBacklightFixup-Superseded-by-WhateverGreen"><a href="#AppleBacklightFixup-Superseded-by-WhateverGreen" class="headerlink" title="AppleBacklightFixup(Superseded by WhateverGreen)"></a>AppleBacklightFixup(Superseded by WhateverGreen)</h3><ul><li>暂无</li></ul><h3 id="EnableLidWake-Superseded-by-WhateverGreen"><a href="#EnableLidWake-Superseded-by-WhateverGreen" class="headerlink" title="EnableLidWake(Superseded by WhateverGreen)"></a>EnableLidWake(Superseded by WhateverGreen)</h3><ul><li>暂无</li></ul><h3 id="BrcmWLFixup-Superseded-by-AirportBrcmFixup"><a href="#BrcmWLFixup-Superseded-by-AirportBrcmFixup" class="headerlink" title="BrcmWLFixup(Superseded by AirportBrcmFixup)"></a>BrcmWLFixup(Superseded by AirportBrcmFixup)</h3><h4 id="v1-0-2-8"><a href="#v1-0-2-8" class="headerlink" title="v1.0.2"></a>v1.0.2</h4><ul><li>Enlarged OS compatibility</li></ul><h4 id="v1-0-1-9"><a href="#v1-0-1-9" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Various bug fixes and improvements</li><li>Refined some algorithms</li></ul><h4 id="v1-0-0-13"><a href="#v1-0-0-13" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="CoreDisplayFixup-Superseded-by-WhateverGreen"><a href="#CoreDisplayFixup-Superseded-by-WhateverGreen" class="headerlink" title="CoreDisplayFixup(Superseded by WhateverGreen)"></a>CoreDisplayFixup(Superseded by WhateverGreen)</h3><ul><li>暂无</li></ul><h3 id="NoVPAJpeg-Superseded-by-WhateverGreen"><a href="#NoVPAJpeg-Superseded-by-WhateverGreen" class="headerlink" title="NoVPAJpeg(Superseded by WhateverGreen)"></a>NoVPAJpeg(Superseded by WhateverGreen)</h3><ul><li>暂无</li></ul><h3 id="NightShiftUnlocker-Superseded-by-NightShiftEnabler"><a href="#NightShiftUnlocker-Superseded-by-NightShiftEnabler" class="headerlink" title="NightShiftUnlocker(Superseded by NightShiftEnabler)"></a>NightShiftUnlocker(Superseded by NightShiftEnabler)</h3><ul><li>暂无</li></ul><h3 id="IntelGraphicsDVMTFixup-Superseded-by-WhateverGreen"><a href="#IntelGraphicsDVMTFixup-Superseded-by-WhateverGreen" class="headerlink" title="IntelGraphicsDVMTFixup(Superseded by WhateverGreen)"></a>IntelGraphicsDVMTFixup(Superseded by WhateverGreen)</h3><h4 id="v1-2-2-4"><a href="#v1-2-2-4" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>macOS 10.14 compatibility (Lilu 1.2.4 required)</li></ul><h4 id="v1-2-1-4"><a href="#v1-2-1-4" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>Lilu 1.2.2 compatibility fixes (Lilu 1.2.2 is required)</li></ul><h4 id="v1-2-0-5"><a href="#v1-2-0-5" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>XCode 9 &amp; Lilu 1.2.0 compatibility fixes (Lilu 1.2.0 is required)</li></ul><h4 id="v1-1-6-5"><a href="#v1-1-6-5" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>Added Kabylake Graphics</li></ul><h4 id="v1-1-5-5"><a href="#v1-1-5-5" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v1-1-4-7"><a href="#v1-1-4-7" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Fixed a problem where the binary patch did not work (thanks to tluck)</li></ul><h4 id="v1-1-3-8"><a href="#v1-1-3-8" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Alternative to the minStolenSize patch with 32mb DVMT-prealloc was added (Rehabman)</li></ul><h4 id="v1-1-2-7"><a href="#v1-1-2-7" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Updated v1.1.2 according to Lilu v1.1.1</li></ul><h4 id="v1-1-1-8"><a href="#v1-1-1-8" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Patch has been improved (vit9696)</li></ul><h4 id="v1-0-0-14"><a href="#v1-0-0-14" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="IntelGraphicsFixup-Superseded-by-WhateverGreen"><a href="#IntelGraphicsFixup-Superseded-by-WhateverGreen" class="headerlink" title="IntelGraphicsFixup(Superseded by WhateverGreen)"></a>IntelGraphicsFixup(Superseded by WhateverGreen)</h3><h4 id="v1-0-0-15"><a href="#v1-0-0-15" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h4 id="v1-0-1-10"><a href="#v1-0-1-10" class="headerlink" title="v1.0.1"></a>v1.0.1</h4><ul><li>Updated readme, features</li><li>Patch IOGraphicsFamily if it’s already loaded</li></ul><h4 id="v1-1-0-9"><a href="#v1-1-0-9" class="headerlink" title="v1.1.0"></a>v1.1.0</h4><ul><li>Adopted for Lulu 1.1.0</li><li>Module identifier has been fixed</li></ul><h4 id="v1-1-1-9"><a href="#v1-1-1-9" class="headerlink" title="v1.1.1"></a>v1.1.1</h4><ul><li>Sky Lake support</li></ul><h4 id="v1-1-2-8"><a href="#v1-1-2-8" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Display initialization fix for SkyLake Graphics</li></ul><h4 id="v1-1-3-9"><a href="#v1-1-3-9" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v1-1-4-8"><a href="#v1-1-4-8" class="headerlink" title="v1.1.4"></a>v1.1.4</h4><ul><li>Fix for Kaby Lake Graphics added (Display initialization)</li></ul><h4 id="v1-1-5-6"><a href="#v1-1-5-6" class="headerlink" title="v1.1.5"></a>v1.1.5</h4><ul><li>Fix for Azul Graphics added (Display initialization)</li></ul><h4 id="v1-1-6-6"><a href="#v1-1-6-6" class="headerlink" title="v1.1.6"></a>v1.1.6</h4><ul><li>HighSierra compatibility, and bug fix: clear error status before routing</li></ul><h4 id="v1-1-7-5"><a href="#v1-1-7-5" class="headerlink" title="v1.1.7"></a>v1.1.7</h4><ul><li>Fix for HD4000 added (credits to PMHeart)</li></ul><h4 id="v1-2-0-6"><a href="#v1-2-0-6" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>XCode 9 &amp; Lilu 1.2.0 compatibility fixes (Lilu 1.2.0 is required)</li></ul><h4 id="v1-2-1-5"><a href="#v1-2-1-5" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>New boot  logo fix via restoring video memory content (no frame buffer reset)</li></ul><h4 id="v1-2-2-5"><a href="#v1-2-2-5" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>New boot-arg -igfxvesa is supported (to disable intel video acceleration completely)</li></ul><h4 id="v1-2-3-4"><a href="#v1-2-3-4" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Fix up will be loaded in safe mode (required to fix black screen)</li></ul><h4 id="v1-2-4-4"><a href="#v1-2-4-4" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>Fix for HD3000 added (credits to syscl)</li></ul><h4 id="v1-2-5-4"><a href="#v1-2-5-4" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Add basic automatic IGPU model detection if it is not set</li><li>Add IGPU device id correction (correct <code>device-id</code> should be set via device properties or ACPI</li><li>Add basic digital audio correction on (HDAU rename on Haswell and <code>layout-id</code>/<code>hda-gfx</code> where needed)</li><li>Add GFX0 -&gt; IGPU automatic rename</li><li>Add MEI/HECI -&gt; IMEI automatic rename</li><li>Add IMEI device id automatic correction on Sandy Bridge and Ivy Bridge</li><li>Add basic automatic AAPL,ig-platform-id injection (defaults to connector-less when AMD/NVIDIA is found)</li><li>Add GuC microcode loading on SKL (9.33) and KBL (9.39) in 10.13 (enabled via <code>igfxfw=1</code> boot-arg)</li><li>Add <code>igfxframe=frame</code> boot-arg for framebuffer id injection in testing cases</li><li>Fix booting without <code>-disablegfxfirmware</code> boot argument on KBL GPUs</li><li>Fix compatibility with connector-less frames</li><li>Minor performance improvements</li></ul><h4 id="v1-2-6-4"><a href="#v1-2-6-4" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Fix Skylake and KabyLake automatic framebuffer detection</li><li>Ensure standard connector-less framebuffers are used</li></ul><h4 id="v1-2-7-4"><a href="#v1-2-7-4" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Add <code>igfxgl=1</code> boot argument (and <code>disable-metal</code> property) to disable Metal support</li><li>Implement Gen6Accelerator with IntelAccelerator rename to fix GVA warnings (use <code>igfxsnb=0</code> boot argument to disable)</li><li>Harden solved symbol verification to avoid panics with broken kext cache</li><li>Replace connector-less Sandy Bridge framebuffer for unsupported macmodels from 0x30030 to 0x50000</li></ul><h3 id="NvidiaGraphicsFixup-Superseded-by-WhateverGreen"><a href="#NvidiaGraphicsFixup-Superseded-by-WhateverGreen" class="headerlink" title="NvidiaGraphicsFixup(Superseded by WhateverGreen)"></a>NvidiaGraphicsFixup(Superseded by WhateverGreen)</h3><h4 id="v1-2-7-5"><a href="#v1-2-7-5" class="headerlink" title="v1.2.7"></a>v1.2.7</h4><ul><li>Fix a name conflict for config variable</li></ul><h4 id="v1-2-6-5"><a href="#v1-2-6-5" class="headerlink" title="v1.2.6"></a>v1.2.6</h4><ul><li>Fixed compiling with older Xcode</li><li>Removed interface lags workaround for the Web drivers (starting with 387.10.10.10.30.106 it is present in the distribution), closes #15</li><li>Made ngfxcompat=0 explicitly disable NVDAStartupWeb.kext loading from HDD</li><li>Disabled AGDC patches for compatible models to avoid issues with IGPU switching on MacBooks</li></ul><h4 id="v1-2-5-5"><a href="#v1-2-5-5" class="headerlink" title="v1.2.5"></a>v1.2.5</h4><ul><li>Hardened solved symbol verification to avoid panics with broken kext cache</li><li>Added a workaround to interface lags in 10.13 ( add <code>ngfxsubmit=0</code> boot-argument to disable)</li><li>Fixed improperly working forced driver compatibility from 1.2.4</li></ul><p>With this change you may not need to disable Metal support. Make sure to restore CoreDisplay preferences:</p><pre><code>sudo defaults delete /Library/Preferences/com.apple.CoreDisplay useMetalsudo defaults delete /Library/Preferences/com.apple.CoreDisplay useIOP</code></pre><h4 id="v1-2-4-5"><a href="#v1-2-4-5" class="headerlink" title="v1.2.4"></a>v1.2.4</h4><ul><li>Added <code>ngfxgl=1</code> boot argument (and <code>disable-metal</code> property) to disable Metal support</li><li>Added <code>ngfxcompat=1</code> boot argument (and <code>force-compat</code> property) to ignore compatibility check in NVDAStartupWeb</li></ul><p>In order to boot with <code>ngfxgl=1</code> on 10.13.x you may need to set the defaults:</p><pre><code>sudo defaults write /Library/Preferences/com.apple.CoreDisplay useMetal -boolean nosudo defaults write /Library/Preferences/com.apple.CoreDisplay useIOP -boolean no</code></pre><h4 id="v1-2-3-5"><a href="#v1-2-3-5" class="headerlink" title="v1.2.3"></a>v1.2.3</h4><ul><li>Add AAPL,slot-name injection</li><li>Fix HDEF <code>layout-id</code> detection</li></ul><h4 id="v1-2-2-6"><a href="#v1-2-2-6" class="headerlink" title="v1.2.2"></a>v1.2.2</h4><ul><li>Fix up will be loaded in safe mode (required to fix black screen)</li></ul><h4 id="v1-2-1-6"><a href="#v1-2-1-6" class="headerlink" title="v1.2.1"></a>v1.2.1</h4><ul><li>All patches can be turned off by boot-args (and some of them can be also turned off by using ioreg properties)</li></ul><h4 id="v1-2-0-7"><a href="#v1-2-0-7" class="headerlink" title="v1.2.0"></a>v1.2.0</h4><ul><li>Lilu 1.2.0 compatibility fixes</li><li>NVidiaAudio device to add connector-type, layout-id and other properties for HDMI audio (allows audio for HDMI, DP, Digital DVI ports)</li><li>A new hook for nvAcceleratorParent::SetAccelProperties to add properties “IOVARendererID” and “IOVARendererSubID”</li><li>NVWebDriverLibValFix fix is implemented (csfg_get_platform_binary)</li></ul><h4 id="v1-1-3-10"><a href="#v1-1-3-10" class="headerlink" title="v1.1.3"></a>v1.1.3</h4><ul><li>High Sierra compatibility</li></ul><h4 id="v1-1-2-9"><a href="#v1-1-2-9" class="headerlink" title="v1.1.2"></a>v1.1.2</h4><ul><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1"></a>v1.1</h4><ul><li>Patch has been improved (vit9696)</li></ul><h4 id="v1-0-0-16"><a href="#v1-0-0-16" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h3 id="Shiki-Superseded-by-WhateverGreen"><a href="#Shiki-Superseded-by-WhateverGreen" class="headerlink" title="Shiki(Superseded by WhateverGreen)"></a>Shiki(Superseded by WhateverGreen)</h3><h4 id="v2-2-7"><a href="#v2-2-7" class="headerlink" title="v2.2.7"></a>v2.2.7</h4><ul><li>Disable iTunes hack on 10.13.5 and newer</li></ul><h4 id="v2-2-6"><a href="#v2-2-6" class="headerlink" title="v2.2.6"></a>v2.2.6</h4><ul><li>Added Photo Booth to NVIDIA whitelist</li><li>Disabled hardware accelerated renderer hacks on 10.13.4 and newer (Apple fix)</li><li>Removed Sandy Bridge Gen6Accelerator patch due to <a href="https://github.com/lvs1974/IntelGraphicsFixup/commit/13c64b0659b8eea24189377ff36be35e73474779" target="_blank" rel="noopener external nofollow noreferrer">better fix</a> in IntelGraphicsFixup </li></ul><h4 id="v2-2-5"><a href="#v2-2-5" class="headerlink" title="v2.2.5"></a>v2.2.5</h4><ul><li>Reenable iTunes crashfix hack on 10.13.x (since 10.13.4 seems to only reduce crash frequency)</li></ul><h4 id="v2-2-4"><a href="#v2-2-4" class="headerlink" title="v2.2.4"></a>v2.2.4</h4><ul><li>Added an AppleGVA patch to fix Sandy Bridge accelerator name (<code>shikigva=128</code>)</li><li>Added <code>/usr/libexec/AirPlayXPCHelper</code>, ffmpeg, Quick Look, and Photos to the renderer whitelist</li><li>Added Broadwell patches for compatible renderer (discrete GPU hardware acceleration)</li><li>Implemented GPU detection for compatible renderer, whitelist, and snb name (you can remove <code>shikigva</code>)</li><li>Fixed invalid Sandy Bridge compatible renderer patches</li><li>Disabled automatic iTunes crashfix hack for 10.13.4 and higher (you may have to reset DRM once you upgrade)</li></ul><h4 id="v2-2-3"><a href="#v2-2-3" class="headerlink" title="v2.2.3"></a>v2.2.3</h4><ul><li>Fixed a rare crash when IGPU was not renamed</li><li>Fixed a rare crash when patching AppleGVA for Ivy Bridge/AMD compatibility</li></ul><h4 id="v2-2-2"><a href="#v2-2-2" class="headerlink" title="v2.2.2"></a>v2.2.2</h4><ul><li>Improved compatible renderer patch to support Ivy and Sandy CPUs with AMD/NVIDIA</li><li>Changed <code>-shikifps</code> to <code>shikigva=64</code></li></ul><p>Note: all the <code>shikigva</code> bits are now fully described <a href="https://github.com/vit9696/Shiki/blob/master/Shiki/kern_start.cpp#L18" target="_blank" rel="noopener external nofollow noreferrer">here</a>.</p><h4 id="v2-2-1"><a href="#v2-2-1" class="headerlink" title="v2.2.1"></a>v2.2.1</h4><ul><li>Added DaVinci Resolve and mpv to NVIDIA whitelist</li><li>Added FaceTime, iMovie, and Live Screen Capture to NVIDIA whitelist</li></ul><h4 id="v2-2-0"><a href="#v2-2-0" class="headerlink" title="v2.2.0"></a>v2.2.0</h4><ul><li>Changed iTunes crash patch to a supposedly less destructive workaround</li><li>Added an ability to override mac model in AppleGVA (<code>shikigva=32</code>)</li><li>Added an argument to set custom mac model (<code>shiki-id=&lt;board-id&gt;</code> defaults to <code>iMac14,2</code>)</li><li>Fixed HEVC decoding on 10.13 SKL/KBL &amp; NVIDIA (thx Andrey1970 and all involved)</li><li>Added more processes to the temporary 10.13 NVIDIA whitelist (Chrome, Slack, VS Code)</li></ul><p>Note: <code>#ignore-gpu-blacklist</code> is necessary to be enabled in <code>chrome://flags</code> (see <a href="https://github.com/vit9696/Shiki/issues/13" target="_blank" rel="noopener external nofollow noreferrer">#13</a>)</p><h4 id="v2-1-1"><a href="#v2-1-1" class="headerlink" title="v2.1.1"></a>v2.1.1</h4><ul><li>Added a workaround for iTunes crashes in 10.13 (<code>shikigva=16</code>)</li><li>Autoenabled iTunes crash workaround in 10.13 with properly configured Ivy+ IGPU</li></ul><h4 id="v2-1-0"><a href="#v2-1-0" class="headerlink" title="v2.1.0"></a>v2.1.0</h4><ul><li>Requires Lilu 1.2.0 or higher</li><li>Added hardware video decoding fix for SKL/KBL &amp; NVIDIA (<code>shikigva=4</code>)</li><li>Added temporary process whitelist for 10.13 SKL/KBL &amp; NVIDIA (<code>shikigva=12</code>)</li></ul><h4 id="v2-0-5-1"><a href="#v2-0-5-1" class="headerlink" title="v2.0.5"></a>v2.0.5</h4><ul><li>Added High Sierra installer detection</li></ul><h4 id="v2-0-4-1"><a href="#v2-0-4-1" class="headerlink" title="v2.0.4"></a>v2.0.4</h4><ul><li>Added High Sierra to the list of compatible OS</li><li>Changed <code>-shikigva</code> to <code>shikigva=1</code></li><li>Added bit 2 to (e.g. <code>shikigva=2</code>) to disable hweBGRA (useful for some AMD)</li><li>Added FAQ in simplified Chinese (thx PMHeart)</li></ul><h4 id="v2-0-3-1"><a href="#v2-0-3-1" class="headerlink" title="v2.0.3"></a>v2.0.3</h4><ul><li>Incorporate safer patches accordingly to calling conventions</li></ul><h4 id="v2-0-2-1"><a href="#v2-0-2-1" class="headerlink" title="v2.0.2"></a>v2.0.2</h4><ul><li>Added OSBundleCompatibleVersion</li></ul><h4 id="v2-0-1-1"><a href="#v2-0-1-1" class="headerlink" title="v2.0.1"></a>v2.0.1</h4><ul><li>Requires Lilu 1.1.0 or newer</li><li>Added more key streaming patches for testing purposes</li><li>Added <code>-shikigva</code> boot argument to allow online hardware video decoder</li></ul><h4 id="v2-0-0-1"><a href="#v2-0-0-1" class="headerlink" title="v2.0.0"></a>v2.0.0</h4><ul><li>Rewrote as a <a href="https://github.com/vit9696/Lilu" target="_blank" rel="noopener external nofollow noreferrer">Lilu.kext</a> plugin</li><li>Added FAQ entries describing how to workaround Intel Azul freezes</li><li>Opened the source code</li></ul><h4 id="v1-9-0"><a href="#v1-9-0" class="headerlink" title="v1.9.0"></a>v1.9.0</h4><ul><li>Fixed error logging on 10.12</li><li>Added 10.12.1 beta compatibility</li></ul><h4 id="v1-8-1"><a href="#v1-8-1" class="headerlink" title="v1.8.1"></a>v1.8.1</h4><ul><li>Added fps.1_0 livestream playback to Safari via <code>-shikifps</code> boot argument</li><li>Added version print to the kernel log</li><li>Improved performance on 10.12, should be equal to 10.11 now</li><li>Enabled SSSE3 intrinsics to slightly improve the performance</li><li>Fixed a rare kernel panic on initialisation failure</li><li>Fixed a rare page fault during initialisation</li><li>Fixed page patcher failing to apply some modifications</li></ul><h4 id="v1-7-0"><a href="#v1-7-0" class="headerlink" title="v1.7.0"></a>v1.7.0</h4><ul><li>Fixed a rare kernel panic on 10.10 and 10.11</li><li>Fixed <code>-shikifast</code> mode for 10.12</li><li>Enabled <code>-shikifast</code> mode on 10.12 by default</li></ul><h4 id="v1-5-2"><a href="#v1-5-2" class="headerlink" title="v1.5.2"></a>v1.5.2</h4><ul><li>Disabled Shiki when loading in installer</li></ul><h4 id="v1-5-1"><a href="#v1-5-1" class="headerlink" title="v1.5.1"></a>v1.5.1</h4><ul><li>Disabled Shiki when loading in recovery</li></ul><h4 id="v1-5-0"><a href="#v1-5-0" class="headerlink" title="v1.5.0"></a>v1.5.0</h4><ul><li>Added 10.12 Beta support</li><li>Added VMware Fusion support (10.12 only)</li></ul><h4 id="v1-3-0-5"><a href="#v1-3-0-5" class="headerlink" title="v1.3.0"></a>v1.3.0</h4><ul><li>Fixed 10.9.x incompatibilities</li><li>Fixed rare kernel panics and hibernation issues</li><li>Added a possible workaround for 10.10 issues (<code>-shikislow</code> boot argument)</li><li>Improved overall stability and performance</li></ul><h4 id="v1-0-0-17"><a href="#v1-0-0-17" class="headerlink" title="v1.0.0"></a>v1.0.0</h4><ul><li>Initial release</li></ul><h2 id="下载链接"><a href="#下载链接" class="headerlink" title=" 下载链接"></a><i class="fa fa-cloud-download" aria-hidden="true"></i> 下载链接</h2><ul><li><p>Lilu<br>地址: <a href="https://taolu.lanzous.com/b01bd6kvi" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6kvi</a><br>密码: 350o</p></li><li><p>AirportBrcmFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6l7a" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l7a</a><br>密码: 5l83</p></li><li><p>AppleALC<br>地址: <a href="https://taolu.lanzous.com/b01bd6kre" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6kre</a><br>密码: 6iyy</p></li><li><p>ATH9KFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6ltc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6ltc</a><br>密码: 1qbm</p></li><li><p>BT4LEContinuityFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6l1e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l1e</a><br>密码: duas</p></li><li><p>CPUFriend<br>地址: <a href="https://taolu.lanzous.com/b01bd6l3g" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l3g</a><br>密码: g13t</p></li><li><p>DebugEnhancer<br>地址: <a href="https://taolu.lanzous.com/b01bd6lib" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lib</a><br>密码: ghwd</p></li><li><p>DiskArbitrationFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6mti" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6mti</a><br>密码: 468c</p></li><li><p>HibernationFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6leh" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6leh</a><br>密码: 53xu</p></li><li><p>MacProMemoryNotificationDisabler<br>地址: <a href="https://taolu.lanzous.com/b01bdrr1g" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrr1g</a><br>密码: hfq8</p></li><li><p>NightShiftEnabler<br>地址: <a href="https://taolu.lanzous.com/b01bdrr8d" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrr8d</a><br>密码: 8vgv</p></li><li><p>NoTouchID<br>地址: <a href="https://taolu.lanzous.com/b01bd6nid" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6nid</a><br>密码: b3uh</p></li><li><p>NVMeFix<br>地址: <a href="https://taolu.lanzous.com/b01bd6l2f" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l2f</a><br>密码: i913</p></li><li><p>OpcodeEmulator<br>地址: <a href="https://taolu.lanzous.com/b01bdrsbc" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrsbc</a><br>密码: 1bsn</p></li><li><p>RTCMemoryFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6l6j" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l6j</a><br>密码: hifk</p></li><li><p>SystemProfilerMemoryFixup<br>地址: <a href="https://taolu.lanzous.com/b01bd6nqb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6nqb</a><br>密码: 38uo</p></li><li><p>ThunderboltReset<br>地址: <a href="https://taolu.lanzous.com/b01bdrsyf" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrsyf</a><br>密码: 354v</p></li><li><p>VirtualSMC<br>地址: <a href="https://taolu.lanzous.com/b01bd6lgj" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6lgj</a><br>密码: apmu</p></li><li><p>WhateverGreen<br>地址: <a href="https://taolu.lanzous.com/b01bd6l8b" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6l8b</a><br>密码: 2e1m</p></li></ul><blockquote><p>已被合并弃用的插件</p></blockquote><ul><li><p>AzulPatcher4600(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bd6mod" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6mod</a><br>密码: 6mu9</p></li><li><p>AppleBacklightFixup(Superseded by WhateverGreen)</p><ul><li>暂无</li></ul></li><li><p>EnableLidWake(Superseded by WhateverGreen)</p><ul><li>暂无</li></ul></li><li><p>BrcmWLFixup(Superseded by AirportBrcmFixup)<br>地址: <a href="https://taolu.lanzous.com/b01bdrv5e" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrv5e</a><br>密码: 3yki</p></li><li><p>CoreDisplayFixup(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bdrvmb" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrvmb</a><br>密码: c8bb</p></li><li><p>NoVPAJpeg(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bdryli" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdryli</a><br>密码: 5uly</p></li><li><p>NightShiftUnlocker(Superseded by NightShiftEnabler)<br>地址: <a href="https://taolu.lanzous.com/b01bdrwte" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdrwte</a><br>密码: g4pl</p></li><li><p>IntelGraphicsDVMTFixup(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bd6n5a" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6n5a</a><br>密码: 7iiy</p></li><li><p>IntelGraphicsFixup(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bd6n4j" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6n4j</a><br>密码: hvr2</p></li><li><p>NvidiaGraphicsFixup(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bdryhe" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bdryhe</a><br>密码: 9to3</p></li><li><p>Shiki(Superseded by WhateverGreen)<br>地址: <a href="https://taolu.lanzous.com/b01bd6npa" target="_blank" rel="noopener external nofollow noreferrer">https://taolu.lanzous.com/b01bd6npa</a><br>密码: etz5</p></li></ul><h2 id="资源来源"><a href="#资源来源" class="headerlink" title=" 资源来源"></a><i class="fa fa-database" aria-hidden="true"></i> 资源来源</h2><p><a href="https://github.com/acidanthera/Lilu" target="_blank" rel="noopener external nofollow noreferrer">Lilu</a></p>]]></content>
      
      
      <categories>
          
          <category> Kext </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> Lilu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用驱动工具及引导程序下载</title>
      <link href="/hackintosh-tools.html"/>
      <url>/hackintosh-tools.html</url>
      
        <content type="html"><![CDATA[<ul><li>OpenCorePkg – 2020-5-20<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.0.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.0.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.0.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.0.4-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.0-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.1-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.1-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.1-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.1-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.2-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.2-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.2-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.2-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.3-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.4-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.5-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.5-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.5-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.5-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.6-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.6-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.6-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.6-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.7-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.7-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.7-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.7-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.8-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.8-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.8-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.8-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.9-Debug.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.9-Debug.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.9-Noopt.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.9-Noopt.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-0.5.9-Release.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-0.5.9-Release.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.1-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.1-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.1-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.1-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.2-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.2-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.2-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.2-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/OpenCorePkg/OpenCore-v0.0.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">OpenCore-v0.0.3-RELEASE.zip</a></li></ul></li><li>CLOVER – 2020-5-20<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Clover/Clover.app_v1.21.pkg" target="_blank" rel="noopener external nofollow noreferrer">Clover.app_v1.21.pkg</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Clover/Clover.app_v1.22.pkg" target="_blank" rel="noopener external nofollow noreferrer">Clover.app_v1.22.pkg</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Clover/Clover_r5116.pkg" target="_blank" rel="noopener external nofollow noreferrer">Clover_r5116.pkg</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Clover/Clover_r5117.pkg" target="_blank" rel="noopener external nofollow noreferrer">Clover_r5117.pkg</a></li></ul></li><li>Kexts<ul><li>ATH9KFixup – 2019-2-16<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/ATH9KFixup/ATH9KFixup-1.3.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">ATH9KFixup-1.3.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/ATH9KFixup/ATH9KFixup-1.3.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">ATH9KFixup-1.3.3-RELEASE.zip</a></li></ul></li><li>AirportBrcmFixup – 2020-4-24<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/AirportBrcmFixup/AirportBrcmFixup-2.0.7-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">AirportBrcmFixup-2.0.7-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/AirportBrcmFixup/AirportBrcmFixup-2.0.7-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">AirportBrcmFixup-2.0.7-RELEASE.zip</a></li></ul></li><li>AppleALC – 2020-5-8<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/AppleALC/AppleALC-1.5.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">AppleALC-1.5.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/AppleALC/AppleALC-1.5.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">AppleALC-1.5.0-RELEASE.zip</a></li></ul></li><li>BT4LEContinuityFixup – 2020-4-26<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/BT4LEContinuityFixup/BT4LEContinuityFixup-1.1.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">BT4LEContinuityFixup-1.1.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/BT4LEContinuityFixup/BT4LEContinuityFixup-1.1.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">BT4LEContinuityFixup-1.1.4-RELEASE.zip</a></li></ul></li><li>BrcmPatchRAM – 2020-4-23<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/BrcmPatchRAM/BrcmPatchRAM-2.5.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">BrcmPatchRAM-2.5.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/BrcmPatchRAM/BrcmPatchRAM-2.5.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">BrcmPatchRAM-2.5.3-RELEASE.zip</a></li></ul></li><li>CPUFriend – 2020-4-25<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/CPUFriend/CPUFriend-1.2.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">CPUFriend-1.2.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/CPUFriend/CPUFriend-1.2.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">CPUFriend-1.2.0-RELEASE.zip</a></li></ul></li><li>DebugEnhancer – 2020-3-23<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/DebugEnhancer/DebugEnhancer-1.0.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">DebugEnhancer-1.0.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/DebugEnhancer/DebugEnhancer-1.0.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">DebugEnhancer-1.0.0-RELEASE.zip</a></li></ul></li><li>DiskArbitrationFixup – 2020-2-26<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/DiskArbitrationFixup/DiskArbitrationFixup-1.0.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">DiskArbitrationFixup-1.0.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/DiskArbitrationFixup/DiskArbitrationFixup-1.0.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">DiskArbitrationFixup-1.0.0-RELEASE.zip</a></li></ul></li><li>HibernationFixup – 2020-4-22<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/HibernationFixup/HibernationFixup-1.3.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">HibernationFixup-1.3.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/HibernationFixup/HibernationFixup-1.3.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">HibernationFixup-1.3.3-RELEASE.zip</a></li></ul></li><li>IntelBluetoothFirmware – 2020-4-1<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/IntelBluetoothFirmware/IntelBluetoothFirmware-1.0.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">IntelBluetoothFirmware-1.0.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/IntelBluetoothFirmware/IntelBluetoothFirmware-1.0.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">IntelBluetoothFirmware-1.0.3-RELEASE.zip</a></li></ul></li><li>IntelMausi – 2020-5-9<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/IntelMausi/IntelMausi-1.0.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">IntelMausi-1.0.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/IntelMausi/IntelMausi-1.0.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">IntelMausi-1.0.3-RELEASE.zip</a></li></ul></li><li>IntelMausiEthernet – 2020-4-12<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/IntelMausiEthernet/IntelMausiEthernet-2.5.1d1.zip" target="_blank" rel="noopener external nofollow noreferrer">IntelMausiEthernet-2.5.1d1.zip</a></li></ul></li><li>Lilu – 2020-5-9<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/Lilu/Lilu-1.4.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">Lilu-1.4.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/Lilu/Lilu-1.4.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">Lilu-1.4.4-RELEASE.zip</a></li></ul></li><li>LucyRTL8125Ethernet – 2020-5-20<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/LucyRTL8125Ethernet/LucyRTL8125Ethernet-1.0.0d4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">LucyRTL8125Ethernet-1.0.0d4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/LucyRTL8125Ethernet/LucyRTL8125Ethernet-1.0.0d4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">LucyRTL8125Ethernet-1.0.0d4-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/LucyRTL8125Ethernet/LucyRTL8125Ethernet-1.0.0d5-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">LucyRTL8125Ethernet-1.0.0d5-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/LucyRTL8125Ethernet/LucyRTL8125Ethernet-1.0.0d5-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">LucyRTL8125Ethernet-1.0.0d5-RELEASE.zip</a></li></ul></li><li>MacProMemoryNotificationDisabler – 2020-4-6<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/MacProMemoryNotificationDisabler/MacProMemoryNotificationDisabler-1.0.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">MacProMemoryNotificationDisabler-1.0.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/MacProMemoryNotificationDisabler/MacProMemoryNotificationDisabler-1.0.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">MacProMemoryNotificationDisabler-1.0.0-RELEASE.zip</a></li></ul></li><li>NVMeFix – 2020-4-25<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/NVMeFix/NVMeFix-1.0.2-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">NVMeFix-1.0.2-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/NVMeFix/NVMeFix-1.0.2-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">NVMeFix-1.0.2-RELEASE.zip</a></li></ul></li><li>NoTouchID – 2019-11-27<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/NoTouchID/NoTouchID-1.0.3-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">NoTouchID-1.0.3-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/NoTouchID/NoTouchID-1.0.3-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">NoTouchID-1.0.3-RELEASE.zip</a></li></ul></li><li>RTCMemoryFixup – 2020-5-9<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/RTCMemoryFixup/RTCMemoryFixup-1.0.6-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">RTCMemoryFixup-1.0.6-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/RTCMemoryFixup/RTCMemoryFixup-1.0.6-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">RTCMemoryFixup-1.0.6-RELEASE.zip</a></li></ul></li><li>SystemProfilerMemoryFixup – 2019-11-27<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/SystemProfilerMemoryFixup/SystemProfilerMemoryFixup-1.0.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">SystemProfilerMemoryFixup-1.0.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/SystemProfilerMemoryFixup/SystemProfilerMemoryFixup-1.0.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">SystemProfilerMemoryFixup-1.0.0-RELEASE.zip</a></li></ul></li><li>ThunderboltReset – 2019-12-2<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/ThunderboltReset/ThunderboltReset-1.0.0d1-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">ThunderboltReset-1.0.0d1-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/ThunderboltReset/ThunderboltReset-1.0.0d1-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">ThunderboltReset-1.0.0d1-RELEASE.zip</a></li></ul></li><li>VirtualSMC – 2020-5-10<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VirtualSMC/VirtualSMC-1.1.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC-1.1.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VirtualSMC/VirtualSMC-1.1.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">VirtualSMC-1.1.4-RELEASE.zip</a></li></ul></li><li>VoodooI2C – 2020-5-20<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooI2C/VoodooI2C-2.4.2.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooI2C-2.4.2.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooI2C/VoodooI2C-Debug-Symbols-2.4.2.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooI2C-Debug-Symbols-2.4.2.zip</a></li></ul></li><li>VoodooInput – 2020-4-26<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooInput/VoodooInput-1.0.5-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooInput-1.0.5-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooInput/VoodooInput-1.0.5-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooInput-1.0.5-RELEASE.zip</a></li></ul></li><li>VoodooPS2Controller – 2020-5-12<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooPS2Controller/VoodooPS2Controller-2.1.4-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooPS2Controller-2.1.4-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/VoodooPS2Controller/VoodooPS2Controller-2.1.4-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">VoodooPS2Controller-2.1.4-RELEASE.zip</a></li></ul></li><li>WhateverGreen – 2020-5-18<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/WhateverGreen/WhateverGreen-1.3.9-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen-1.3.9-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/WhateverGreen/WhateverGreen-1.3.9-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen-1.3.9-RELEASE.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/WhateverGreen/WhateverGreen-1.4.0-DEBUG.zip" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen-1.4.0-DEBUG.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Kexts/WhateverGreen/WhateverGreen-1.4.0-RELEASE.zip" target="_blank" rel="noopener external nofollow noreferrer">WhateverGreen-1.4.0-RELEASE.zip</a></li></ul></li></ul></li><li>Software<ul><li>CPUS<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/CPUS/CPU-S%20v4.1.dmg" target="_blank" rel="noopener external nofollow noreferrer">CPU-S v4.1.dmg</a></li></ul></li><li>Clover Configurator<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/Clover%20Configurator/Clover%20Configurator%20v5.12.0.0-blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">Clover Configurator v5.12.0.0-blog.tlhub.cn.dmg</a></li></ul></li><li>GenI2C<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/GenI2C/GenI2C%20v1.3.1.dmg" target="_blank" rel="noopener external nofollow noreferrer">GenI2C v1.3.1.dmg</a></li></ul></li><li>Hackintool<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/Hackintool/Hackintool%20v3.4.0.dmg" target="_blank" rel="noopener external nofollow noreferrer">Hackintool v3.4.0.dmg</a></li></ul></li><li>IOJones<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/IOJones/IOJones%20v1.2.2.dmg" target="_blank" rel="noopener external nofollow noreferrer">IOJones v1.2.2.dmg</a></li></ul></li><li>IORegistryExplorer<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/IORegistryExplorer/IORegistryExplorer%20v3.0.2.dmg" target="_blank" rel="noopener external nofollow noreferrer">IORegistryExplorer v3.0.2.dmg</a></li></ul></li><li>MaciASL<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/MaciASL/MaciASL%20v1.5.7.dmg" target="_blank" rel="noopener external nofollow noreferrer">MaciASL v1.5.7.dmg</a></li></ul></li><li>Mos<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/Mos/Mos%20v2.4.0.dmg" target="_blank" rel="noopener external nofollow noreferrer">Mos v2.4.0.dmg</a></li></ul></li><li>NoSleep<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/NoSleep/NoSleep%20v1.1.1.dmg" target="_blank" rel="noopener external nofollow noreferrer">NoSleep v1.1.1.dmg</a></li></ul></li><li>OpenCore Configurator<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/OpenCore%20Configurator/OpenCore%20Configurator%20v2.2.0.0-blog.tlhub.cn.dmg" target="_blank" rel="noopener external nofollow noreferrer">OpenCore Configurator v2.2.0.0-blog.tlhub.cn.dmg</a></li></ul></li><li>PlistEdit Pro<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/PlistEdit%20Pro/PlistEdit%20Pro%20v1.9.1.dmg" target="_blank" rel="noopener external nofollow noreferrer">PlistEdit Pro v1.9.1.dmg</a></li></ul></li><li>Tuxera<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/Tuxera/Tuxera%20v2019.dmg" target="_blank" rel="noopener external nofollow noreferrer">Tuxera v2019.dmg</a></li></ul></li><li>shadowsocks<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/shadowsocks/ShadowsocksX-NG%20v1.9.4.dmg" target="_blank" rel="noopener external nofollow noreferrer">ShadowsocksX-NG v1.9.4.dmg</a></li></ul></li><li>v2ray<ul><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/v2ray/Qv2ray%20v2.5.0.dmg" target="_blank" rel="noopener external nofollow noreferrer">Qv2ray v2.5.0.dmg</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/v2ray/V2rayU%20v2.1.0.dmg" target="_blank" rel="noopener external nofollow noreferrer">V2rayU v2.1.0.dmg</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/v2ray/qv2ray%20v2.5.0.exe" target="_blank" rel="noopener external nofollow noreferrer">qv2ray v2.5.0.exe</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/v2ray/v2ray-macos.zip" target="_blank" rel="noopener external nofollow noreferrer">v2ray-macos.zip</a></li><li><a href="https://cdn.jsdelivr.net/gh/athlonreg/hacktools/Software/v2ray/v2ray-windows-64.zip" target="_blank" rel="noopener external nofollow noreferrer">v2ray-windows-64.zip</a></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Openldap 数据迁移</title>
      <link href="/Openldap-backup-and-recovery-data.html"/>
      <url>/Openldap-backup-and-recovery-data.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># slapcat > ldapbak.ldif            // 导出</span><span class="token comment" spellcheck="true"># systemctl stop slapd              // 停止服务</span><span class="token comment" spellcheck="true"># rm -rf /var/lib/ldap/*            // 删除原有数据</span><span class="token comment" spellcheck="true"># slapadd -l ldapbak.ldif           // 导入数据</span><span class="token comment" spellcheck="true"># chown -R ldap:ldap /var/lib/ldap  // 修复权限</span><span class="token comment" spellcheck="true"># systemctl start slapd             // 启动服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openldap </tag>
            
            <tag> 数据迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 Docker 镜像使用 systemd 服务</title>
      <link href="/Centos7-docker-image-with-systemd.html"/>
      <url>/Centos7-docker-image-with-systemd.html</url>
      
        <content type="html"><![CDATA[<h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><pre class="line-numbers language-bash"><code class="language-bash">FROM centos:7ENV container dockerRUN <span class="token punctuation">(</span>cd /lib/systemd/system/sysinit.target.wants/<span class="token punctuation">;</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> *<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">[</span> <span class="token variable">$i</span> <span class="token operator">==</span> \systemd-tmpfiles-setup.service <span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">rm</span> -f <span class="token variable">$i</span><span class="token punctuation">;</span> done<span class="token punctuation">)</span><span class="token punctuation">;</span> \<span class="token function">rm</span> -f /lib/systemd/system/multi-user.target.wants/*<span class="token punctuation">;</span>\<span class="token function">rm</span> -f /etc/systemd/system/*.wants/*<span class="token punctuation">;</span>\<span class="token function">rm</span> -f /lib/systemd/system/local-fs.target.wants/*<span class="token punctuation">;</span> \<span class="token function">rm</span> -f /lib/systemd/system/sockets.target.wants/*udev*<span class="token punctuation">;</span> \<span class="token function">rm</span> -f /lib/systemd/system/sockets.target.wants/*initctl*<span class="token punctuation">;</span> \<span class="token function">rm</span> -f /lib/systemd/system/basic.target.wants/*<span class="token punctuation">;</span>\<span class="token function">rm</span> -f /lib/systemd/system/anaconda.target.wants/*<span class="token punctuation">;</span>VOLUME <span class="token punctuation">[</span> <span class="token string">"/sys/fs/cgroup"</span> <span class="token punctuation">]</span>CMD <span class="token punctuation">[</span><span class="token string">"/usr/sbin/init"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Build-Command"><a href="#Build-Command" class="headerlink" title="Build Command"></a>Build Command</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># docker build --rm -t zhanghl/centos7.6.1810 /path/of/Dockerfile</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Example-Apache-Systemd-Service-To-Run"><a href="#Example-Apache-Systemd-Service-To-Run" class="headerlink" title="Example Apache Systemd Service To Run"></a>Example Apache Systemd Service To Run</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># docker run -it -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup --name centos7 -p 80:80 centos7.6.1810:latest /usr/sbin/init</span><span class="token comment" spellcheck="true"># docker exec -it centos /bin/bash</span>docker<span class="token comment" spellcheck="true"># yum -y install httpd</span>docker<span class="token comment" spellcheck="true"># systemctl start httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> centos </tag>
            
            <tag> systemd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat SonarQube Gerrit 设置 systemd 服务</title>
      <link href="/Systemd-service-file-of-sonar-gerrit-and-tomcat.html"/>
      <url>/Systemd-service-file-of-sonar-gerrit-and-tomcat.html</url>
      
        <content type="html"><![CDATA[<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /usr/lib/systemd/system/tomcat.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>TomcatAfter<span class="token operator">=</span>network.target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type<span class="token operator">=</span>oneshotExecStart<span class="token operator">=</span>/usr/local/tomcat/bin/startup.shExecStop<span class="token operator">=</span>/usr/local/tomcat/bin/shutdown.shExecReload<span class="token operator">=</span>/bin/kill -s HUP <span class="token variable">$MAINPID</span>RemainAfterExit<span class="token operator">=</span>yes<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SonarQube"><a href="#SonarQube" class="headerlink" title="SonarQube"></a>SonarQube</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /usr/lib/systemd/system/sonar.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>SonarQubeAfter<span class="token operator">=</span>network.target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type<span class="token operator">=</span>forkingExecStart<span class="token operator">=</span>/usr/local/sonarqube-7.5/bin/linux-x86-64/sonar.sh startExecStop<span class="token operator">=</span>/usr/local/sonarqube-7.5/bin/linux-x86-64/sonar.sh stopExecReload<span class="token operator">=</span>/usr/local/sonarqube-7.5/bin/linux-x86-64/sonar.sh restartUser<span class="token operator">=</span>sonarGroup<span class="token operator">=</span>sonar<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi-user.targetAlias<span class="token operator">=</span>sonarqube<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Gerrit-Code-Review"><a href="#Gerrit-Code-Review" class="headerlink" title="Gerrit Code Review"></a>Gerrit Code Review</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /usr/lib/systemd/system/gerrit.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>Gerrit Code ReviewAfter<span class="token operator">=</span>network.target httpd.service<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type<span class="token operator">=</span>oneshotRemainAfterExit<span class="token operator">=</span>yesExecStart<span class="token operator">=</span>/usr/local/review_site/bin/gerrit.sh startExecStop<span class="token operator">=</span>/usr/local/review_site/bin/gerrit.sh stopExecReload<span class="token operator">=</span>/usr/local/review_site/bin/gerrit.sh restart<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> systemd </tag>
            
            <tag> tomcat </tag>
            
            <tag> sonar </tag>
            
            <tag> sonarqube </tag>
            
            <tag> gerrit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 开启目录浏览功能</title>
      <link href="/Nginx-enable-directory-browser-function.html"/>
      <url>/Nginx-enable-directory-browser-function.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>编辑 nginx 配置文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">vim /etc/nginx/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在 http 下面加入以下配置</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">autoindex</span> <span class="token attr-value">on;</span><span class="token attr-name">autoindex_exact_size</span> <span class="token attr-value">off;</span><span class="token attr-name">autoindex_localtime</span> <span class="token attr-value">on;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>完整配置实例</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># For more information on configuration, see:</span><span class="token comment" spellcheck="true">#   * Official English Documentation: http://nginx.org/en/docs/</span><span class="token comment" spellcheck="true">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><span class="token attr-name">user</span> <span class="token attr-value">nginx;</span><span class="token attr-name">worker_processes</span> <span class="token attr-value">auto;</span><span class="token attr-name">error_log</span> <span class="token attr-value">/var/log/nginx/error.log;</span><span class="token attr-name">pid</span> <span class="token attr-value">/run/nginx.pid;</span><span class="token comment" spellcheck="true"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><span class="token attr-name">include</span> <span class="token attr-value">/usr/share/nginx/modules/*.conf;</span><span class="token attr-name">events</span> <span class="token attr-value">{</span><span class="token attr-name">    worker_connections</span> <span class="token attr-value">1024;</span>}<span class="token attr-name">http</span> <span class="token attr-value">{</span><span class="token attr-name">    autoindex</span> <span class="token attr-value">on;</span><span class="token attr-name">    autoindex_exact_size</span> <span class="token attr-value">off;</span><span class="token attr-name">    autoindex_localtime</span> <span class="token attr-value">on;</span><span class="token attr-name">    log_format</span> <span class="token attr-value"> main  '$remote_addr - $remote_user [$time_local] "$request" '</span><span class="token attr-name">                      '$status</span> <span class="token attr-value">$body_bytes_sent "$http_referer" '</span><span class="token attr-name">                      '"$http_user_agent"</span> <span class="token attr-value">"$http_x_forwarded_for"';</span><span class="token attr-name">    access_log</span> <span class="token attr-value"> /var/log/nginx/access.log  main;</span><span class="token attr-name">    sendfile</span> <span class="token attr-value">           on;</span><span class="token attr-name">    tcp_nopush</span> <span class="token attr-value">         on;</span><span class="token attr-name">    tcp_nodelay</span> <span class="token attr-value">        on;</span><span class="token attr-name">    keepalive_timeout</span> <span class="token attr-value">  65;</span><span class="token attr-name">    types_hash_max_size</span> <span class="token attr-value">2048;</span><span class="token attr-name">    include</span> <span class="token attr-value">            /etc/nginx/mime.types;</span><span class="token attr-name">    default_type</span> <span class="token attr-value">       application/octet-stream;</span><span class="token comment" spellcheck="true">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><span class="token comment" spellcheck="true">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><span class="token comment" spellcheck="true">    # for more information.</span><span class="token attr-name">    include</span> <span class="token attr-value">/etc/nginx/conf.d/*.conf;</span><span class="token attr-name">    server</span> <span class="token attr-value">{</span><span class="token attr-name">        listen</span> <span class="token attr-value">      81 default_server;</span><span class="token attr-name">        listen</span> <span class="token attr-value">      [::]:81 default_server;</span><span class="token attr-name">        server_name</span> <span class="token attr-value"> _;</span><span class="token attr-name">        root</span> <span class="token attr-value">        /usr/share/nginx/html;</span><span class="token comment" spellcheck="true">        # Load configuration files for the default server block.</span><span class="token attr-name">        include</span> <span class="token attr-value">/etc/nginx/default.d/*.conf;</span><span class="token attr-name">        location</span> <span class="token attr-value">/ {</span>        }<span class="token attr-name">        error_page</span> <span class="token attr-value">404 /404.html;</span><span class="token attr-name">            location</span> <span class="token punctuation">=</span> <span class="token attr-value">/40x.html {</span>        }<span class="token attr-name">        error_page</span> <span class="token attr-value">500 502 503 504 /50x.html;</span><span class="token attr-name">            location</span> <span class="token punctuation">=</span> <span class="token attr-value">/50x.html {</span>        }    }<span class="token comment" spellcheck="true"># Settings for a TLS enabled server.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#    server {</span><span class="token comment" spellcheck="true">#        listen       443 ssl http2 default_server;</span><span class="token comment" spellcheck="true">#        listen       [::]:443 ssl http2 default_server;</span><span class="token comment" spellcheck="true">#        server_name  _;</span><span class="token comment" spellcheck="true">#        root         /usr/share/nginx/html;</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#        ssl_certificate "/etc/pki/nginx/server.crt";</span><span class="token comment" spellcheck="true">#        ssl_certificate_key "/etc/pki/nginx/private/server.key";</span><span class="token comment" spellcheck="true">#        ssl_session_cache shared:SSL:1m;</span><span class="token comment" spellcheck="true">#        ssl_session_timeout  10m;</span><span class="token comment" spellcheck="true">#        ssl_ciphers HIGH:!aNULL:!MD5;</span><span class="token comment" spellcheck="true">#        ssl_prefer_server_ciphers on;</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#        # Load configuration files for the default server block.</span><span class="token comment" spellcheck="true">#        include /etc/nginx/default.d/*.conf;</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#        location / {</span><span class="token comment" spellcheck="true">#        }</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#        error_page 404 /404.html;</span><span class="token comment" spellcheck="true">#            location = /40x.html {</span><span class="token comment" spellcheck="true">#        }</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#        error_page 500 502 503 504 /50x.html;</span><span class="token comment" spellcheck="true">#            location = /50x.html {</span><span class="token comment" spellcheck="true">#        }</span><span class="token comment" spellcheck="true">#    }</span>}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 目录浏览 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复 Hexo 微博图床图片链接失效问题</title>
      <link href="/Fix-the-pictures-can-not-show-in-hexo-with-sina-weibo-picbed.html"/>
      <url>/Fix-the-pictures-can-not-show-in-hexo-with-sina-weibo-picbed.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>修改主题 head 文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /Users/canvas/athlonreg/themes/next/layout/_partials/head/head.swig</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>添加如下行</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>referrer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如图所示</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006yd6wMly1g4dszk5a0mj31eo0gegq3.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看当前系统是虚拟机还是实体机</title>
      <link href="/Check-current-system-is-vm-or-real.html"/>
      <url>/Check-current-system-is-vm-or-real.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash"><code class="language-bash">dmidecode -s system-product-name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>设置 postgresql 通过密码登录</title>
      <link href="/Setup-postgresql-login-by-password.html"/>
      <url>/Setup-postgresql-login-by-password.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>修改文件 pg_hba.conf</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">local</span> <span class="token attr-value">all all md5</span><span class="token attr-name">host</span> <span class="token attr-value"> all all 127.0.0.1/32 md5</span><span class="token attr-name">host</span> <span class="token attr-value">all all 192.168.45.0/32 md5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 部署配置 Redmine</title>
      <link href="/Deploy-redmine-on-CentOS7.html"/>
      <url>/Deploy-redmine-on-CentOS7.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Ruby-2-4"><a href="#安装-Ruby-2-4" class="headerlink" title="安装 Ruby 2.4"></a>安装 Ruby 2.4</h2><pre class="line-numbers language-bash"><code class="language-bash">yum <span class="token function">install</span> -y gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel <span class="token function">make</span> <span class="token function">bzip2</span> autoconf automake libtool bison ImageMagick-devel  ImageMagickyum -y <span class="token function">install</span> centos-release-scl-rhyum -y <span class="token function">install</span> rh-ruby24 scl <span class="token function">enable</span> rh-ruby24 <span class="token function">bash</span>ruby -v yum -y <span class="token function">install</span> rh-ruby24-rubygems rh-ruby24-ruby-develgem <span class="token function">source</span> -lgem sources -a http://mirrors.aliyun.com/rubygems/gem sources --remove  https://rubygems.org/gem <span class="token function">source</span> -ugem <span class="token function">source</span> -l <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h2><blockquote><p>建立相应数据库</p></blockquote><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> create user 'redmine'@'%' identified by '123456' ;mysql> create database redmine;mysql> grant all on redmine.* to 'redmine'@'%';mysql> flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装-redmine"><a href="#安装-redmine" class="headerlink" title="安装 redmine"></a>安装 redmine</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /usr/local<span class="token function">wget</span> https://www.redmine.org/releases/redmine-4.0.4.tar.gz<span class="token function">tar</span> zxvf redmine-4.0.4.tar.gz<span class="token function">mv</span> redmine-4.0.4 redmine<span class="token keyword">echo</span> <span class="token string">"export REDMINE=/usr/local/redmine"</span> <span class="token operator">>></span> /etc/profile<span class="token function">source</span> /etc/profile<span class="token function">cd</span> <span class="token variable">$REDMINE</span><span class="token function">cp</span> config/database.yml.example config/database.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>配置 redmine，修改 $REDMINE/config/database.yml</p></blockquote><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">production</span><span class="token punctuation">:</span>  <span class="token key atrule">adapter</span><span class="token punctuation">:</span> mysql2  <span class="token key atrule">database</span><span class="token punctuation">:</span> redmine  <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>  <span class="token key atrule">username</span><span class="token punctuation">:</span> redmine  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">"123456"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装-GEMS-依赖"><a href="#安装-GEMS-依赖" class="headerlink" title="安装 GEMS 依赖"></a>安装 GEMS 依赖</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> <span class="token variable">$REDMINE</span>gem <span class="token function">install</span> bundlerbundle <span class="token function">install</span> --without development <span class="token function">test</span> production <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="生成会话存储秘钥令牌"><a href="#生成会话存储秘钥令牌" class="headerlink" title="生成会话存储秘钥令牌"></a>生成会话存储秘钥令牌</h2><pre class="line-numbers language-bash"><code class="language-bash">bundle <span class="token function">exec</span> rake generate_secret_token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="生成数据库结构"><a href="#生成数据库结构" class="headerlink" title="生成数据库结构"></a>生成数据库结构</h2><pre class="line-numbers language-bash"><code class="language-bash">RAILS_ENV<span class="token operator">=</span>production REDMINE_LANG<span class="token operator">=</span>zh bundle <span class="token function">exec</span> rake db:migrate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="数据库插入默认数据"><a href="#数据库插入默认数据" class="headerlink" title="数据库插入默认数据"></a>数据库插入默认数据</h2><pre class="line-numbers language-bash"><code class="language-bash">RAILS_ENV<span class="token operator">=</span>production REDMINE_LANG<span class="token operator">=</span>zh bundle <span class="token function">exec</span> rake redmine:load_default_data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动-redmine"><a href="#启动-redmine" class="headerlink" title="启动 redmine"></a>启动 redmine</h2><pre class="line-numbers language-bash"><code class="language-bash">bundle <span class="token function">exec</span> rails server webrick -e production -b 127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置-LDAP-认证"><a href="#配置-LDAP-认证" class="headerlink" title="配置 LDAP 认证"></a>配置 LDAP 认证</h2><blockquote><p>依次打开 管理 -&gt; LDAP 认证 -&gt; 新建认证模式</p></blockquote><p>配置一个 ou=admin 的配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20190705161009.png" alt=""></p><p>同样的方法配置所需要的所有 ou，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20190705161320.png" alt=""></p><h2 id="配置-CAS-SSO"><a href="#配置-CAS-SSO" class="headerlink" title="配置 CAS SSO"></a>配置 CAS SSO</h2><blockquote><p>安装插件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> <span class="token variable">$REDMINE</span>/plugins<span class="token function">git</span> clone https://github.com/athlonreg/redmine_omniauth_cas<span class="token function">cd</span> redmine_omniauth_casbundle <span class="token function">install</span><span class="token function">cd</span> <span class="token variable">$REDMINE</span>bundle <span class="token function">install</span>RAILS_ENV<span class="token operator">=</span>production rake redmine:pluginsbundle <span class="token function">exec</span> rails server webrick -e production -b 127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>依次打开 管理 -&gt; 插件，点击插件 Redmine Omniauth plugin 后的配置</p></blockquote><p>配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/20190705162003.png" alt=""></p><blockquote><p>各字段含义对照表</p></blockquote><table><thead><tr><th>字段名称</th><th>字段含义</th></tr></thead><tbody><tr><td>Enable CAS authentication</td><td>是否启用 CAS 认证</td></tr><tr><td>CAS server URL</td><td>CAS 服务器地址</td></tr><tr><td>CAS validation URL (if different)</td><td>CAS 服务器身份验证接口地址</td></tr><tr><td>Login page text</td><td>登陆页面标题</td></tr><tr><td>Replace Redmine login page</td><td>是否使用 CAS 服务器的登陆界面替换插件提供的登录界面</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redmine </tag>
            
            <tag> 项目管理 </tag>
            
            <tag> 敏捷开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 安装配置 GitLab</title>
      <link href="/Setup-gitlab-to-support-frame.html"/>
      <url>/Setup-gitlab-to-support-frame.html</url>
      
        <content type="html"><![CDATA[<h2 id="CentOS-安装-GitLab"><a href="#CentOS-安装-GitLab" class="headerlink" title="CentOS 安装 GitLab"></a>CentOS 安装 GitLab</h2><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install curl</span><span class="token comment" spellcheck="true"># yum -y install postfix</span><span class="token comment" spellcheck="true"># systemctl start postfix</span><span class="token comment" spellcheck="true"># systemctl enable postfix</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="下载-GitLab-的-RPM-包"><a href="#下载-GitLab-的-RPM-包" class="headerlink" title="下载 GitLab 的 RPM 包"></a>下载 GitLab 的 RPM 包</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在<a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/" target="_blank" rel="noopener external nofollow noreferrer">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/</a>找自己需要的版本，下载到本地，然后安装即可</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -ivh  gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以这样</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum localinstall gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置-gitlab-repo"><a href="#配置-gitlab-repo" class="headerlink" title="配置 gitlab repo"></a>配置 gitlab repo</h2><p>为了后续升级方便，建议添加<code>gitlab</code>的<code>repo</code>源</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="端口修改"><a href="#端口修改" class="headerlink" title="端口修改"></a>端口修改</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/gitlab/gitlab.rb</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改下面的属性</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">external_url</span> <span class="token attr-value">'http://devops.iamzhl.top:8090'</span><span class="token attr-name">unicorn['port']</span> <span class="token punctuation">=</span> <span class="token attr-value">8070</span><span class="token attr-name">nginx['listen_port']</span> <span class="token punctuation">=</span> <span class="token attr-value">8090</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><em>请根据个人需要进行定制</em></p><h2 id="重新部署并重启"><a href="#重新部署并重启" class="headerlink" title="重新部署并重启"></a>重新部署并重启</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># gitlab-ctl reconfigure</span><span class="token comment" spellcheck="true"># gitlab-ctl restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="设置页面嵌套支持"><a href="#设置页面嵌套支持" class="headerlink" title="设置页面嵌套支持"></a>设置页面嵌套支持</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/opt/gitlab/nginx/conf/gitlab-http.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzqr3dsb7gj31p818kgzc.jpg" alt=""></p><p>如图，添加标注的属性设置后重启<code>GitLab</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># gitlab-ctl restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitLab </tag>
            
            <tag> frame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效利用有道云笔记</title>
      <link href="/How-to-use-youdao-note-in-a-special-way.html"/>
      <url>/How-to-use-youdao-note-in-a-special-way.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>先说几个博主和其他的码字农民工比较头疼的问题</p><ul><li>云同步</li></ul><p>现在是云的时代，没有云同步的码文环境不是一个好的环境，可能每个人都有不止一个码文平台，比如工作配的机器和私人的机器，我在其中一台机器写好的文章还要再写一份到另外的机器。。。简直不要太lower。可能有人说我们用某度网盘。。。What’s that？已经放弃好久，本文不做赘述，想用的就用吧。。。</p><ul><li>跨平台</li></ul><p>这里假设上面的环境成立，你有两台机器，私人的是Mac环境，工作机器是Windows，那么问题来了，之前我在Mac非常喜欢MWeb，因为它的图床集成让我着迷 ，截图粘贴一张引用外链的图片就这么完成了，就是这么快，但是现在也已经放弃了，因为Windows平台人家不做，不要问我为什么，我不想喷Windows太垃圾🌝🌝但是无奈单位只有Windows，于是我要用两套环境。。。记住两套快捷键。。。</p><ul><li>MarkDown</li></ul><p>关于MarkDown的介绍这里不赘述。于我而言，不支持MarkDown解析的编辑器，我是绝对不会用的，Word就工作用用。。。为何呢？因为MarkDown太优雅了，在我看来，Word和MarkDown就像50岁的大妈和20岁的妙龄少女，写文档发博文用Word简直是遭罪，用MarkDown简直是享受，当然啦，纯属个人看法，不喜勿喷。。。</p><ul><li>图床</li></ul><p>说完了MarkDown和云的问题，有一个问题很明显，云上的数据文字可以，图片甚至视频怎么办？难道我还要买个云存储甚至是云服务器？当然不用啦！国内有些大公司还是相当良心的，先神秘一下，具体用什么，下面详细说😄</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>编辑器<ul><li><a href="https://www.typora.io" target="_blank" rel="noopener external nofollow noreferrer">Typora</a></li></ul></li><li>截图工具<ul><li>Windows：<a href="https://snip.qq.com" target="_blank" rel="noopener external nofollow noreferrer">Snip</a></li><li>macOS：<a href="https://zh.xnipapp.com" target="_blank" rel="noopener external nofollow noreferrer">Xnip</a></li></ul></li><li>图床<ul><li>Sina Weobo账号(Sina的微博平台提供了一个图床服务，自带cdn)</li><li><a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener external nofollow noreferrer">PicGo</a></li></ul></li><li>云同步<ul><li><a href="http://note.youdao.com" target="_blank" rel="noopener external nofollow noreferrer">有道云笔记</a></li></ul></li></ul><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>其他的都没什么好说的，说一下PicGo的配置吧！首先在新浪微博官网登录微博账号，然后打开<a href="https://weibo.com/minipublish" target="_blank" rel="noopener external nofollow noreferrer">minipublish</a>页面，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzde3dq3hvj326w1e047w.jpg" alt=""></p><p>然后打开调试窗口，<code>Chrome</code>快捷键为<code>F12</code>，然后调到网络选项卡，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzde59wlkyj326w1e0gzx.jpg" alt=""></p><p>点击<code>minipublish</code>，查看一下Cookie值如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzde6i4je7j326w1e0tpj.jpg" alt=""></p><p>选中Cookie后面那一串字符，拷贝一下，打开<code>PicGo</code>窗口，找到图床设置 -&gt; 新浪图床，在Cookie后面的输入框粘贴刚才的字符串，勾选cookie模式，点击确定 -&gt; 设为默认图床，如下图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzde7rnurvj31eo0v847r.jpg" alt=""></p><p>这时候，用前文所说的截图工具或者自己喜欢的工具截图，然后按下刚刚设置的快捷键，图片就会上传到新浪微博的图床服务器，然后将图片的外链返回给剪贴板了。</p><p>在有道云随便建一个MarkDown文档，粘贴一下，如图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzdem32mcej320w1e0nep.jpg" alt=""></p><p>文档保存后，有道云笔记会自动帮我们进行云同步，从此不必担心其3G的空间不够用了。</p><p>当然啦，快捷键根据个人习惯在PicGo设置里面自行定义吧。</p><p><strong><em>新浪图床加入了防盗链，解决方法就是在 header 处加入下面的标签，但是可能会影响其他的组件，比如看板娘，因此可以选择其他平台，比如 GitHub，配合 delivr 的 cdn 加速，效果也是非常不错。</em></strong></p><pre class="line-numbers language-css"><code class="language-css">&lt;meta name=”referrer” content=”no-referrer“><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> 有道云笔记 </tag>
            
            <tag> Picbed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TestLink 整合 LDAP 和 CAS 单点登录</title>
      <link href="/TestLink-integrate-with-ldap-and-CAS.html"/>
      <url>/TestLink-integrate-with-ldap-and-CAS.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>TestLink 版本：2.18</li><li>TestLink URL：<a href="http://devops.iamzhl.top/testlink" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top/testlink</a></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<a href="http://devops.iamzhl.top:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas</a></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改TestLink配置文件"><a href="#修改TestLink配置文件" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/custom_config.inc.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>添加<code>LDAP</code>配置文件</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'method'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'LDAP'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_server'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'devops.iamzhl.top'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_port'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'389'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_version'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'3'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_root_dn'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'dc=iamzhl,dc=top'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_bind_dn'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'cn=Manager,dc=iamzhl,dc=top'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_bind_passwd'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_tls'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_organization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_uid_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'uid'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_email_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'mail'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_firstname_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'givenname'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'ldap_surname_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'sn'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap_automatic_user_creation'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap_email_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'mail'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap_firstname_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'givenname'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'ldap_surname_field'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'sn'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvp6j1abej328s1f8qb2.jpg" alt=""></p><p>如图，正常跳转到<code>TestLink</code>登录界面，输入<code>LDAP</code>服务器中的用户名密码后点击<code>Log in</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt=""></p><p>如图所示，登陆成功后正常的获取到了用户名，点击左上角的登出按钮，正常退出后跳转到了<code>TestLink</code>的登录界面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvuj3kqkjj328s1f8gtv.jpg" alt=""></p><p>至此，<code>TestLink</code>整合<code>LDAP</code>完成。</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="添加依赖的phpCAS库文件"><a href="#添加依赖的phpCAS库文件" class="headerlink" title="添加依赖的phpCAS库文件"></a>添加依赖的<code>phpCAS</code>库文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># tar zxvf phpCAS-1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># chown -R apache:apache phpCAS-1.3.6</span><span class="token comment" spellcheck="true"># cp -arf phpCAS-1.3.6/source/CAS.php /var/www/html/testlink/lib/functions/</span><span class="token comment" spellcheck="true"># cp -arf phpCAS-1.3.6/source/CAS /var/www/html/testlink/lib/functions/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改TestLink配置文件-1"><a href="#修改TestLink配置文件-1" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/custom_config.inc.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>添加<code>CAS</code>配置项</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">/** CAS server parameters */</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_enable'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'devops.iamzhl.top'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_port'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_path'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'cas'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_debug_enable'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_debug_file'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'/var/logs/testlink/phpCAS.log'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_protocol'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'2.0'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改登录界面"><a href="#修改登录界面" class="headerlink" title="修改登录界面"></a>修改登录界面</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/login.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在<code>switch($args-&gt;action)</code>分支选择语句段内找到<code>case 'loginform'</code>部分，添加<code>CAS</code>的认证</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">case</span> <span class="token string">'doLogin'</span><span class="token punctuation">:</span>  <span class="token keyword">case</span> <span class="token string">'ajaxlogin'</span><span class="token punctuation">:</span>    <span class="token function">doSessionStart</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// When doing ajax login we need to skip control regarding session already open</span>    <span class="token comment" spellcheck="true">// that we use when doing normal login.</span>    <span class="token comment" spellcheck="true">// If we do not proceed this way we will enter an infinite loop</span>    <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'doSessionExistsCheck'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token operator">==</span><span class="token string">'doLogin'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token function">doAuthorize</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">login</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">pwd</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$doAuthPostProcess</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">draw</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">case</span> <span class="token string">'ajaxcheck'</span><span class="token punctuation">:</span>    <span class="token function">processAjaxCheck</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">case</span> <span class="token string">'oauth'</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//If code is empty then break</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">renderLoginScreen</span><span class="token punctuation">(</span><span class="token variable">$gui</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Switch between oauth providers</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string">'lib/functions/oauth_providers/'</span><span class="token punctuation">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'oauth'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Oauth client doesn't exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$oau</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span><span class="token string">'OAuthServers'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$oau</span> <span class="token keyword">as</span> <span class="token variable">$oprov</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token variable">$oprov</span><span class="token punctuation">[</span><span class="token string">'oauth_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'oauth'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$oauth_params</span> <span class="token operator">=</span> <span class="token variable">$oprov</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token variable">$user_token</span> <span class="token operator">=</span> <span class="token function">oauth_get_token</span><span class="token punctuation">(</span><span class="token variable">$oauth_params</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user_token</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">status</span><span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> tl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">doSessionStart</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token function">doAuthorize</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$user_token</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">user</span><span class="token punctuation">,</span><span class="token string">'oauth'</span><span class="token punctuation">,</span><span class="token variable">$user_token</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$doAuthPostProcess</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span> <span class="token operator">=</span> <span class="token variable">$user_token</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">status</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">renderLoginScreen</span><span class="token punctuation">(</span><span class="token variable">$gui</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">case</span> <span class="token string">'loginform'</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">//zhanghl start</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_enable'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_debug_enable'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token punctuation">{</span>          phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_debug_file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token comment" spellcheck="true">// Initialize phpCAS</span>       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_protocol'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_port'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// For production use set the CA certificate that is the issuer of the cert</span>       <span class="token comment" spellcheck="true">// on the CAS server and uncomment the line below</span>       <span class="token comment" spellcheck="true">// phpCAS::setCasServerCACert($cas_server_ca_cert_path);</span>       <span class="token comment" spellcheck="true">// For quick testing you can disable SSL validation of the CAS server.</span>       <span class="token comment" spellcheck="true">// THIS SETTING IS NOT RECOMMENDED FOR PRODUCTION.</span>       <span class="token comment" spellcheck="true">// VALIDATING THE CAS SERVER IS CRUCIAL TO THE SECURITY OF THE CAS PROTOCOL!</span>       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setNoCasServerValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// Override the validation url for any (ST and PT) CAS 2.0 validation</span>       <span class="token comment" spellcheck="true">//phpCAS::setServerProxyValidateURL('http://devops.iamzhl.top:8080/cas/proxyValidate');</span>       <span class="token comment" spellcheck="true">// Override the validation url for any CAS 1.0 validation</span>       <span class="token comment" spellcheck="true">//phpCAS::setServerServiceValidateURL('http://devops.iamzhl.top:8080/cas/serviceValidate');</span>       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">handleLogoutRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">forceAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'doSessionExistsCheck'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">action</span><span class="token operator">==</span><span class="token string">'doLogin'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token function">doCASAuthorize</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$doAuthPostProcess</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//zhanghl end</span>        <span class="token variable">$doRenderLoginScreen</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">draw</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// unfortunatelly we use $args->note in order to do some logic.</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">)</span>        <span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authCfg</span><span class="token punctuation">[</span><span class="token string">'SSO_enabled'</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>          <span class="token punctuation">{</span>            <span class="token function">doSessionStart</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$doAuthPostProcess</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authCfg</span><span class="token punctuation">[</span><span class="token string">'SSO_method'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>             <span class="token punctuation">{</span>              <span class="token keyword">case</span> <span class="token string">'CLIENT_CERTIFICATE'</span><span class="token punctuation">:</span>                <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token function">doSSOClientCertificate</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$_SERVER</span><span class="token punctuation">,</span><span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authCfg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">break</span><span class="token punctuation">;</span>              <span class="token keyword">case</span> <span class="token string">'WEBSERVER_VAR'</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true">//DEBUGsyslogOnCloud('Trying to execute SSO using SAML');</span>                <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token function">doSSOWebServerVar</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authCfg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//zhanghl start</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//zhanghl end</span>  <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在<code>init_gui</code>函数内找到<code>switch($args-&gt;note)</code>分支语句，在<code>expired</code>分支下添加一行重定向调用</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token string">'expired'</span><span class="token punctuation">:</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token function">session_unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span> <span class="token operator">=</span> <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'session_expired'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">reqURI</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 添加重定向调用</span>      <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token constant">TL_BASE_HREF</span> <span class="token punctuation">.</span><span class="token string">"login.php?destination="</span><span class="token punctuation">.</span><span class="token variable">$args</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">destination</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'first'</span><span class="token punctuation">:</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span> <span class="token operator">=</span> <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'your_first_login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">reqURI</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'lost'</span><span class="token punctuation">:</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span> <span class="token operator">=</span> <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'passwd_lost'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">reqURI</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>      <span class="token variable">$gui</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">note</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改登出界面"><a href="#修改登出界面" class="headerlink" title="修改登出界面"></a>修改登出界面</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /var/www/html/testlink/logout.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在<code>$authCfg = config_get('authentication');</code>语句之后添加<code>CAS</code>的登出处理</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_enable'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_debug_enable'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>      phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_debug_file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">// Initialize phpCAS</span>   phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_protocol'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_port'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_server_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">"login.php?note=logout"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改common-php全局引用文件"><a href="#修改common-php全局引用文件" class="headerlink" title="修改common.php全局引用文件"></a>修改<code>common.php</code>全局引用文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/lib/functions/common.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在<code>require_once('tlsmarty.inc.php');</code>引用的前面增加对<code>CAS</code>的引用</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">/** TestLink CAS Authentication Ref */</span><span class="token variable">$authCfg</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span><span class="token string">'authentication'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$authCfg</span><span class="token punctuation">[</span><span class="token string">'cas_enable'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">// Load the CAS lib</span>   <span class="token keyword">require_once</span> <span class="token string">'CAS.php'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvnthnmyaj31p818kn8o.jpg" alt=""></p><h3 id="修改认证函数"><a href="#修改认证函数" class="headerlink" title="修改认证函数"></a>修改认证函数</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/lib/functions/doAuthorize.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在开头<code>require_once</code>语句的后面添加<code>CAS</code>认证函数</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// zhanghl start</span><span class="token keyword">function</span> <span class="token function">doCASAuthorize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$options</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">global</span> <span class="token variable">$g_tlLogger</span><span class="token punctuation">;</span>   <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'status'</span> <span class="token operator">=</span><span class="token operator">></span> tl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERROR</span><span class="token punctuation">,</span> <span class="token string">'msg'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">tlUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">login</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'phpCAS'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token variable">$login_exists</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">readFromDB</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span>tlUser<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">USER_O_SEARCH_BYLOGIN</span><span class="token punctuation">)</span> <span class="token operator">>=</span> tl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$login_exists</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span>      <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">tlUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">login</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'phpCAS'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">isActive</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span> <span class="token operator">=</span> <span class="token string">'LDAP'</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// force for auth_does_password_match</span>      <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">login</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// write password on DB anyway</span>   <span class="token punctuation">}</span>   <span class="token comment" spellcheck="true">//$user->emailAddress = $_SESSION['phpCAS']['attributes']['mail'];</span>   <span class="token comment" spellcheck="true">//$user->firstName = $_SESSION['phpCAS']['attributes']['sn'];</span>   <span class="token comment" spellcheck="true">//$user->lastName = $_SESSION['phpCAS']['attributes']['givenName'];</span>   <span class="token variable">$doLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">writeToDB</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">)</span> <span class="token operator">==</span> tl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$doLogin</span> <span class="token punctuation">)</span>   <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// Need to do set COOKIE following Mantis model</span>      <span class="token variable">$auth_cookie_name</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span><span class="token string">'auth_cookie'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$expireOnBrowserClose</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token variable">$auth_cookie_name</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getSecurityCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">$expireOnBrowserClose</span><span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// Disallow two sessions within one browser</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'currentUser'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'currentUser'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>         <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'login_msg_session_exists1'</span><span class="token punctuation">)</span> <span class="token punctuation">.</span>            <span class="token string">' &lt;a style="color:white;" href="logout.php">'</span> <span class="token punctuation">.</span>            <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'logout_link'</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'&lt;/a>'</span> <span class="token punctuation">.</span> <span class="token function">lang_get</span><span class="token punctuation">(</span><span class="token string">'login_msg_session_exists2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">else</span>      <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// Setting user's session information</span>         <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'currentUser'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token punctuation">;</span>         <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'lastActivity'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$g_tlLogger</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">endTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$g_tlLogger</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">setUserSession</span><span class="token punctuation">(</span><span class="token variable">$db</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">login</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dbID</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">globalRoleID</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">emailAddress</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">locale</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">=</span> tl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">OK</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>   <span class="token punctuation">}</span>   <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// zhanghl end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改全局配置文件-可选"><a href="#修改全局配置文件-可选" class="headerlink" title="修改全局配置文件 (可选)"></a>修改全局配置文件 (可选)</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/config.inc.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>增加<code>CAS</code>认证属性</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">/** CAS server properties */</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_enable'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_port'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_path'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'cas'</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_debug_enable'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_debug_file'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$tlCfg</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">authentication</span><span class="token punctuation">[</span><span class="token string">'cas_server_protocol'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><em>Note：此选项用以设置默认属性值，主要用来日后查阅，可以不写，<code>/var/www/html/testlink/custom_config.inc.php</code>文件相同的属性配置会覆盖生效。</em></strong></p><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/testlink/lib/functions/CAS/Client.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>将如下几个函数中的<code>https</code>改为<code>http</code>即可</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">_getServerBaseURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// the URL is build only when needed</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// $this->_server['base_url'] = 'https://' . $this->_getServerHostname();</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token operator">=</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//' . $this->_getServerHostname();</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">443</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">':'</span>                <span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">_getCallbackURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// the URL is built when needed only</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$final_uri</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// remove the ticket if present in the URL</span>        <span class="token comment" spellcheck="true">// $final_uri = 'https://';</span>        <span class="token variable">$final_uri</span> <span class="token operator">=</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//';</span>        <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getClientUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$request_uri</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$request_uri</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string">'/\?.*$/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$request_uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$request_uri</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span> <span class="token operator">=</span> <span class="token variable">$final_uri</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">traceBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// the URL is built when needed only</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$final_uri</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// remove the ticket if present in the URL</span>        <span class="token comment" spellcheck="true">// $final_uri = ($this->_isHttps()) ? 'https' : 'http';</span>        <span class="token variable">$final_uri</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_isHttps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">'http'</span> <span class="token punctuation">:</span> <span class="token string">'http'</span><span class="token punctuation">;</span>        <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> '<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//';</span>        <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getClientUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$request_uri</span>    <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$final_uri</span>        <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$request_uri</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$request_uri</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$request_uri</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$query_string</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_removeParameterFromQueryString</span><span class="token punctuation">(</span><span class="token string">'ticket'</span><span class="token punctuation">,</span> <span class="token variable">$request_uri</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// If the query string still has anything left,</span>            <span class="token comment" spellcheck="true">// append it to the final URI</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$query_string</span> <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$final_uri</span>    <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">"?$query_string"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"Final URI: $final_uri"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setURL</span><span class="token punctuation">(</span><span class="token variable">$final_uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_url</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>debug</code>调试目录</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mkdir /var/log/testlink</span><span class="token comment" spellcheck="true"># chown -R apache:apache /var/log/testlink</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvougi1woj32221fcdv4.jpg" alt=""></p><p>如图所示，正常跳转到<code>CAS</code>的登录界面，地址变成了<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Ftestlink%2Flogin.php</code>，输入用户名密码后点击登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt=""></p><p>如图登陆成功后正常获取用户名，点击左上角的登出按钮后，正常退出到<code>CAS</code>登出页面</p><p>![image-20181205173735167](/Users/canvas/Library/Application Support/typora-user-images/image-20181205173735167.png)</p><p>至此，<code>TestLink</code>整合<code>CAS</code>单点登录完成。</p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> LDAP </tag>
            
            <tag> TestLink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MantisBT 整合 LDAP 和 CAS 单点登录</title>
      <link href="/MantisBT-integrate-with-ldap-and-CAS.html"/>
      <url>/MantisBT-integrate-with-ldap-and-CAS.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>MantisBT 版本：2.18</li><li>Mantis URL：<a href="http://devops.iamzhl.top/mantis" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top/mantis</a></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<a href="http://devops.iamzhl.top:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas</a></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改MantisBT配置文件"><a href="#修改MantisBT配置文件" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><blockquote><p>添加以下配置项</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment"># MantisBT Authentication and LDAP Settings #</span><span class="token variable">$g_login_method</span> <span class="token operator">=</span> <span class="token constant">LDAP</span><span class="token punctuation">;</span><span class="token variable">$g_reauthentication</span> <span class="token operator">=</span> <span class="token constant">ON</span><span class="token punctuation">;</span><span class="token variable">$g_reauthentication_expiry</span> <span class="token operator">=</span> <span class="token constant">TOKEN_EXPIRY_AUTHENTICATED</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_server</span> <span class="token operator">=</span> 'ldap<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//devops.iamzhl.top:389';</span><span class="token variable">$g_ldap_root_dn</span> <span class="token operator">=</span> <span class="token string">'ou=People,dc=iamzhl,dc=top'</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_protocol_version</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_organization</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_bind_dn</span> <span class="token operator">=</span> <span class="token string">'cn=Manager,dc=iamzhl,dc=top'</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_bind_passwd</span> <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_uid_field</span> <span class="token operator">=</span> <span class="token string">'uid'</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_realname_field</span> <span class="token operator">=</span> <span class="token string">'cn'</span><span class="token punctuation">;</span><span class="token variable">$g_use_ldap_realname</span> <span class="token operator">=</span> <span class="token constant">ON</span><span class="token punctuation">;</span><span class="token variable">$g_use_ldap_email</span> <span class="token operator">=</span> <span class="token constant">ON</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开<code>MantisBT</code>网址，输入用户名密码点击登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/dd/a754582a7218fd2860d31fb543c667.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/07/158dfd797dce0fa01335dd8d9b5085.jpg" alt=""></p><p>登陆成功后，正常获取用户名</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/5d/e2fd0f937861208615ce61fae90423.jpg" alt=""></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到登录界面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/5e/e198803ba7693b67b5e6c5fc075ab5.jpg" alt=""></p><p>至此，<code>MantisBT</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><h3 id="下载phpCAS放到MantisBT下"><a href="#下载phpCAS放到MantisBT下" class="headerlink" title="下载phpCAS放到MantisBT下"></a>下载<code>phpCAS</code>放到<code>MantisBT</code>下</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># tar zxvf phpCAS-1.3.6.tar.gz</span><span class="token comment" spellcheck="true"># chown -R apache:apache phpCAS-1.3.6</span><span class="token comment" spellcheck="true"># cp -arf phpCAS-1.3.6 /var/www/html/mantis/phpCAS</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改MantisBT配置文件-1"><a href="#修改MantisBT配置文件-1" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/config/config_inc.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>添加<code>CAS</code>认证需要的变量(请按照自己的<code>LDAP</code>服务器进行修改)</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment"># MantisBT Authentication With CAS Settings #</span><span class="token variable">$g_login_method</span> <span class="token operator">=</span> <span class="token constant">CAS</span><span class="token punctuation">;</span><span class="token variable">$g_cas_server</span> <span class="token operator">=</span> <span class="token string">'devops.iamzhl.top'</span><span class="token punctuation">;</span><span class="token variable">$g_cas_port</span> <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span><span class="token variable">$g_cas_uri</span> <span class="token operator">=</span> <span class="token string">'/cas'</span><span class="token punctuation">;</span><span class="token variable">$g_cas_validate</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$g_cas_version</span> <span class="token operator">=</span> <span class="token string">'2.0'</span><span class="token punctuation">;</span><span class="token variable">$g_cas_debug</span> <span class="token operator">=</span> <span class="token string">'/var/www/html/mantis/cas.log'</span><span class="token punctuation">;</span><span class="token variable">$g_cas_saml_attributes</span> <span class="token operator">=</span> <span class="token constant">OFF</span><span class="token punctuation">;</span><span class="token variable">$g_cas_saml_map</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token string">'name'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'mail'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$g_cas_use_ldap</span> <span class="token operator">=</span> <span class="token constant">ON</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_mantis_uid</span>  <span class="token operator">=</span> <span class="token string">'uid'</span><span class="token punctuation">;</span><span class="token variable">$g_cas_ldap_update</span>  <span class="token operator">=</span> <span class="token constant">OFF</span><span class="token punctuation">;</span><span class="token variable">$g_cas_ldap_update_fields</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$g_cas_ldap_update_map</span>    <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_language_field</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$g_ldap_language_keys</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改登录页面"><a href="#修改登录页面" class="headerlink" title="修改登录页面"></a>修改登录页面</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/login_page.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span><span class="token keyword">require_once</span><span class="token punctuation">(</span> <span class="token string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">auth_is_user_authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">current_user_is_anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">print_header_redirect</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'default_home_page'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/login.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 在判断变量 f_install 的判断语句之后添加下面的判断语句来判断验证方式，若为 CAS ，则利用 auth_cas_get_name 函数来处理</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token constant">CAS</span> <span class="token operator">==</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token shell-comment comment"># This will detour to the CAS login page if needed</span>    <span class="token variable">$f_password</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token variable">$f_username</span> <span class="token operator">=</span> <span class="token function">auth_cas_get_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token shell-comment comment"># User is always authenticated by this point</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/login_password_page.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">auth_is_user_authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">current_user_is_anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">print_header_redirect</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'default_home_page'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$f_username</span>              <span class="token operator">=</span> <span class="token function">gpc_get_string</span><span class="token punctuation">(</span> <span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token string">''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment"># zhanghl start</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$f_username</span> <span class="token operator">==</span> <span class="token string">''</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$f_username</span> <span class="token operator">=</span> <span class="token variable">$staffid</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token shell-comment comment"># zhanghl end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改登出页面"><a href="#修改登出页面" class="headerlink" title="修改登出页面"></a>修改登出页面</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/logout_page.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span><span class="token keyword">require_once</span><span class="token punctuation">(</span> <span class="token string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment"># Cache the current logout redirect page as it will be cleared by auth_logout()</span><span class="token comment" spellcheck="true">//$t_logout_redirect = auth_logout_redirect_page();</span><span class="token comment" spellcheck="true">//auth_logout();</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setVerbose</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">handleLogoutRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//print_header_redirect( $t_logout_redirect, true, false );</span><span class="token function">print_header_redirect</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'logout_redirect_page'</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改验证逻辑"><a href="#修改验证逻辑" class="headerlink" title="修改验证逻辑"></a>修改验证逻辑</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/core/authentication_api.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 在变量 g_cache_current_user_id 的定义后面添加以下函数，定义 CAS 的登录逻辑</span><span class="token comment" spellcheck="true">/*** Initialize phpCAS.*/</span><span class="token keyword">function</span> <span class="token function">auth_cas_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token shell-comment comment"># phpCAS must be installed in the include path</span>       <span class="token shell-comment comment"># or in the Mantis directory.</span>       <span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string">'/var/www/html/mantis/phpCAS/CAS.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">static</span> <span class="token variable">$s_initialized</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$s_initialized</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>               phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setDebug</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_debug'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token shell-comment comment">## These should be set in config_inc.php</span>               <span class="token variable">$t_server_version</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_version'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token variable">$t_server_cas_server</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_server'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token variable">$t_server_port</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_port'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token variable">$t_server_uri</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_uri'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token variable">$t_start_session</span> <span class="token operator">=</span> <span class="token punctuation">(</span>boolean<span class="token punctuation">)</span><span class="token constant">FALSE</span><span class="token punctuation">;</span> <span class="token shell-comment comment"># Mantis takes care of its own session</span>               phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token variable">$t_server_version</span><span class="token punctuation">,</span> <span class="token variable">$t_server_cas_server</span><span class="token punctuation">,</span> <span class="token variable">$t_server_port</span><span class="token punctuation">,</span> <span class="token variable">$t_server_uri</span><span class="token punctuation">,</span> <span class="token variable">$t_start_session</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$t_server_version</span> <span class="token operator">==</span> <span class="token string">"S1"</span><span class="token punctuation">)</span>                       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setServerSamlValidateURL</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_validate'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">else</span>                       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setServerProxyValidateURL</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_validate'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token string">'phpCAS'</span><span class="token punctuation">,</span> <span class="token string">'setNoCasServerValidation'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                       <span class="token comment" spellcheck="true">// no SSL validation for the CAS server</span>                       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setNoCasServerValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token variable">$s_initialized</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** Fetches the user's CAS name, authenticating if needed.* Can translate CAS login name to Mantis username through LDAP.*/</span><span class="token keyword">function</span> <span class="token function">auth_cas_get_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token shell-comment comment"># Get CAS username from phpCAS</span>       <span class="token function">auth_cas_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">forceAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_cas_id</span> <span class="token operator">=</span> phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_cas_attribs</span> <span class="token operator">=</span> phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># If needed, translate the CAS username through LDAP</span>       <span class="token variable">$t_username</span> <span class="token operator">=</span> <span class="token variable">$t_cas_id</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_use_ldap'</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token variable">$t_username</span> <span class="token operator">=</span> <span class="token function">auth_cas_ldap_translate</span><span class="token punctuation">(</span> <span class="token variable">$t_cas_id</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_saml_attributes'</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token variable">$t_cas_attribmap</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_saml_map'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token variable">$t_cas_attrib_name</span> <span class="token operator">=</span> <span class="token variable">$t_cas_attribs</span><span class="token punctuation">[</span><span class="token variable">$t_cas_attribmap</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token variable">$t_cas_attrib_mail</span> <span class="token operator">=</span> <span class="token variable">$t_cas_attribs</span><span class="token punctuation">[</span><span class="token variable">$t_cas_attribmap</span><span class="token punctuation">[</span><span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">user_get_id_by_name</span><span class="token punctuation">(</span><span class="token variable">$t_cas_id</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                       <span class="token function">user_create</span><span class="token punctuation">(</span> <span class="token variable">$t_cas_id</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$t_cas_attrib_mail</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token variable">$t_cas_attrib_name</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token variable">$t_username</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** Takes an ID string, and looks up the LDAP directory to find* the matching username for Mantis.** Optionally, also update the user information in the Mantis user* table.** @param $p_cas_id string Typically, the username given by phpCAS.* @param $p_update_user bool Whether or not to update user details from LDAP.*/</span><span class="token keyword">function</span> <span class="token function">auth_cas_ldap_translate</span><span class="token punctuation">(</span> <span class="token variable">$p_cas_id</span><span class="token punctuation">,</span> <span class="token variable">$p_update_user</span><span class="token operator">=</span><span class="token string">''</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token shell-comment comment"># Please make sure the Mantis CAS and LDAP settings are set in config_inc.php</span>       <span class="token variable">$t_ldap_organization</span>    <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_organization'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_ldap_root_dn</span>         <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_root_dn'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># Required fields in LDAP for CAS</span>       <span class="token variable">$t_ldap_language_field</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_language_field'</span><span class="token punctuation">,</span> <span class="token string">''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_ldap_uid_field</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_uid_field'</span><span class="token punctuation">,</span> <span class="token string">'uid'</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>       <span class="token variable">$t_ldap_mantis_uid</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_mantis_uid'</span><span class="token punctuation">,</span> <span class="token string">'uid'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_ldap_required</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token variable">$t_ldap_uid_field</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_mantis_uid</span><span class="token punctuation">,</span> <span class="token string">'dn'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$t_ldap_language_field</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">// Add language field to attributes list only if it is configured.</span>               <span class="token variable">$t_ldap_required</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$t_ldap_language_field</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token variable">$t_ldap_required</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span> <span class="token variable">$t_ldap_required</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_required</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># User-defined fields to fetch from LDAP...</span>       <span class="token variable">$t_ldap_fields</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span> <span class="token string">','</span><span class="token punctuation">,</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_ldap_update_fields'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_ldap_fields</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span> <span class="token variable">$t_ldap_fields</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_fields</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># ...which are mapped to Mantis user fields</span>       <span class="token variable">$t_ldap_map</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span> <span class="token string">','</span><span class="token punctuation">,</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_ldap_update_map'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_ldap_map</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span> <span class="token variable">$t_ldap_map</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_map</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># Build LDAP search filter, attribute list from CAS ID</span>       <span class="token variable">$t_search_filter</span> <span class="token operator">=</span> <span class="token string">"(&amp;$t_ldap_organization($t_ldap_uid_field=$p_cas_id))"</span><span class="token punctuation">;</span>       <span class="token variable">$t_search_attrs</span> <span class="token operator">=</span> <span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$t_ldap_required</span> <span class="token operator">+</span> <span class="token variable">$t_ldap_fields</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token shell-comment comment"># array union</span>       <span class="token shell-comment comment"># Use Mantis ldap_api to connect to LDAP</span>       <span class="token variable">$t_ds</span> <span class="token operator">=</span> <span class="token function">ldap_connect_bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_sr</span>   <span class="token operator">=</span> <span class="token function">ldap_search</span><span class="token punctuation">(</span> <span class="token variable">$t_ds</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_root_dn</span><span class="token punctuation">,</span> <span class="token variable">$t_search_filter</span><span class="token punctuation">,</span> <span class="token variable">$t_search_attrs</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$t_info</span> <span class="token operator">=</span> <span class="token function">ldap_get_entries</span><span class="token punctuation">(</span> <span class="token variable">$t_ds</span><span class="token punctuation">,</span> <span class="token variable">$t_sr</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token shell-comment comment"># Parse the LDAP entry to find the Mantis username</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$t_info</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token shell-comment comment"># Get Mantis username</span>               <span class="token variable">$t_username</span> <span class="token operator">=</span> <span class="token variable">$t_info</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$t_ldap_mantis_uid</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token shell-comment comment"># @@@ The fact that we got here means the user is authenticated</span>               <span class="token shell-comment comment"># @@@ by CAS, and has an LDAP entry.</span>               <span class="token shell-comment comment"># @@@ We might as well update other user details since we are here.</span>               <span class="token shell-comment comment"># If no argument given, check settings</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token string">''</span> <span class="token operator">==</span> <span class="token variable">$p_update_user</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                       <span class="token variable">$p_update_user</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'cas_ldap_update'</span><span class="token punctuation">,</span> <span class="token constant">FALSE</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>               <span class="token shell-comment comment"># If there's a user record, then update it</span>               <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$p_update_user</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                       <span class="token shell-comment comment"># Only proceed if the field map arrays are the same length</span>                       <span class="token variable">$t_field_map</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span> <span class="token variable">$t_ldap_fields</span><span class="token punctuation">,</span> <span class="token variable">$t_ldap_map</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$t_field_map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                               <span class="token shell-comment comment"># If user is new, then we must create their account before updating it</span>                               <span class="token shell-comment comment"># @@@ ( make sure $g_allow_blank_email == ON )</span>                               <span class="token variable">$t_userid</span> <span class="token operator">=</span> <span class="token function">user_get_id_by_name</span><span class="token punctuation">(</span><span class="token variable">$t_username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token boolean">false</span> <span class="token operator">==</span> <span class="token variable">$t_userid</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                                       <span class="token function">user_create</span><span class="token punctuation">(</span> <span class="token variable">$t_username</span><span class="token punctuation">,</span> <span class="token string">''</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token shell-comment comment"># @@@ Wow, this is pretty lame</span>                                       <span class="token variable">$t_userid</span> <span class="token operator">=</span> <span class="token function">user_get_id_by_name</span><span class="token punctuation">(</span><span class="token variable">$t_username</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token punctuation">}</span>                               <span class="token shell-comment comment"># @@@ maybe we can optimize this to write all fields at once?</span>                             <span class="token keyword">foreach</span> <span class="token punctuation">(</span> <span class="token variable">$t_field_map</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$t_userfield</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                                     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$t_info</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                             <span class="token function">user_set_field</span><span class="token punctuation">(</span> <span class="token variable">$t_userid</span><span class="token punctuation">,</span> <span class="token variable">$t_userfield</span><span class="token punctuation">,</span> <span class="token variable">$t_info</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token punctuation">}</span>                             <span class="token punctuation">}</span>                       <span class="token punctuation">}</span>                       <span class="token comment" spellcheck="true">// Update user's overall language preference</span>                       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$t_ldap_language_field</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                               <span class="token variable">$t_language</span> <span class="token operator">=</span> <span class="token variable">$t_info</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$t_ldap_language_field</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                               <span class="token comment" spellcheck="true">// Map the LDAP language field to Mantis' language field if needed</span>                               <span class="token variable">$t_language_keys</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_language_keys'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token variable">$t_language_values</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'ldap_language_values'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token variable">$t_language_map</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span>                                       <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> <span class="token variable">$t_language_keys</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                       <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> <span class="token variable">$t_language_values</span><span class="token punctuation">)</span>                               <span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$t_language_map</span><span class="token punctuation">[</span><span class="token variable">$t_language</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                       <span class="token variable">$t_language</span> <span class="token operator">=</span> <span class="token variable">$t_language_map</span><span class="token punctuation">[</span><span class="token variable">$t_language</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                               <span class="token punctuation">}</span>                               <span class="token function">user_pref_set_pref</span><span class="token punctuation">(</span><span class="token variable">$t_userid</span><span class="token punctuation">,</span> <span class="token string">'language'</span><span class="token punctuation">,</span> <span class="token variable">$t_language</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">}</span>               <span class="token punctuation">}</span>       <span class="token punctuation">}</span>       <span class="token function">ldap_free_result</span><span class="token punctuation">(</span> <span class="token variable">$t_sr</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">ldap_unbind</span><span class="token punctuation">(</span> <span class="token variable">$t_ds</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token variable">$t_username</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** Logs out of CAS, redirecting to Mantis on re-login.* User should already be logged out of Mantis by the time this is called.* @see auth_logout()*/</span><span class="token keyword">function</span> <span class="token function">auth_cas_logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token variable">$t_path</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">auth_cas_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_Exists</span><span class="token punctuation">(</span><span class="token string">'phpCAS'</span><span class="token punctuation">,</span> <span class="token string">'logoutWithUrl'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">logoutWithUrl</span><span class="token punctuation">(</span><span class="token variable">$t_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>               phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token variable">$t_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// zhanghl end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 修改 auth_auto_create_user 函数实现 CAS 自动创建用户</span><span class="token keyword">function</span> <span class="token function">auth_auto_create_user</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span><span class="token punctuation">,</span> <span class="token variable">$p_password</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$t_login_method</span> <span class="token operator">=</span> <span class="token function">config_get_global</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// if( $t_login_method == BASIC_AUTH ) {</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">in_array</span><span class="token punctuation">(</span> <span class="token variable">$t_login_method</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token constant">BASIC_AUTH</span><span class="token punctuation">,</span> <span class="token constant">CAS</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token shell-comment comment"># attempt to create the user if using BASIC_AUTH or CAS</span>        <span class="token variable">$t_auto_create</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$t_login_method</span> <span class="token operator">==</span> <span class="token constant">LDAP</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ldap_authenticate_by_username</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span><span class="token punctuation">,</span> <span class="token variable">$p_password</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$t_auto_create</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$t_auto_create</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token constant">CAS</span> <span class="token operator">==</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token shell-comment comment"># Redirect to CAS page to logout</span>        <span class="token function">auth_cas_logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$t_auto_create</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token shell-comment comment"># attempt to create the user</span>        <span class="token variable">$t_cookie_string</span> <span class="token operator">=</span> <span class="token function">user_create</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$p_password</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$t_cookie_string</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token shell-comment comment"># it didn't work</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token shell-comment comment"># ok, we created the user, get the row again</span>        <span class="token keyword">return</span> <span class="token function">user_get_id_by_name</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">session_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">auth_attempt_login</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span><span class="token punctuation">,</span> <span class="token variable">$p_password</span><span class="token punctuation">,</span> <span class="token variable">$p_perm_login</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$t_user_id</span> <span class="token operator">=</span> <span class="token function">auth_get_user_id_from_login_name</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$t_login_method</span> <span class="token operator">=</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">in_array</span><span class="token punctuation">(</span> <span class="token variable">$t_login_method</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token constant">BASIC_AUTH</span><span class="token punctuation">,</span> <span class="token constant">CAS</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token shell-comment comment"># attempt to create the user if using BASIC_AUTH or CAS</span>            <span class="token shell-comment comment"># ( note: CAS must have $g_allow_blank_email == ON )</span>             <span class="token variable">$t_auto_create</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$t_user_id</span> <span class="token operator">=</span> <span class="token function">auth_auto_create_user</span><span class="token punctuation">(</span> <span class="token variable">$p_username</span><span class="token punctuation">,</span> <span class="token variable">$p_password</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment"># max. failed login attempts achieved...</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">user_is_login_request_allowed</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token shell-comment comment"># check for anonymous login</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">user_is_anonymous</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token shell-comment comment"># anonymous login didn't work, so check the password</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">auth_does_password_match</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span><span class="token punctuation">,</span> <span class="token variable">$p_password</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">user_increment_failed_login_count</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">auth_login_user</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span><span class="token punctuation">,</span> <span class="token variable">$p_perm_login</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">auth_logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">global</span> <span class="token variable">$g_cache_current_user_id</span><span class="token punctuation">,</span> <span class="token variable">$g_cache_cookie_valid</span><span class="token punctuation">;</span>    <span class="token shell-comment comment"># clear cached userid</span>    <span class="token function">user_clear_cache</span><span class="token punctuation">(</span> <span class="token variable">$g_cache_current_user_id</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">current_user_set</span><span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$g_cache_cookie_valid</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token shell-comment comment"># clear cookies, if they were set</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">auth_clear_cookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">helper_clear_pref_cookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token constant">HTTP_AUTH</span> <span class="token operator">==</span> <span class="token function">config_get_global</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">auth_http_set_logout_pending</span><span class="token punctuation">(</span> <span class="token boolean">true</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">elseif</span> <span class="token punctuation">(</span> <span class="token constant">CAS</span> <span class="token operator">==</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token shell-comment comment"># Redirect to CAS page to logout</span>            <span class="token function">auth_cas_logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">session_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">auth_automatic_logon_bypass_form</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span> <span class="token function">config_get</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token constant">HTTP_AUTH</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token constant">CAS</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//return config_get_global( 'login_method' ) == HTTP_AUTH;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">auth_does_password_match</span><span class="token punctuation">(</span> <span class="token variable">$p_user_id</span><span class="token punctuation">,</span> <span class="token variable">$p_test_password</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$t_configured_login_method</span> <span class="token operator">=</span> <span class="token function">config_get_global</span><span class="token punctuation">(</span> <span class="token string">'login_method'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token constant">LDAP</span> <span class="token operator">==</span> <span class="token variable">$t_configured_login_method</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">ldap_authenticate</span><span class="token punctuation">(</span> <span class="token variable">$p_user_id</span><span class="token punctuation">,</span> <span class="token variable">$p_test_password</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">elseif</span> <span class="token punctuation">(</span> <span class="token constant">CAS</span> <span class="token operator">==</span> <span class="token variable">$t_configured_login_method</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">auth_can_use_standard_login</span><span class="token punctuation">(</span> <span class="token variable">$p_user_id</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$t_password</span> <span class="token operator">=</span> <span class="token function">user_get_field</span><span class="token punctuation">(</span> <span class="token variable">$p_user_id</span><span class="token punctuation">,</span> <span class="token string">'password'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$t_login_methods</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>        <span class="token constant">MD5</span><span class="token punctuation">,</span>        <span class="token constant">CRYPT</span><span class="token punctuation">,</span>        <span class="token constant">PLAIN</span><span class="token punctuation">,</span>        <span class="token constant">BASIC_AUTH</span><span class="token punctuation">,</span>        <span class="token constant">CAS</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span> <span class="token variable">$t_login_methods</span> <span class="token keyword">as</span> <span class="token variable">$t_login_method</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token shell-comment comment"># pass the stored password in as the salt</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">auth_process_plain_password</span><span class="token punctuation">(</span> <span class="token variable">$p_test_password</span><span class="token punctuation">,</span> <span class="token variable">$t_password</span><span class="token punctuation">,</span> <span class="token variable">$t_login_method</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token variable">$t_password</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token shell-comment comment"># Do not support migration to PLAIN, since this would be a crazy thing to do.</span>            <span class="token shell-comment comment"># Also if we do, then a user will be able to login by providing the MD5 value</span>            <span class="token shell-comment comment"># that is copied from the database.  See #8467 for more details.</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$t_configured_login_method</span> <span class="token operator">!=</span> <span class="token constant">PLAIN</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$t_login_method</span> <span class="token operator">==</span> <span class="token constant">PLAIN</span> <span class="token punctuation">)</span> <span class="token operator">||</span>                <span class="token punctuation">(</span> <span class="token variable">$t_configured_login_method</span> <span class="token operator">!=</span> <span class="token constant">BASIC_AUTH</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$t_login_method</span> <span class="token operator">==</span> <span class="token constant">BASIC_AUTH</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token shell-comment comment"># Check for migration to another login method and test whether the password was encrypted</span>            <span class="token shell-comment comment"># with our previously insecure implementation of the CRYPT method</span>            <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$t_login_method</span> <span class="token operator">!=</span> <span class="token variable">$t_configured_login_method</span> <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span> <span class="token constant">CRYPT</span> <span class="token operator">==</span> <span class="token variable">$t_configured_login_method</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span> <span class="token variable">$t_password</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span> <span class="token variable">$p_test_password</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">user_set_password</span><span class="token punctuation">(</span> <span class="token variable">$p_user_id</span><span class="token punctuation">,</span> <span class="token variable">$p_test_password</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">auth_reauthenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//if( !auth_reauthentication_enabled() || BASIC_AUTH == config_get_global( 'login_method' ) || HTTP_AUTH == config_get_global( 'login_method' ) ) {</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">auth_reauthentication_enabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token function">config_get</span><span class="token punctuation">(</span><span class="token string">'login_method'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token constant">BASIC_AUTH</span><span class="token punctuation">,</span> <span class="token constant">HTTP_AUTH</span><span class="token punctuation">,</span> <span class="token constant">CAS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$t_auth_token</span> <span class="token operator">=</span> <span class="token function">token_get</span><span class="token punctuation">(</span> <span class="token constant">TOKEN_AUTHENTICATED</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token operator">!=</span> <span class="token variable">$t_auth_token</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">token_touch</span><span class="token punctuation">(</span> <span class="token variable">$t_auth_token</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">auth_reauthentication_expiry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$t_anon_account</span> <span class="token operator">=</span> <span class="token function">auth_anonymous_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$t_anon_allowed</span> <span class="token operator">=</span> <span class="token function">auth_anonymous_enabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$t_user_id</span> <span class="token operator">=</span> <span class="token function">auth_get_current_user_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$t_username</span> <span class="token operator">=</span> <span class="token function">user_get_username</span><span class="token punctuation">(</span> <span class="token variable">$t_user_id</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token shell-comment comment"># check for anonymous login</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token constant">ON</span> <span class="token operator">==</span> <span class="token variable">$t_anon_allowed</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$t_anon_account</span> <span class="token operator">==</span> <span class="token variable">$t_username</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$t_request_uri</span> <span class="token operator">=</span> <span class="token function">string_url</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$t_query_params</span> <span class="token operator">=</span> <span class="token function">http_build_query</span><span class="token punctuation">(</span>            <span class="token keyword">array</span><span class="token punctuation">(</span>                <span class="token string">'reauthenticate'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token string">'username'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$t_username</span><span class="token punctuation">,</span>                <span class="token string">'return'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$t_request_uri</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'&amp;'</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token shell-comment comment"># redirect to login page</span>        <span class="token function">print_header_redirect</span><span class="token punctuation">(</span> <span class="token function">auth_credential_page</span><span class="token punctuation">(</span> <span class="token variable">$t_query_params</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建login-cas-php处理拦截利用CAS认证登录"><a href="#新建login-cas-php处理拦截利用CAS认证登录" class="headerlink" title="新建login_cas.php处理拦截利用CAS认证登录"></a>新建<code>login_cas.php</code>处理拦截利用<code>CAS</code>认证登录</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#  vi /var/www/html/mantis/phpCAS/login_cas.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span> <span class="token string">'CAS.php'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'CAS_ENABLE'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cas_host</span> <span class="token operator">=</span> <span class="token string">'devops.iamzhl.top'</span><span class="token punctuation">;</span><span class="token variable">$cas_context</span> <span class="token operator">=</span> <span class="token string">'/cas'</span><span class="token punctuation">;</span><span class="token variable">$cas_port</span> <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span><span class="token variable">$cas_real_hosts</span> <span class="token operator">=</span> <span class="token keyword">array</span> <span class="token punctuation">(</span>    <span class="token string">'devops.iamzhl.top'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setVerbose</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">client</span><span class="token punctuation">(</span><span class="token constant">CAS_VERSION_2_0</span><span class="token punctuation">,</span> <span class="token variable">$cas_host</span><span class="token punctuation">,</span> <span class="token variable">$cas_port</span><span class="token punctuation">,</span> <span class="token variable">$cas_context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">setNoCasServerValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">handleLogoutRequests</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token variable">$cas_real_hosts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>phpCAS<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">forceAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /var/www/html/mantis/phpCAS/source/CAS/Client.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>将如下几个函数中的https改为http即可</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">_getServerBaseURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// the URL is build only when needed</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//$this->_server['base_url'] = 'https://' . $this->_getServerHostname();</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token operator">=</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//' . $this->_getServerHostname();</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">443</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token string">':'</span>                <span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getServerURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_server</span><span class="token punctuation">[</span><span class="token string">'base_url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">_getCallbackURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// the URL is built when needed only</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$final_uri</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// remove the ticket if present in the URL</span>            <span class="token comment" spellcheck="true">//$final_uri = 'https://';</span>            <span class="token variable">$final_uri</span> <span class="token operator">=</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//';</span>            <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">_getClientUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$request_uri</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$request_uri</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string">'/\?.*$/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$request_uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$final_uri</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$request_uri</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span> <span class="token operator">=</span> <span class="token variable">$final_uri</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_callback_url</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>public function getURL()    {        phpCAS::traceBegin();        // the URL is built when needed only        if ( empty($this-&gt;_url) ) {            $final_uri = '';            // remove the ticket if present in the URL            //$final_uri = ($this-&gt;_isHttps()) ? 'https' : 'http';            $final_uri = ($this-&gt;_isHttps()) ? 'http' : 'http';            $final_uri .= '://';            $final_uri .= $this-&gt;_getClientUrl();            $request_uri        = explode('?', $_SERVER['REQUEST_URI'], 2);            $final_uri          .= $request_uri[0];            if (isset($request_uri[1]) &amp;&amp; $request_uri[1]) {                $query_string= $this-&gt;_removeParameterFromQueryString('ticket', $request_uri[1]);                // If the query string still has anything left,                // append it to the final URI                if ($query_string !== '') {                    $final_uri  .= "?$query_string";                }            }            phpCAS::trace("Final URI: $final_uri");            $this-&gt;setURL($final_uri);        }        phpCAS::traceEnd($this-&gt;_url);        return $this-&gt;_url;    }</code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>log</code>目录</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mkdir /var/log/mantis</span><span class="token comment" spellcheck="true"># chown -R apache:apache /var/log/mantis</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打开<code>MantisBT</code>网址，正常跳转至<code>CAS</code>登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Fmantis%2Flogin_page.php</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/fa/f707556ce41d95b71052d07834f5d8.jpg" alt=""></p><p>如图，输入用户名密码后点击登录，正常登陆后跳转至<code>MantisBT</code>主页，并且正常获取用户名</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/49/1365298ec15c90fbf95612a38606ed.jpg" alt=""></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到<code>CAS</code>的登出界面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/85/2d25e40bdf97b6f06dad6239cf3167.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> LDAP </tag>
            
            <tag> MantisBT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gerrit 整合 ldap 和 CAS 单点登录</title>
      <link href="/Gerrit-integrate-with-ldap-and-CAS.html"/>
      <url>/Gerrit-integrate-with-ldap-and-CAS.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Gerrit 版本：2.16</li><li>Gerrit URL：<a href="http://devops.iamzhl.top:82" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:82</a></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<a href="http://devops.iamzhl.top:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas</a></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改-gerrit-config"><a href="#修改-gerrit-config" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/review_site/etc/gerrit.config</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>请根据自己的<code>LDAP</code>服务器信息进行定制</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties">[auth]<span class="token attr-name">        type</span> <span class="token punctuation">=</span> <span class="token attr-value">LDAP</span>[ldap]<span class="token attr-name">        server</span> <span class="token punctuation">=</span> <span class="token attr-value">ldap://devops.iamzhl.top:389</span><span class="token attr-name">        username</span> <span class="token punctuation">=</span> <span class="token attr-value">cn=Manager,dc=iamzhl,dc=top</span><span class="token attr-name">        password</span> <span class="token punctuation">=</span> <span class="token attr-value">passwd</span><span class="token attr-name">        accountBase</span> <span class="token punctuation">=</span> <span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span class="token attr-name">        groupBase</span> <span class="token punctuation">=</span> <span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span class="token attr-name">        accountFullName</span> <span class="token punctuation">=</span> <span class="token attr-value">uid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># gerrit restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:8081</code>，进入到<code>Gerrit</code>主页面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt=""></p><p>点击右上角<code>Sign in</code>，进入登录界面，输入<code>LDAP</code>服务器中的用户名和密码，然后点击<code>Sign in</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/5e/3a439fb1bcfae0116018eaca7dd987.jpg" alt=""></p><p>登录成功后跳转到用户主页面，正常获取用户名</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/3d/ea561210f011755f97aec7c4a90b59.jpg" alt=""></p><p>点击用户名 -&gt; Sign Out，正常退出</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt=""></p><p>至此，<code>Gerrit</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS"><a href="#整合-CAS" class="headerlink" title="整合 CAS"></a>整合 CAS</h2><h3 id="修改-gerrit-config-1"><a href="#修改-gerrit-config-1" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/review_site/etc/gerrit.config</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>[auth]</code>部分</p><pre class="line-numbers language-properties"><code class="language-properties">[auth]<span class="token attr-name">        type</span> <span class="token punctuation">=</span> <span class="token attr-value">HTTP</span><span class="token attr-name">        httpHeader</span> <span class="token punctuation">=</span> <span class="token attr-value">X-Forwarded-Gerrit</span><span class="token attr-name">        logoutUrl</span> <span class="token punctuation">=</span> <span class="token attr-value">http://devops.iamzhl.top:8080/cas/logout</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install mod_auth_cas</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置<code>mod_auth_cas</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/httpd/conf.d/auth_cas.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">LogLevel</span> <span class="token attr-value">Debug</span><span class="token attr-name">CASDebug</span> <span class="token attr-value">On</span><span class="token attr-name">CASVersion</span> <span class="token attr-value">2</span><span class="token attr-name">CASTimeout</span> <span class="token attr-value">1740</span><span class="token attr-name">CASIdleTimeout</span> <span class="token attr-value">1740</span><span class="token attr-name">CASSSOEnabled</span> <span class="token attr-value">On</span><span class="token attr-name">CASCookiePath</span> <span class="token attr-value">/var/cache/httpd/mod_auth_cas/</span><span class="token attr-name">CASLoginURL</span> <span class="token attr-value">http://devops.iamzhl.top:8080/cas/login</span><span class="token attr-name">CASValidateURL</span> <span class="token attr-value">http://devops.iamzhl.top:8080/cas/serviceValidate</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-apache-配置文件"><a href="#修改-apache-配置文件" class="headerlink" title="修改 apache 配置文件"></a>修改 apache 配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/httpd/conf/httpd.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>添加反向代理</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># 添加一个监听端口 82 用作 Gerrit 的代理主机</span><span class="token attr-name">Listen</span> <span class="token attr-value">82</span><span class="token comment" spellcheck="true"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><span class="token attr-name">LoadModule</span> <span class="token attr-value">auth_cas_module modules/mod_auth_cas.so</span><span class="token comment" spellcheck="true"># 设置 Gerrit 的虚拟主机</span><span class="token attr-name">&lt;VirtualHost</span> <span class="token attr-value">*:82></span><span class="token attr-name">    ServerName</span> <span class="token attr-value">devops.iamzhl.top</span><span class="token attr-name">    ServerAdmin</span> <span class="token attr-value">15563836030@163.com</span><span class="token attr-name">    CASRootProxiedAs</span> <span class="token attr-value">http://devops.iamzhl.top:82</span><span class="token attr-name">    ProxyRequests</span> <span class="token attr-value">Off</span><span class="token attr-name">    ProxyVia</span> <span class="token attr-value">Off</span><span class="token attr-name">    ProxyPreserveHost</span> <span class="token attr-value">On</span><span class="token attr-name">    &lt;Proxy</span> <span class="token attr-value">*></span><span class="token attr-name">          Order</span> <span class="token attr-value">deny,allow</span><span class="token attr-name">          Allow</span> <span class="token attr-value">from all</span>    &lt;/Proxy><span class="token attr-name">    &lt;Location</span> <span class="token attr-value">"/login/"></span><span class="token attr-name">        AuthType</span> <span class="token attr-value">CAS</span><span class="token attr-name">        AuthName</span> <span class="token attr-value">"Welcome To Gerrit Code Review"</span><span class="token attr-name">        Require</span> <span class="token attr-value">valid-user</span><span class="token attr-name">        CASAuthNHeader</span> <span class="token attr-value">X-Forwarded-Gerrit</span>    &lt;/Location><span class="token attr-name">    AllowEncodedSlashes</span> <span class="token attr-value">On</span><span class="token attr-name">    ProxyPass</span> <span class="token attr-value">/ http://devops.iamzhl.top:8081/</span><span class="token attr-name">    ProxyPassReverse</span> <span class="token attr-value">/ http://devops.iamzhl.top:8081</span><span class="token attr-name">    ErrorLog</span> <span class="token attr-value">/var/log/gerrit/error.log</span><span class="token attr-name">    CustomLog</span> <span class="token attr-value">/var/log/gerrit/access.log common</span>&lt;/VirtualHost><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mkdir /var/log/gerrit</span><span class="token comment" spellcheck="true"># gerrit restart</span><span class="token comment" spellcheck="true"># systemctl restart httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:82</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<a href="http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/dc/a298cbb27df3f031b6a75d41b8ae3b.jpg" alt=""></p><p>输入用户名密码后，点击登录，登陆成功，地址是<code>http://devops.iamzhl.top:82//#/dashboard/self</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6b/7e1c3e774f6d188f2a2a7203776be1.jpg" alt=""></p><p>点击用户名 -&gt; Sign Out，就会登出</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a2/726b245663641d5b6aaf1eef3e17bf.jpg" alt=""></p><p>登出界面如下，地址是<code>http://devops.iamzhl.top:8080/cas/logout</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt=""></p><p>至此，<code>Gerrit</code>整合<code>CAS</code>单点登录完成。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> Gerrit </tag>
            
            <tag> ldap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SonarQube 整合 LDAP 和 CAS 单点登录</title>
      <link href="/SonarQube-integrate-with-ldap-and-CAS.html"/>
      <url>/SonarQube-integrate-with-ldap-and-CAS.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li><code>SonarQube</code>版本：7.4</li><li><code>SonarQube</code> URL: <a href="http://devops.iamzhl.top:9000" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:9000</a></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<a href="http://devops.iamzhl.top:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas</a></li></ul><h2 id="整合LDAP"><a href="#整合LDAP" class="headerlink" title="整合LDAP"></a>整合<code>LDAP</code></h2><p>修改<code>sonar</code>配置文件<code>sonar.properties</code></p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">vi</span> /usr/local/sonarqube-7.4/conf/sonar.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到下面的部分修改<code>LDAP</code>配置</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#--------------------------------------------------------------------------------------------------</span><span class="token comment" spellcheck="true"># LDAP CONFIGURATION</span><span class="token comment" spellcheck="true"># Enable the LDAP feature</span><span class="token comment" spellcheck="true"># sonar.security.realm=LDAP</span><span class="token comment" spellcheck="true"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><span class="token comment" spellcheck="true"># sonar.authenticator.downcase=true</span><span class="token comment" spellcheck="true"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><span class="token comment" spellcheck="true"># ldap.url=ldap://localhost:10389</span><span class="token comment" spellcheck="true"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><span class="token comment" spellcheck="true"># ldap.bindDn=cn=sonar,ou=users,o=mycompany</span><span class="token comment" spellcheck="true"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><span class="token comment" spellcheck="true"># ldap.bindPassword=secret</span><span class="token comment" spellcheck="true"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><span class="token comment" spellcheck="true"># ldap.authentication=simple</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改如下(请将具体信息按照自己的<code>LDAP</code>服务器信息进行修改):</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#--------------------------------------------------------------------------------------------------</span><span class="token comment" spellcheck="true"># LDAP CONFIGURATION</span><span class="token comment" spellcheck="true"># Enable the LDAP feature</span><span class="token attr-name">sonar.security.realm</span><span class="token punctuation">=</span><span class="token attr-value">LDAP</span><span class="token comment" spellcheck="true"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><span class="token comment" spellcheck="true"># sonar.authenticator.downcase=true</span><span class="token comment" spellcheck="true"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><span class="token attr-name">ldap.url</span><span class="token punctuation">=</span><span class="token attr-value">ldap://devops.iamzhl.top:389</span><span class="token comment" spellcheck="true"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><span class="token attr-name">ldap.bindDn</span><span class="token punctuation">=</span><span class="token attr-value">cn=Manager,dc=iamzhl,dc=top</span><span class="token comment" spellcheck="true"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><span class="token attr-name">ldap.bindPassword</span><span class="token punctuation">=</span><span class="token attr-value">passwd</span><span class="token comment" spellcheck="true"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><span class="token attr-name">ldap.authentication</span><span class="token punctuation">=</span><span class="token attr-value">simple</span><span class="token comment" spellcheck="true"># See :</span><span class="token comment" spellcheck="true">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/digest.html</span><span class="token comment" spellcheck="true">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/crammd5.html</span><span class="token comment" spellcheck="true"># (optional)</span><span class="token comment" spellcheck="true"># ldap.realm=example.org</span><span class="token comment" spellcheck="true"># Context factory class (optional)</span><span class="token comment" spellcheck="true"># ldap.contextFactoryClass=com.sun.jndi.ldap.LdapCtxFactory</span><span class="token comment" spellcheck="true"># Enable usage of StartTLS (default : false)</span><span class="token comment" spellcheck="true"># ldap.StartTLS=true</span><span class="token comment" spellcheck="true"># Follow or not referrals. See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html (default: true)</span><span class="token comment" spellcheck="true"># ldap.followReferrals=false</span><span class="token comment" spellcheck="true"># USER MAPPING</span><span class="token comment" spellcheck="true"># Distinguished Name (DN) of the root node in LDAP from which to search for users (mandatory)</span><span class="token attr-name">ldap.user.baseDn</span><span class="token punctuation">=</span><span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span class="token comment" spellcheck="true"># LDAP user request. (default: (&amp;(objectClass=inetOrgPerson)(uid={login})) )</span><span class="token comment" spellcheck="true"># ldap.user.request=(&amp;(objectClass=user)(sAMAccountName={login}))</span><span class="token attr-name">ldap.user.request</span><span class="token punctuation">=</span><span class="token attr-value">(&amp;(objectClass=inetOrgPerson)(uid={login}))</span><span class="token comment" spellcheck="true"># Attribute in LDAP defining the user’s real name. (default: cn)</span><span class="token comment" spellcheck="true"># ldap.user.realNameAttribute=name</span><span class="token attr-name">ldap.user.realNameAttribute</span><span class="token punctuation">=</span><span class="token attr-value">cn</span><span class="token comment" spellcheck="true"># Attribute in LDAP defining the user’s email. (default: mail)</span><span class="token comment" spellcheck="true"># ldap.user.emailAttribute=email</span><span class="token attr-name">ldap.user.emailAttribute</span><span class="token punctuation">=</span><span class="token attr-value">mail</span><span class="token comment" spellcheck="true"># GROUP MAPPING</span><span class="token comment" spellcheck="true"># Distinguished Name (DN) of the root node in LDAP from which to search for groups. (optional, default: empty)</span><span class="token comment" spellcheck="true"># ldap.group.baseDn=cn=groups,dc=example,dc=org</span><span class="token attr-name">ldap.group.baseDn</span><span class="token punctuation">=</span><span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span class="token comment" spellcheck="true"># LDAP group request (default: (&amp;(objectClass=groupOfUniqueNames)(uniqueMember={dn})) )</span><span class="token comment" spellcheck="true"># ldap.group.request=(&amp;(objectClass=group)(member={dn}))</span><span class="token attr-name">ldap.group.request</span><span class="token punctuation">=</span><span class="token attr-value">(&amp;(objectClass=posixGroup)(memberUid={uid}))</span><span class="token comment" spellcheck="true"># Property used to specifiy the attribute to be used for returning the list of user groups in the compatibility mode. (default: cn)</span><span class="token comment" spellcheck="true"># ldap.group.idAttribute=sAMAccountName</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完成后，重启<code>sonar</code></p><pre class="line-numbers language-bash"><code class="language-bash">$ sonar restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开<code>sonar</code>网址，输入<code>LDAP</code>中的用户名和密码后点击登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/89/7728c5a52a96a6841a426155062a56.jpg" alt=""></p><p>登陆成功后，正常获取用户名</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/dd/53d39dc0858679e2a4949419417678.jpg" alt=""></p><p>至此，<code>SonarQube</code>整合<code>LDAP</code>完成</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title=" 介绍"></a><i class="fa fa-audio-description" aria-hidden="true"></i> 介绍</h3><p><code>SonarQube</code>提供了一种<code>SSO</code>机制，可以用来作为单点登录的实现方式，就是使用<code>HTTP header</code>的方式，而<code>CAS</code>也提供了一种用于<code>apache</code>服务的认证方式，这就是<code>mod_auth_cas</code>，思路很简单，我们利用<code>apache</code>反向代理，做一个端口用于虚拟主机来转发<code>SonarQube</code>服务，然后在这个虚拟主机内部加入<code>mod_auth_cas</code>提供的认证拦截，同时在里面指定一个<code>HTTP header</code>用于发送认证后的请求到<code>SonarQube</code>，然后，<code>SonarQube</code>接收到这个请求后，发现正是自己设定的<code>HTTP header</code>，于是予以通过认证。这就是整个认证流程，下面开始介绍整合方法。</p><h3 id="SonarQube修改"><a href="#SonarQube修改" class="headerlink" title="SonarQube修改"></a><code>SonarQube</code>修改</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">vi</span> /usr/local/sonarqube-7.4/conf/sonar.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改如下部分(就是将<code>SSO AUTHENTICATION</code>部分的参数取消注释，令其生效)</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#--------------------------------------------------------------------------------------------------</span><span class="token comment" spellcheck="true"># SSO AUTHENTICATION</span><span class="token comment" spellcheck="true"># Enable authentication using HTTP headers</span><span class="token attr-name">sonar.web.sso.enable</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token comment" spellcheck="true"># Name of the header to get the user login.</span><span class="token comment" spellcheck="true"># Only alphanumeric, '.' and '@' characters are allowed</span><span class="token attr-name">sonar.web.sso.loginHeader</span><span class="token punctuation">=</span><span class="token attr-value">X-Forwarded-Login</span><span class="token comment" spellcheck="true"># Name of the header to get the user name</span><span class="token attr-name">sonar.web.sso.nameHeader</span><span class="token punctuation">=</span><span class="token attr-value">X-Forwarded-Name</span><span class="token comment" spellcheck="true"># Name of the header to get the user email (optional)</span><span class="token attr-name">sonar.web.sso.emailHeader</span><span class="token punctuation">=</span><span class="token attr-value">X-Forwarded-Email</span><span class="token comment" spellcheck="true"># Name of the header to get the list of user groups, separated by comma (optional).</span><span class="token comment" spellcheck="true"># If the sonar.sso.groupsHeader is set, the user will belong to those groups if groups exist in SonarQube.</span><span class="token comment" spellcheck="true"># If none of the provided groups exists in SonarQube, the user will only belong to the default group.</span><span class="token comment" spellcheck="true"># Note that the default group will always be set.</span><span class="token attr-name">sonar.web.sso.groupsHeader</span><span class="token punctuation">=</span><span class="token attr-value">X-Forwarded-Groups</span><span class="token comment" spellcheck="true"># Interval used to know when to refresh name, email and groups.</span><span class="token comment" spellcheck="true"># During this interval, if for instance the name of the user is changed in the header, it will only be updated after X minutes.</span><span class="token attr-name">sonar.web.sso.refreshIntervalInMinutes</span><span class="token punctuation">=</span><span class="token attr-value">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改<code>app.d5dba530.chunk.js</code>，解决登出问题，不同的版本不同，<code>7.2.1</code>的在<code>main</code>开头的一个<code>js</code>文件中。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/sonarqube-7.4/web/js/app.d5dba530.chunk.js</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改如下</p><pre class="line-numbers language-js"><code class="language-js">t<span class="token punctuation">.</span>handleLogout <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// e.preventDefault(), t.context.router.push("/sessions/logout") </span>    t<span class="token punctuation">.</span>context<span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/sessions/logout"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//去掉e.preventDefault()方法</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js">r<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//href: "#",</span>    href<span class="token punctuation">:</span> <span class="token string">"http://192.168.6.99:8080/cas/logout"</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//将此注销按钮的href改为CAS服务器的登出页面</span>    onClick<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleLogout<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install mod_auth_cas</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置<code>mod_auth_cas</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/httpd/conf.d/auth_cas.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">LogLevel</span> <span class="token attr-value">Debug</span><span class="token attr-name">CASDebug</span> <span class="token attr-value">On</span><span class="token attr-name">CASVersion</span> <span class="token attr-value">2</span><span class="token attr-name">CASTimeout</span> <span class="token attr-value">1740</span><span class="token attr-name">CASIdleTimeout</span> <span class="token attr-value">1740</span><span class="token attr-name">CASSSOEnabled</span> <span class="token attr-value">On</span><span class="token attr-name">CASCookiePath</span> <span class="token attr-value">/var/cache/httpd/mod_auth_cas/</span><span class="token attr-name">CASLoginURL</span> <span class="token attr-value">http://devops.iamzhl.top:8080/cas/login</span><span class="token attr-name">CASValidateURL</span> <span class="token attr-value">http://devops.iamzhl.top:8080/cas/serviceValidate</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="apache修改"><a href="#apache修改" class="headerlink" title="apache修改"></a><code>apache</code>修改</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/httpd/conf/httpd.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加虚拟主机</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># 添加一个监听端口 83 用作 SonarQube 的代理主机</span><span class="token attr-name">Listen</span> <span class="token attr-value">83</span><span class="token comment" spellcheck="true"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><span class="token attr-name">LoadModule</span> <span class="token attr-value">auth_cas_module modules/mod_auth_cas.so</span><span class="token comment" spellcheck="true"># 设置 SonarQube 的虚拟主机</span><span class="token attr-name">&lt;VirtualHost</span> <span class="token attr-value">*:83></span><span class="token attr-name">        ServerName</span> <span class="token attr-value">devops.iamzhl.top</span><span class="token attr-name">        ServerAdmin</span> <span class="token attr-value">15563836030@163.com</span><span class="token attr-name">        CASRootProxiedAs</span> <span class="token attr-value">http://devops.iamzhl.top:83</span><span class="token attr-name">        ProxyPreserveHost</span> <span class="token attr-value">On</span><span class="token attr-name">        ProxyPass</span> <span class="token attr-value">/ http://devops.iamzhl.top:9000/</span><span class="token attr-name">        ProxyPassReverse</span> <span class="token attr-value">/ http://devops.iamzhl.top:9000/</span><span class="token attr-name">        ProxyPass</span> <span class="token attr-value">/sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><span class="token attr-name">        ProxyPassReverse</span> <span class="token attr-value">/sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><span class="token attr-name">        ProxyPass</span> <span class="token attr-value">/api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><span class="token attr-name">        ProxyPassReverse</span> <span class="token attr-value">/api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><span class="token attr-name">        ErrorLog</span> <span class="token attr-value">/var/log/sonar/error.log</span><span class="token attr-name">        CustomLog</span> <span class="token attr-value">/var/log/sonar/access.log common</span><span class="token attr-name">        &lt;Location</span> <span class="token attr-value">/></span><span class="token attr-name">                AuthName</span> <span class="token attr-value">"Welcome to devops sonar"</span><span class="token attr-name">                CASAuthNHeader</span> <span class="token attr-value">X-Forwarded-Login</span><span class="token attr-name">                Authtype</span> <span class="token attr-value">CAS</span><span class="token attr-name">                require</span> <span class="token attr-value">valid-user</span>        &lt;/Location><span class="token attr-name">        &lt;Proxy</span> <span class="token attr-value">*></span><span class="token attr-name">                Order</span> <span class="token attr-value">deny,allow</span><span class="token attr-name">                Allow</span> <span class="token attr-value">from all</span>        &lt;/Proxy>&lt;/VirtualHost><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mkdir /var/log/sonar</span><span class="token comment" spellcheck="true"># chown -R apache:apache /var/log/sonar</span><span class="token comment" spellcheck="true"># su sonar</span>$ sonar restart<span class="token comment" spellcheck="true"># su </span><span class="token comment" spellcheck="true"># systemctl restart httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:83</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a83%2f</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/0b/b05aa63a31ffc624e42290d71c68e8.jpg" alt=""></p><p>输入用户名密码后点击登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6d/548f70b5aba6e4399e06ae288adfa9.jpg" alt=""></p><p>如图所示，登陆成功，地址是<code>http://devops.iamzhl.top:83/projects</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e1/463c767ddd0147ed54fba65d91a0f7.jpg" alt=""></p><p>如上图所示，点击注销，就会登出并跳转至<code>CAS</code>的登出界面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt=""></p><p>至此，<code>SonarQube</code>整合<code>CAS</code>单点登录完成。</p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> LDAP </tag>
            
            <tag> SonarQube </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins 整合 LDAP 以及 CAS 单点登录</title>
      <link href="/Jenkins-integrate-with-ldap-and-CAS.html"/>
      <url>/Jenkins-integrate-with-ldap-and-CAS.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Jenkins 版本：2.138.3</li><li>Jenkins 安装方式： Tomcat 容器部署 war 包</li><li>Jenkins 地址：<a href="http://devops.iamzhl.top:8080/jenkins" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/jenkins</a></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<a href="http://devops.iamzhl.top:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://devops.iamzhl.top:8080/cas</a></li></ul><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><p>首先去 Jenkins 插件官网下载 LDAP 和 CAS 插件</p><ul><li>LDAP：<a href="https://updates.jenkins.io/download/plugins/ldap/" target="_blank" rel="noopener external nofollow noreferrer">https://updates.jenkins.io/download/plugins/ldap/</a></li><li>CAS：<a href="https://updates.jenkins.io/download/plugins/cas-plugin/" target="_blank" rel="noopener external nofollow noreferrer">https://updates.jenkins.io/download/plugins/cas-plugin/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/46/53fb1f3e3cfa00c055965bc99c7fbd.jpg" alt=""></p><p>如图，点击<code>系统管理</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/86/4f0c2ebaef58a3c719397b0adfbc5b.jpg" alt=""></p><p>点击插件管理 -&gt; 高级 -&gt; 上传插件(选择文件)</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/65/bfd2b91d856ca8132434b2da51de6e.jpg" alt=""></p><p>弹出选择文件的对话框后，首先选择我们下载好的 LDAP 插件，然后点击上传，然后就会跳转到安装界面，我们勾选<code>安装完成后重启Jenkins(空闲时)</code>，等待一会Jenkins安装插件完成后就会重启</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c5/7cf7ef11ecd49b19b07ea7333cc26a.jpg" alt=""></p><p>输入用户名密码登录后，依次打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选 LDAP，点击<code>Advanced Server Configuration</code>,开始配置 LDAP 服务器的绑定信息</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/12/adf30303385802ce2fc45d175a7d16.jpg" alt=""></p><p>点击<code>Test LDAP settings</code>，测试<code>LDAP</code>配置是否可用，如下图，输入一个<code>LDAP</code>服务器中存在的用户账号和密码，点击<code>Test</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/93/bca0bd8c0ac21d1b2c4cffd7cea3bc.jpg" alt=""></p><p>如果测试成功，会打印出类似如下的信息</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f5/7453c8051a55d9622dbe1e461d1b25.jpg" alt=""></p><p>点击<code>应用</code>，然后点击<code>保存</code>。</p><p>测试一下，用<code>LDAP</code>中的用户进行登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/1e/46a5ac15c7611eff4ade4830966565.jpg" alt=""></p><p>登陆成功，配置完成，到这里，<code>Jenkins</code>整合<code>LDAP</code>认证就完成了。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><p>首先安装<code>CAS</code>插件，和上面安装<code>LDAP</code>插件步骤一样，安装完<code>CAS</code>打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选<code>CAS (Central Authentication Service)</code>，如图所示，配置好<code>CAS</code>的<code>URL</code>和<code>CAS 协议</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b7/99ca653df5281634fed8a6dcc4f3c2.jpg" alt=""></p><p>然后点击<code>应用</code>-&gt;<code>保存</code>，注销，然后重新登录</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/ce/bf7939fceebf45806037fd759179f4.jpg" alt=""></p><p>这时就可以跳转到<code>CAS</code>的登录界面了，输入用户名密码点击登录，就可以正常的登录进入<code>Jenkins</code>系统了。</p><p>至此，<code>Jenkins</code>整合<code>CAS</code>完成。</p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> Jenkins </tag>
            
            <tag> LDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装部署 openLDAP</title>
      <link href="/CentOS-install-openLDAP.html"/>
      <url>/CentOS-install-openLDAP.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>OpenLDAP 是轻型目录访问协议<code>Lightweight Directory Access Protocol</code> - <code>LDAP</code>的自由和开源的实现，在其<code>OpenLDAP</code>许可证下发行，并已经被包含在众多流行的<code>Linux</code>发行版中。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cd ~</span><span class="token comment" spellcheck="true"># yum -y install openldap-servers openldap-clients</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/1c/02ad1e703c7187295361dbff3fad9c.jpg" alt=""></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span><span class="token comment" spellcheck="true"># chown ldap:ldap /var/lib/ldap/DB_CONFIG</span><span class="token comment" spellcheck="true"># systemctl start slapd</span><span class="token comment" spellcheck="true"># systemctl enable slapd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># slappasswd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/75/c5c970bd59e02ac7434f217a5f27a6.jpg" alt=""></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi chrootpw.ldif</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># specify the password generated above for "olcRootPW" section</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={0}config,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">add</span><span class="token punctuation">:</span> <span class="token attr-value">olcRootPW</span><span class="token attr-name">olcRootPW</span><span class="token punctuation">:</span> <span class="token attr-value">{SSHA}xxxxxxxxxxxxxxxxxxxxxxxx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="导入基本模式"><a href="#导入基本模式" class="headerlink" title="导入基本模式"></a>导入基本模式</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif </span><span class="token comment" spellcheck="true"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif </span><span class="token comment" spellcheck="true"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="在ldap的DB中设置域名"><a href="#在ldap的DB中设置域名" class="headerlink" title="在ldap的DB中设置域名"></a>在ldap的DB中设置域名</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># slappasswd </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/de/9a4502a39d572493b8ae8d723a08ef.jpg" alt=""></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi chdomain.ldif</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># replace to your own domain name for "dc=***,dc=***" section</span><span class="token comment" spellcheck="true"># specify the password generated above for "olcRootPW" section</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={1}monitor,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">replace</span><span class="token punctuation">:</span> <span class="token attr-value">olcAccess</span><span class="token attr-name">olcAccess</span><span class="token punctuation">:</span> <span class="token attr-value">{0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"</span><span class="token attr-name">  read</span> <span class="token attr-value">by dn.base="cn=Manager,dc=iamzhl,dc=top" read by * none</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={2}hdb,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">replace</span><span class="token punctuation">:</span> <span class="token attr-value">olcSuffix</span><span class="token attr-name">olcSuffix</span><span class="token punctuation">:</span> <span class="token attr-value">dc=iamzhl,dc=top</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={2}hdb,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">replace</span><span class="token punctuation">:</span> <span class="token attr-value">olcRootDN</span><span class="token attr-name">olcRootDN</span><span class="token punctuation">:</span> <span class="token attr-value">cn=Manager,dc=iamzhl,dc=top</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={2}hdb,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">add</span><span class="token punctuation">:</span> <span class="token attr-value">olcRootPW</span><span class="token attr-name">olcRootPW</span><span class="token punctuation">:</span> <span class="token attr-value">{SSHA}xxxxxxxxxxxxxxxxxxxxxxxx</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">olcDatabase={2}hdb,cn=config</span><span class="token attr-name">changetype</span><span class="token punctuation">:</span> <span class="token attr-value">modify</span><span class="token attr-name">add</span><span class="token punctuation">:</span> <span class="token attr-value">olcAccess</span><span class="token attr-name">olcAccess</span><span class="token punctuation">:</span> <span class="token attr-value">{0}to attrs=userPassword,shadowLastChange by</span><span class="token attr-name">  dn</span><span class="token punctuation">=</span><span class="token attr-value">"cn=Manager,dc=iamzhl,dc=top" write by anonymous auth by self write by * none</span><span class="token attr-name">olcAccess</span><span class="token punctuation">:</span> <span class="token attr-value">{1}to dn.base="" by * read</span><span class="token attr-name">olcAccess</span><span class="token punctuation">:</span> <span class="token attr-value">{2}to * by dn="cn=Manager,dc=iamzhl,dc=top" write by * read</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi basedomain.ldif</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># replace to your own domain name for "dc=***,dc=***" section</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">dcObject</span><span class="token attr-name">objectclass</span><span class="token punctuation">:</span> <span class="token attr-value">organization</span><span class="token attr-name">o</span><span class="token punctuation">:</span> <span class="token attr-value">iamzhl</span><span class="token attr-name">dc</span><span class="token punctuation">:</span> <span class="token attr-value">iamzhl</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">cn=Manager,dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">organizationalRole</span><span class="token attr-name">cn</span><span class="token punctuation">:</span> <span class="token attr-value">Manager</span><span class="token attr-name">summary</span><span class="token punctuation">:</span> <span class="token attr-value">Directory Manager</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">organizationalUnit</span><span class="token attr-name">ou</span><span class="token punctuation">:</span> <span class="token attr-value">People</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">ou=Group,dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">organizationalUnit</span><span class="token attr-name">ou</span><span class="token punctuation">:</span> <span class="token attr-value">Group</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f basedomain.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/d1/46842e7f601199c0f78da4d97d30ad.jpg" alt=""></p><h2 id="添加一个用户"><a href="#添加一个用户" class="headerlink" title="添加一个用户"></a>添加一个用户</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># slappasswd </span><span class="token comment" spellcheck="true"># vi ldapuser.ldif</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># create new</span><span class="token comment" spellcheck="true"># replace to your own domain name for "dc=***,dc=***" section</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">uid=cent,ou=People,dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">inetOrgPerson</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">posixAccount</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">shadowAccount</span><span class="token attr-name">cn</span><span class="token punctuation">:</span> <span class="token attr-value">Cent</span><span class="token attr-name">sn</span><span class="token punctuation">:</span> <span class="token attr-value">Linux</span><span class="token attr-name">userPassword</span><span class="token punctuation">:</span> <span class="token attr-value">{SSHA}xxxxxxxxxxxxxxxxx</span><span class="token attr-name">loginShell</span><span class="token punctuation">:</span> <span class="token attr-value">/bin/bash</span><span class="token attr-name">uidNumber</span><span class="token punctuation">:</span> <span class="token attr-value">1000</span><span class="token attr-name">gidNumber</span><span class="token punctuation">:</span> <span class="token attr-value">1000</span><span class="token attr-name">homeDirectory</span><span class="token punctuation">:</span> <span class="token attr-value">/home/cent</span><span class="token attr-name">dn</span><span class="token punctuation">:</span> <span class="token attr-value">cn=cent,ou=Group,dc=iamzhl,dc=top</span><span class="token attr-name">objectClass</span><span class="token punctuation">:</span> <span class="token attr-value">posixGroup</span><span class="token attr-name">cn</span><span class="token punctuation">:</span> <span class="token attr-value">Cent</span><span class="token attr-name">gidNumber</span><span class="token punctuation">:</span> <span class="token attr-value">1000</span><span class="token attr-name">memberUid</span><span class="token punctuation">:</span> <span class="token attr-value">cent</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加本机的用户和群组到ldap目录"><a href="#添加本机的用户和群组到ldap目录" class="headerlink" title="添加本机的用户和群组到ldap目录"></a>添加本机的用户和群组到ldap目录</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi ldapuser.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell"># extract local users and groups who have 1000-9999 digit UID# replace "SUFFIX=***" to your own domain name# this is an example#!/bin/bashSUFFIX='dc=iamzhl,dc=top'LDIF='ldapuser.ldif'echo -n > $LDIFGROUP_IDS=()grep "x:[1-9][0-9][0-9][0-9]:" /etc/passwd | (while read TARGET_USERdo    USER_ID="$(echo "$TARGET_USER" | cut -d':' -f1)"    USER_NAME="$(echo "$TARGET_USER" | cut -d':' -f5 | cut -d' ' -f1,2)"    [ ! "$USER_NAME" ] && USER_NAME="$USER_ID"    LDAP_SN="$(echo "$USER_NAME" | cut -d' ' -f2)"    [ ! "$LDAP_SN" ] && LDAP_SN="$USER_NAME"    LASTCHANGE_FLAG="$(grep "${USER_ID}:" /etc/shadow | cut -d':' -f3)"    [ ! "$LASTCHANGE_FLAG" ] && LASTCHANGE_FLAG="0"    SHADOW_FLAG="$(grep "${USER_ID}:" /etc/shadow | cut -d':' -f9)"    [ ! "$SHADOW_FLAG" ] && SHADOW_FLAG="0"    GROUP_ID="$(echo "$TARGET_USER" | cut -d':' -f4)"    [ ! "$(echo "${GROUP_IDS[@]}" | grep "$GROUP_ID")" ] && GROUP_IDS=("${GROUP_IDS[@]}" "$GROUP_ID")    echo "dn: uid=$USER_ID,ou=People,$SUFFIX" >> $LDIF    echo "objectClass: inetOrgPerson" >> $LDIF    echo "objectClass: posixAccount" >> $LDIF    echo "objectClass: shadowAccount" >> $LDIF    echo "sn: $LDAP_SN" >> $LDIF    echo "givenName: $(echo "$USER_NAME" | awk '{print $1}')" >> $LDIF    echo "cn: $USER_NAME" >> $LDIF    echo "displayName: $USER_NAME" >> $LDIF    echo "uidNumber: $(echo "$TARGET_USER" | cut -d':' -f3)" >> $LDIF    echo "gidNumber: $(echo "$TARGET_USER" | cut -d':' -f4)" >> $LDIF    echo "userPassword: {crypt}$(grep "${USER_ID}:" /etc/shadow | cut -d':' -f2)" >> $LDIF    echo "gecos: $USER_NAME" >> $LDIF    echo "loginShell: $(echo "$TARGET_USER" | cut -d':' -f7)" >> $LDIF    echo "homeDirectory: $(echo "$TARGET_USER" | cut -d':' -f6)" >> $LDIF    echo "shadowExpire: $(passwd -S "$USER_ID" | awk '{print $7}')" >> $LDIF    echo "shadowFlag: $SHADOW_FLAG" >> $LDIF    echo "shadowWarning: $(passwd -S "$USER_ID" | awk '{print $6}')" >> $LDIF    echo "shadowMin: $(passwd -S "$USER_ID" | awk '{print $4}')" >> $LDIF    echo "shadowMax: $(passwd -S "$USER_ID" | awk '{print $5}')" >> $LDIF    echo "shadowLastChange: $LASTCHANGE_FLAG" >> $LDIF    echo >> $LDIFdonefor TARGET_GROUP_ID in "${GROUP_IDS[@]}"do    LDAP_CN="$(grep ":${TARGET_GROUP_ID}:" /etc/group | cut -d':' -f1)"    echo "dn: cn=$LDAP_CN,ou=Group,$SUFFIX" >> $LDIF    echo "objectClass: posixGroup" >> $LDIF    echo "cn: $LDAP_CN" >> $LDIF    echo "gidNumber: $TARGET_GROUP_ID" >> $LDIF    for MEMBER_UID in $(grep ":${TARGET_GROUP_ID}:" /etc/passwd | cut -d':' -f1,3)    do        UID_NUM=$(echo "$MEMBER_UID" | cut -d':' -f2)        [ $UID_NUM -ge 1000 -a $UID_NUM -le 9999 ] && echo "memberUid: $(echo "$MEMBER_UID" | cut -d':' -f1)" >> $LDIF    done    echo >> $LDIFdone)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># sh ldapuser.sh </span><span class="token comment" spellcheck="true"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/d5/aaa70f4f22ad6ee40fa74bf027bd4b.jpg" alt=""></p><h2 id="利用Apache-Directory-Studio进行管理"><a href="#利用Apache-Directory-Studio进行管理" class="headerlink" title="利用Apache Directory Studio进行管理"></a>利用Apache Directory Studio进行管理</h2><p>Apache Directory Studio 是一个 LDAP 的工具平台，用来连接到任何 LDAP 服务器并进行管理和开发工作。其可以实现以下功能：</p><ul><li>LDAP浏览器</li><li>LDIF编辑器</li><li>嵌入式 ApacheDS</li><li>ACI编辑器</li><li>属性管理</li></ul><p>下面以新建连接和新增用户为例进行演示</p><p>如图，点击 New Connection 新建一个 ldap 连接</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/12/d782ef026127039c48173727402ae1.jpg" alt=""></p><p>依次输入连接名、主机名以及端口号后点击<code>Next</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b4/8238cc5d14bd32906fb1bf4d2fb726.jpg" alt=""></p><p>再依次输入绑定的<code>DN</code>和密码后点击<code>Finish</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6d/33932a9dccd444922051239295a40e.jpg" alt=""></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/70/749184f3907b06951093fc2a944e42.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt=""></p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>本文多处参考<a href="https://blog.csdn.net/wenwenxiong/article/details/76855047" target="_blank" rel="noopener external nofollow noreferrer">centos7下ldap服务搭建</a>，感谢<a href="https://blog.csdn.net/wenwenxiong" target="_blank" rel="noopener external nofollow noreferrer">wenwenxiong</a>的分享。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openLDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAS 5.3.4 安装部署</title>
      <link href="/CAS-5-3-4-install-and-deploy.html"/>
      <url>/CAS-5-3-4-install-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CAS</code>全称<code>Central Authentication Service</code>，中央认证服务，一种独立开放指令协议。CAS 是 Yale 大学发起的一个开源项目，旨在为 Web 应用系统提供一种可靠的单点登录方法，CAS 在 2004 年 12 月正式成为 JA-SIG 的一个项目，目前是一种企业级的单点登录解决方案。</p><h2 id="协议介绍"><a href="#协议介绍" class="headerlink" title="协议介绍"></a>协议介绍</h2><p>关于 oauth2.0 的原理及介绍可以参考<a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="noopener external nofollow noreferrer">理解OAuth 2.0 - 阮一峰的网络日志</a>，这里不做赘述。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p><code>CAS</code>是基于Spring写的，因此需要准备Java环境，官方提供了一种非常好用的编译方法，我们在使用时可以根据自己的需求来决定依赖的选择，本文主要以openLDAP和oauth为例。编译时需要maven环境。运行时需要 Tomcat 容器，因此需要提前准备好 Tomcat 环境。后续我们会整合 openLDAP 做统一用户管理，因此请先安装好 openLDAP。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>首先去项目地址下载编译模板</p><pre class="line-numbers language-url"><code class="language-url">https://github.com/apereo/cas-overlay-template<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># git clone https://github.com/apereo/cas-overlay-template</span><span class="token comment" spellcheck="true"># cd cas-overlay-template</span><span class="token comment" spellcheck="true"># vi pom.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>找到下面的部分</p><pre class="line-numbers language-properties"><code class="language-properties">&lt;dependencies>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-webapp${app.server}&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>        &lt;type>war&lt;/type>        &lt;scope>runtime&lt;/scope>    &lt;/dependency>    &lt;!--<span class="token attr-name">    ...Additional</span> <span class="token attr-value">dependencies may be placed here...</span>    -->    &lt;/dependencies><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将注释的部分替换为我们需要的模块</p><pre class="line-numbers language-properties"><code class="language-properties">&lt;dependencies>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-webapp${app.server}&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>        &lt;type>war&lt;/type>        &lt;scope>runtime&lt;/scope>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-oauth-webflow&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;dependency>        &lt;groupId>mysql&lt;/groupId>        &lt;artifactId>mysql-connector-java&lt;/artifactId>        &lt;version>${mysql.driver.version}&lt;/version>        &lt;scope>runtime&lt;/scope>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-jdbc&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-jdbc-drivers&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;!--    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-rest&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>        &lt;scope>runtime&lt;/scope>    &lt;/dependency>    -->    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-ldap&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;!--    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-jpa-ticket-registry&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-jpa-service-registry&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-rest-services&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>        &lt;scope>runtime&lt;/scope>    &lt;/dependency>    &lt;dependency>        &lt;groupId>org.apereo.cas&lt;/groupId>        &lt;artifactId>cas-server-support-json-service-registry&lt;/artifactId>        &lt;version>${cas.version}&lt;/version>    &lt;/dependency>    -->&lt;/dependencies><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面例子中我添加了openLDAP oauth2.0 mysql的依赖，具体请按照自己需求选择。</p><blockquote><p>添加 MySQL 需要指定 connector-java 连接器的版本</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.driver.version</span><span class="token punctuation">></span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.driver.version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑好pom文件后，执行下面的命令开始编译</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mvn clean package</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/42/20e1a20a856b8d98083544240e949b.jpg" alt=""></p><p>过程很长，需要联网。如上图所示，编译完成后，会在此目录下生成一个 target 目录，我们需要的 war 包就在里面。</p><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>安装过程就比较简单了，将 war 包保存至 Tomcat 下 webapps 目录下，然后运行 Tomcat 即可。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># startup.sh</span><span class="token comment" spellcheck="true"># tail -f /usr/local/tomcat/logs/catalina.out</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b7/bfb043dc833a972751ad396ccc63c5.jpg" alt=""></p><p>运行完成后日志如上图所示，然后我们打开 <a href="http://localhost:8080/cas" target="_blank" rel="noopener external nofollow noreferrer">http://localhost:8080/cas</a> </p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/91/6097314bc496dd2404ecc7ccac8a28.jpg" alt=""></p><p>默认的用户名密码为 casuser / Mellon，输入用户名密码点击登录，登录成功后如图跳转至登录成功页面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/41/4c9e1c4a3a9632ffd3475df7798005.jpg" alt=""></p><p>安装至此完成</p><h2 id="开启-oauth-2-0-授权"><a href="#开启-oauth-2-0-授权" class="headerlink" title="开启 oauth 2.0 授权"></a>开启 oauth 2.0 授权</h2><blockquote><p>application.properties 增加配置文件如下</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">cas.authn.oauth.refreshToken.timeToKillInSeconds</span><span class="token punctuation">=</span><span class="token attr-value">2592000</span><span class="token attr-name">cas.authn.oauth.code.timeToKillInSeconds</span><span class="token punctuation">=</span><span class="token attr-value">30</span><span class="token attr-name">cas.authn.oauth.code.numberOfUses</span><span class="token punctuation">=</span><span class="token attr-value">1</span><span class="token attr-name">cas.authn.oauth.accessToken.releaseProtocolAttributes</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.oauth.accessToken.timeToKillInSeconds</span><span class="token punctuation">=</span><span class="token attr-value">7200</span><span class="token attr-name">cas.authn.oauth.accessToken.maxTimeToLiveInSeconds</span><span class="token punctuation">=</span><span class="token attr-value">28800</span><span class="token attr-name">cas.authn.oauth.grants.resourceOwner.requireServiceHeader</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.oauth.userProfileViewType</span><span class="token punctuation">=</span><span class="token attr-value">NESTED</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>增加 OAUTH-1002.json service 注册文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/servies/OAUTH-1002.json</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties"><code class="language-properties">{<span class="token attr-name">  "@class"</span> <span class="token punctuation">:</span> <span class="token attr-value">"org.apereo.cas.support.oauth.services.OAuthRegisteredService",</span><span class="token attr-name">  "clientId"</span><span class="token punctuation">:</span> <span class="token attr-value">"20181124",</span><span class="token attr-name">  "clientSecret"</span><span class="token punctuation">:</span> <span class="token attr-value">"123456",</span><span class="token attr-name">  "serviceId"</span> <span class="token punctuation">:</span> <span class="token attr-value">"^(https|http|imaps)://.*",</span><span class="token attr-name">  "name"</span> <span class="token punctuation">:</span> <span class="token attr-value">"OAuthService",</span><span class="token attr-name">  "id"</span> <span class="token punctuation">:</span> <span class="token attr-value">1002</span>}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>重启 Tomcat 测试</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># shutdown.sh                   </span>Using CATALINA_BASE:   /usr/local/tomcatUsing CATALINA_HOME:   /usr/local/tomcatUsing CATALINA_TMPDIR: /usr/local/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<span class="token comment" spellcheck="true"># startup.sh </span>Using CATALINA_BASE:   /usr/local/tomcatUsing CATALINA_HOME:   /usr/local/tomcatUsing CATALINA_TMPDIR: /usr/local/tomcat/tempUsing JRE_HOME:        /usrUsing CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jarTomcat started.<span class="token comment" spellcheck="true"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启完成后，我们利用本博客作为目标访问网址进行测试，浏览器打开 <a href="http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top" target="_blank" rel="noopener external nofollow noreferrer">http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top</a></p><p>发现跳转了一个示例网址</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b1/603980e19d03912f2c01b3a7c94b80.jpg" alt=""></p><p>这时我们需要设置一下两个变量</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加入下面两行</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">cas.server.name</span><span class="token punctuation">=</span><span class="token attr-value">http://devops.iamzhl.top:8080/cas</span><span class="token attr-name">cas.server.prefix</span><span class="token punctuation">=</span><span class="token attr-value">${cas.server.name}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>请将 devops.iamzhl.top 改为你的 ip，然后重启 Tomcat 再次测试</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/66/574e93fdcc2b8ab686a46ec772627d.jpg" alt=""></p><p>这次能正常跳转了，但是出现了<code>未认证授权的服务</code>，这是因为我们没有开启 http 协议支持，因此只要再让我们的 CAS Server 支持 http 认证就行了</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加下面两行</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">cas.tgc.secure</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.serviceRegistry.initFromJson</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/services/HTTPSandIMAPS-10000001.json</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将<code>"serviceId" : "^(https|imaps)://.*",</code>改为<code>"serviceId" : "^(https|http|imaps)://.*",</code>，如图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2b/cca4a5df53dd47b94e73664bdc8ff3.jpg" alt=""></p><p>再次登录测试</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f5/c1a598cd7ecd0a96df200f38659aec.jpg" alt=""></p><p>这次终于正常了，输入用户名密码点击登录，就会跳转到授权页面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/ae/c40e776bfcecf0ca8b48c4e9582dbc.jpg" alt=""></p><p>点击 Allow 即可成功授权跳转至本博客，我们会注意到 uri 会携带一个 code，这就是 CAS 目前在 oauth2.0 授权中最为完善的 code 授权模式了。</p><p>至此， CAS 5.3 集成 oauth2.0 的授权已经搭建完毕</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/13/f1a8df13c6ee93210a970833c5059a.jpg" alt=""></p><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注释掉默认的 <code>cas.authn.accept.users</code> 认证方式并添加与<code>LDAP Server</code>连接的配置(请根据自己的<code>LDAP</code>服务器信息进行修改)</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">##</span><span class="token comment" spellcheck="true"># CAS Authentication Credentials</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># cas.authn.accept.users=casuser::Mellon</span><span class="token attr-name">cas.authn.ldap[0].principalAttributeList</span><span class="token punctuation">=</span><span class="token attr-value">sn,cn:commonName,givenName,eduPersonTargettedId:SOME_IDENTIFIER</span><span class="token attr-name">cas.authn.ldap[0].collectDnAttribute</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.authn.ldap[0].principalDnAttributeName</span><span class="token punctuation">=</span><span class="token attr-value">principalLdapDn</span><span class="token attr-name">cas.authn.ldap[0].allowMultiplePrincipalAttributeValues</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.ldap[0].allowMissingPrincipalAttributeValue</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.ldap[0].credentialCriteria</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.attributeRepository.ldap[0].attributes.uid</span><span class="token punctuation">=</span><span class="token attr-value">uid</span><span class="token attr-name">cas.authn.attributeRepository.ldap[0].attributes.displayName</span><span class="token punctuation">=</span><span class="token attr-value">displayName</span><span class="token attr-name">cas.authn.attributeRepository.ldap[0].attributes.cn</span><span class="token punctuation">=</span><span class="token attr-value">commonName</span><span class="token attr-name">cas.authn.attributeRepository.ldap[0].attributes.affiliation</span><span class="token punctuation">=</span><span class="token attr-value">groupMembership</span><span class="token attr-name">cas.authn.ldap[0].ldapUrl</span><span class="token punctuation">=</span><span class="token attr-value">ldap://devops.iamzhl.top:389</span><span class="token attr-name">cas.authn.ldap[0].bindDn</span><span class="token punctuation">=</span><span class="token attr-value">cn=Manager,dc=iamzhl,dc=top</span><span class="token attr-name">cas.authn.ldap[0].bindCredential</span><span class="token punctuation">=</span><span class="token attr-value">passwd</span><span class="token attr-name">cas.authn.ldap[0].poolPassivator</span><span class="token punctuation">=</span><span class="token attr-value">BIND</span><span class="token attr-name">cas.authn.ldap[0].connectionStrategy</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.ldap[0].providerClass</span><span class="token punctuation">=</span><span class="token attr-value">org.ldaptive.provider.unboundid.UnboundIDProvider</span><span class="token attr-name">cas.authn.ldap[0].connectTimeout</span><span class="token punctuation">=</span><span class="token attr-value">5000</span><span class="token attr-name">cas.authn.ldap[0].trustCertificates</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.ldap[0].keystore</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.ldap[0].keystorePassword</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.ldap[0].keystoreType</span><span class="token punctuation">=</span><span class="token attr-value">PKCS12</span><span class="token attr-name">cas.authn.ldap[0].minPoolSize</span><span class="token punctuation">=</span><span class="token attr-value">3</span><span class="token attr-name">cas.authn.ldap[0].maxPoolSize</span><span class="token punctuation">=</span><span class="token attr-value">10</span><span class="token attr-name">cas.authn.ldap[0].validateOnCheckout</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.ldap[0].validatePeriodically</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.ldap[0].validatePeriod</span><span class="token punctuation">=</span><span class="token attr-value">500</span><span class="token attr-name">cas.authn.ldap[0].validateTimeout</span><span class="token punctuation">=</span><span class="token attr-value">5000</span><span class="token attr-name">cas.authn.ldap[0].failFast</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.authn.ldap[0].idleTime</span><span class="token punctuation">=</span><span class="token attr-value">500</span><span class="token attr-name">cas.authn.ldap[0].prunePeriod</span><span class="token punctuation">=</span><span class="token attr-value">24</span><span class="token attr-name">cas.authn.ldap[0].blockWaitTime</span><span class="token punctuation">=</span><span class="token attr-value">5000</span><span class="token attr-name">cas.authn.ldap[0].useSsl</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.authn.ldap[0].useStartTls</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.authn.ldap[0].responseTimeout</span><span class="token punctuation">=</span><span class="token attr-value">8000</span><span class="token attr-name">cas.authn.ldap[0].allowMultipleDns</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.authn.ldap[0].name</span><span class="token punctuation">=</span><span class="token attr-name">cas.authn.ldap[0].type</span><span class="token punctuation">=</span><span class="token attr-value">AUTHENTICATED</span><span class="token attr-name">cas.authn.ldap[0].searchFilter</span><span class="token punctuation">=</span><span class="token attr-value">uid={user}</span><span class="token comment" spellcheck="true">#cas.authn.ldap[0].enhanceWithEntryResolver=true</span><span class="token attr-name">cas.authn.ldap[0].derefAliases</span><span class="token punctuation">=</span><span class="token attr-value">NEVER</span><span class="token attr-name">cas.authn.ldap[0].dnFormat</span><span class="token punctuation">=</span><span class="token attr-value">uid=%s,ou=People,dc=iamzhl,dc=top</span><span class="token attr-name">cas.authn.ldap[0].baseDn</span><span class="token punctuation">=</span><span class="token attr-value">ou=People,dc=iamzhl,dc=top</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启 Tomcat 查看日志</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># shutdown.sh</span><span class="token comment" spellcheck="true"># startup.sh</span><span class="token comment" spellcheck="true"># tail -f /usr/local/tomcat/logs/catalina.out</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f2/308f5dc1de191625e6087c1d040824.jpg" alt=""></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/70/749184f3907b06951093fc2a944e42.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt=""></p><p>打开 CAS 网址测试 <code>http://devops.iamzhl.top:8080/cas/login</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/48/9f8dc131728eda81cd522d5db954d4.jpg" alt=""></p><p>输入用户名密码登陆成功</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/89/2e8366b3accc1248a4043079a958a3.jpg" alt=""></p><p>日志输出如下</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c3/cf45af8f7ab6b3aa80267f95cb6a42.jpg" alt=""></p><p>至此，CAS 5.3 整合 openLDAP 结束。</p><h2 id="整合-MySQL-认证"><a href="#整合-MySQL-认证" class="headerlink" title="整合 MySQL 认证"></a>整合 MySQL 认证</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote><p>修改配置文件</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">vim /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>最后添加如下内容 (需要将静态认证关闭，即 cas.authn.accept.users 配置项注释掉即可)</p></blockquote><pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">##</span><span class="token comment" spellcheck="true"># MySQL Authentication Credentials</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># 定义查询用户名的 sql 语句</span><span class="token attr-name">cas.authn.jdbc.query[0].sql</span><span class="token punctuation">=</span><span class="token attr-value">select * from sys_user where username=?</span><span class="token comment" spellcheck="true"># 定义用户密码字段</span><span class="token attr-name">cas.authn.jdbc.query[0].fieldPassword</span><span class="token punctuation">=</span><span class="token attr-value">password</span><span class="token comment" spellcheck="true"># 定义提示修改密码字段</span><span class="token attr-name">cas.authn.jdbc.query[0].fieldExpired</span><span class="token punctuation">=</span><span class="token attr-value">expired</span><span class="token comment" spellcheck="true"># 定义禁用用户的字段</span><span class="token attr-name">cas.authn.jdbc.query[0].fieldDisabled</span><span class="token punctuation">=</span><span class="token attr-value">disabled</span><span class="token comment" spellcheck="true"># 使用的数据库方言</span><span class="token attr-name">cas.authn.jdbc.query[0].dialect</span><span class="token punctuation">=</span><span class="token attr-value">org.hibernate.dialect.MySQLDialect</span><span class="token comment" spellcheck="true"># 定义数据库类</span><span class="token attr-name">cas.authn.jdbc.query[0].driverClass</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span class="token comment" spellcheck="true"># 使用的数据库</span><span class="token attr-name">cas.authn.jdbc.query[0].url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/cas?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;useSSL=false</span><span class="token comment" spellcheck="true"># 使用的数据库用户</span><span class="token attr-name">cas.authn.jdbc.query[0].user</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token comment" spellcheck="true"># 数据库 root 用户密码</span><span class="token attr-name">cas.authn.jdbc.query[0].password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token comment" spellcheck="true">#默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密</span><span class="token attr-name">cas.authn.jdbc.query[0].passwordEncoder.type</span><span class="token punctuation">=</span><span class="token attr-value">DEFAULT</span><span class="token attr-name">cas.authn.jdbc.query[0].passwordEncoder.characterEncoding</span><span class="token punctuation">=</span><span class="token attr-value">UTF-8</span><span class="token attr-name">cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm</span><span class="token punctuation">=</span><span class="token attr-value">MD5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><blockquote><p>创建数据库</p></blockquote><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> create database cas;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>创建表</p></blockquote><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> use casmysql> create table sys_user ( `id` int(11) not null auto_increment, `username` varchar(30) not null, `password` varchar(64) not null, `email`    varchar(50), `address`  varchar(100), `age`      int, `expired` int, `disabled` int, `locked` int,  primary key (`id`)) engine=innodb auto_increment=1 default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>数据表字段说明:</p></blockquote><p><strong><em>id 为自增字段，username 为用户名，password 为账号密码，email 为邮件地址，address 为联系地址，age 为用户年龄，expired 为是否登录后提示修改密码，disabled 为是否禁用账号，locked 为是否锁定账号，其中 id 为主键自增。</em></strong></p><blockquote><p>配置完成后在数据表添加用户启动 Tomcat 进行测试即可。</p></blockquote><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> insert into sys_user values ('1', 'admin', 'e10adc3949ba59abbe56e057f20f883e', 'admin@example.com', '北京顺义', 20, 0, 0, 0);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>需要注意的是插入数据时，需要用密码的 MD5 值</em></strong></p><h2 id="自定义登出跳转界面"><a href="#自定义登出跳转界面" class="headerlink" title="自定义登出跳转界面"></a>自定义登出跳转界面</h2><p>某些时候，我们可能需要对登出进行定制，比如等出后跳转到等出界面，在<code>CAS 5.3</code>以后的版本中，直接修改前端的<code>HTML</code>页面无法完成登出的定制跳转，不过官方提供了更为方便的设置方法，我们可以通过修改配置文件<code>application.properties</code>来实现，在文件中添加以下内容</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">cas.logout.followServiceRedirects</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">cas.logout.redirectParameter</span><span class="token punctuation">=</span><span class="token attr-value">service</span><span class="token attr-name">cas.logout.redirectUrl</span><span class="token punctuation">=</span><span class="token attr-value">https://default.cas.com</span><span class="token attr-name">cas.logout.confirmLogout</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">cas.logout.removeDescendantTickets</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>请根据需要将其中的<code>redirectUrl</code>改为要定制的登出跳转链接</em></p><h2 id="自定义默认的登录跳转界面"><a href="#自定义默认的登录跳转界面" class="headerlink" title="自定义默认的登录跳转界面"></a>自定义默认的登录跳转界面</h2><p>登出跳转可以定制，登录的也可以，有些时候，可能需要在直接访问的<code>CAS</code>的时候，登陆成功后直接跳转到指定的界面，比如直接访问<code>http://devops.iamzhl.top:8080/cas</code>，需要跳转到<code>http://devops.iamzhl.top/index.html</code>，那么就可以在<code>application.properties</code>中添加以下属性</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">cas.view.defaultRedirectUrl</span><span class="token punctuation">=</span><span class="token attr-value">http://devops.iamzhl.top/index.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="自定义登录界面主题"><a href="#自定义登录界面主题" class="headerlink" title="自定义登录界面主题"></a>自定义登录界面主题</h2><p>在<code>cas/WEB-INF/classes/static/themes</code>中新建一个文件夹以要设置的主题名命名，比如<code>devops</code>，在此目录下建立<code>js</code>、<code>css</code>以及<code>images</code>等静态资源文件夹，将定制的静态资源保存好，结构如下</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fzqqbpvu1cj31p818k4au.jpg" alt=""></p><p>然后在<code>application.properties</code>添加以下属性</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name"> cas.theme.defaultThemeName</span><span class="token punctuation">=</span><span class="token attr-value">devops</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAS </tag>
            
            <tag> 5.3.4 </tag>
            
            <tag> 单点登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装部署邮件服务器</title>
      <link href="/Install-and-deploy-mail-server-on-CentOS-7.html"/>
      <url>/Install-and-deploy-mail-server-on-CentOS-7.html</url>
      
        <content type="html"><![CDATA[<h1 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h1><p>CentOS 7.2 1511</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install postfix</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果机器已经安装了sendmail，需要将其卸载，下面两条命令均可</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y remove sendmail</span><span class="token comment" spellcheck="true"># rpm -e sendmail</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改MTA(默认邮件代理)</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># alternatives --config mta</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查是否配置成功</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># alternatives --display mta</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/14/519a03d59c7bc4ff363f66a8620736.jpg" alt=""></p><p>这里我已经安装过postfix了</p><h2 id="安装dovecot"><a href="#安装dovecot" class="headerlink" title="安装dovecot"></a>安装dovecot</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install dovecot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/fd/d041b10136a8aea22008556cba508a.jpg" alt=""></p><h2 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vi /etc/postfix/main.cf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改以下参数</p><pre><code>myhostname = mail.zhanghl.cn  # 取消注释，设置hostnamemydomain = zhanghl.cn  # 取消注释，设置域名myorigin = $mydomain  # 取消注释inet_interfaces = all  # 修改为allinet_protocols = ipv4  # 修改ipv4，如果支持ipv6，则可以为allmydestination = $myhostname, localhost.$mydomain, localhost, $mydomain # 修改在最后添加$mydomainmynetworks = 127.0.0.0/8, 10.0.0.0/24  # 取消注释，指定内网和本地的IP地址范围home_mailbox = Maildir/  # 取消注释，邮件保存目录smtpd_banner = $myhostname ESMTP $mail_name ($mail_version)  # 取消注释，邮件服务器欢迎信息</code></pre><p>文件最后添加以下内容</p><pre><code># Setup max mail attachment to 10Mmessage_size_limit = 10485760# Setup max capacity of Inbox to 1Gmailbox_size_limit = 1073741824# SMTP Authenticationsmtpd_sasl_type = dovecotsmtpd_sasl_path = private/authsmtpd_sasl_auth_enable = yessmtpd_sasl_security_options = noanonymoussmtpd_sasl_local_domain = $myhostnamesmtpd_recipient_restrictions = permit_mynetworks,permit_auth_destination,permit_sasl_authenticated,reject</code></pre><p>启动并设置自启动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start postfix  //启动</span><span class="token comment" spellcheck="true"># systemctl enable postfix  //自启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="配置dovecot"><a href="#配置dovecot" class="headerlink" title="配置dovecot"></a>配置dovecot</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/dovecot/dovecot.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>listen = *  //取消注释并修改</code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/dovecot/conf.d/10-auth.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>disable_plaintext_auth = no  //取消注释并修改auth_mechanisms = plain login  //修改添加login</code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/dovecot/conf.d/10-mail.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>mail_location = maildir:~/Maildir  //修改设置邮件存储位置</code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/dovecot/conf.d/10-master.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>取消注释并添加user和group属性</p><pre><code>unix_listener /var/spool/postfix/private/auth {    mode = 0666    user = postfix    group = postfix}</code></pre><p>启动并设置自启动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start dovecot  //启动</span><span class="token comment" spellcheck="true"># systemctl enable dovecot  //自启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>添加一个子域名mail，A记录解析到服务器IP。</p><p>再添加一个MX记录，主机记录为空，记录值为上面解析的二级域名mail.zhanghl.cn，优先级10。</p><p>注意：解析生效可能需要一段时间。</p><p>也可以修改/etc/hosts添加邮件服务器域名实现。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/hosts</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e2/0e95d3345f60b59bffdf377e55fc3b.jpg" alt=""></p><h2 id="测试邮箱"><a href="#测试邮箱" class="headerlink" title="测试邮箱"></a>测试邮箱</h2><p>首先安装telnet，由于CentOS 7已经默认没有了xinetd和telnet，因此需要安装</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install xinetd telnet telnet-server</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置xinetd启动并自启动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start xinetd</span><span class="token comment" spellcheck="true"># systemctl enable xinetd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>利用telnet测试邮件服务器</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>zhanghl@centos-7 ~<span class="token punctuation">]</span>$ telnet zhanghl.cn 25Trying 127.0.0.1<span class="token punctuation">..</span>.Connected to zhanghl.cn.Escape character is <span class="token string">'^]'</span><span class="token keyword">.</span>220 mail.zhanghl.cn ESMTP Postfix <span class="token punctuation">(</span>2.10.1<span class="token punctuation">)</span>mail from:zhanghl250 2.1.0 Okrcpt to:root250 2.1.5 Okdata354 End data with <span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token operator">&lt;</span>LF<span class="token operator">></span>.<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token operator">&lt;</span>LF<span class="token operator">></span>Hello, i<span class="token string">'m zhanghl!.250 2.0.0 Ok: queued as 731144191B7Fquit221 2.0.0 ByeConnection closed by foreign host.[zhanghl@centos-7 ~]$ telnet zhanghl.cn 110Trying 127.0.0.1...Connected to zhanghl.cn.Escape character is '</span>^<span class="token punctuation">]</span><span class="token string">'.+OK Dovecot ready.user zhanghl+OKpass 123456+OK Logged in.list+OK 1 messages:1 2381.retr 1+OK 2381 octetsReturn-Path: &lt;>X-Original-To: zhanghl@zhanghl.cnDelivered-To: zhanghl@zhanghl.cnReceived: by mail.zhanghl.cn (Postfix)    id 61E594191B92; Fri, 19 Oct 2018 22:44:27 +0800 (CST)Date: Fri, 19 Oct 2018 22:44:27 +0800 (CST)From: MAILER-DAEMON@zhanghl.cn (Mail Delivery System)Subject: Undelivered Mail Returned to SenderTo: zhanghl@zhanghl.cnAuto-Submitted: auto-repliedMIME-Version: 1.0Content-Type: multipart/report; report-type=delivery-status;    boundary="731144191B7F.1539960267/mail.zhanghl.cn"Message-Id: &lt;20181019144427.61E594191B92@mail.zhanghl.cn>This is a MIME-encapsulated message.--731144191B7F.1539960267/mail.zhanghl.cnContent-Description: NotificationContent-Type: text/plain; charset=us-asciiThis is the mail system at host mail.zhanghl.cn.I'</span>m sorry to have to inform you that your message could notbe delivered to one or <span class="token function">more</span> recipients. It<span class="token string">'s attached below.For further assistance, please send mail to postmaster.If you do so, please include this problem report. You candelete your own text from the attached returned message.                   The mail system&lt;root@zhanghl.cn> (expanded from &lt;root>): maildir delivery failed: create    maildir file /root/Maildir/tmp/1539960267.P14995.centos-7.shared:    Permission denied--731144191B7F.1539960267/mail.zhanghl.cnContent-Description: Delivery reportContent-Type: message/delivery-statusReporting-MTA: dns; mail.zhanghl.cnX-Postfix-Queue-ID: 731144191B7FX-Postfix-Sender: rfc822; zhanghl@zhanghl.cnArrival-Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)Final-Recipient: rfc822; root@zhanghl.cnOriginal-Recipient: rfc822;rootAction: failedStatus: 5.2.0Diagnostic-Code: X-Postfix; maildir delivery failed: create maildir file    /root/Maildir/tmp/1539960267.P14995.centos-7.shared: Permission denied--731144191B7F.1539960267/mail.zhanghl.cnContent-Description: Undelivered MessageContent-Type: message/rfc822Return-Path: &lt;zhanghl@zhanghl.cn>Received: from mail.zhanghl.cn (mail.zhanghl.cn [127.0.0.1])    by mail.zhanghl.cn (Postfix) with SMTP id 731144191B7F    for &lt;root>; Fri, 19 Oct 2018 22:43:58 +0800 (CST)Message-Id: &lt;20181019144410.731144191B7F@mail.zhanghl.cn>Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)From: zhanghl@zhanghl.cnHello, i'</span>m zhanghl<span class="token operator">!</span>--731144191B7F.1539960267/mail.zhanghl.cn--<span class="token keyword">.</span>quit+OK Logging out.Connection closed by foreign host.<span class="token punctuation">[</span>zhanghl@centos-7 ~<span class="token punctuation">]</span>$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用邮箱"><a href="#使用邮箱" class="headerlink" title="使用邮箱"></a>使用邮箱</h2><p>一切都弄好以后，就可以使用Foxmail等第三方软件来收发邮件了。在这里需要说一下，系统用户就是邮件的用户，例如root，就是一个邮箱用户，邮箱是<a href="mailto:root@zhanghl.cn" rel="external nofollow noreferrer">root@zhanghl.cn</a>，密码就是root的密码，所以需要创建用户，只要使用useradd创建用户，再使用passwd设置密码。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Linux </tag>
            
            <tag> SMTP </tag>
            
            <tag> Mail Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TestLink安装部署</title>
      <link href="/TestLink-install-and-deploy.html"/>
      <url>/TestLink-install-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h1 id="TestLink安装部署"><a href="#TestLink安装部署" class="headerlink" title="TestLink安装部署"></a><center>TestLink安装部署</center></h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># yum -y install mysql mysql-server mysql-devel</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动MySQL服务</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取安装MySQL时的初始密码并登录MySQL</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># grep 'temporary password' /var/log/mysqld.log</span><span class="token comment" spellcheck="true"># mysql -u root -p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt=""></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> set global validate_password_policy=0;mysql> set global validate_password_length=1;mysql> set password for root@localhost=password('root');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt=""></p><p>创建testlink用户并创建testlink要用的数据库并把testlink数据库的所有权限赋给testlink用户</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> CREATE USER 'testlink'@'%' IDENTIFIED BY 'root';mysql> CREATE DATABASE testlink; mysql> GRANT ALL ON testlink.* TO 'testlink'@'%'; mysql> flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>设置MySQL启动与自启动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl enable mysqld    //自启动</span><span class="token comment" spellcheck="true"># systemctl start mysqld     //启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动自启动"><a href="#启动自启动" class="headerlink" title="启动自启动"></a>启动自启动</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl enable httpd  //自启动</span><span class="token comment" spellcheck="true"># systemctl start httpd   //启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><span class="token comment" spellcheck="true"># yum -y install `yum search php | grep php56w | grep -v "===" | grep -v mysqlnd | awk -F '.' '{print $1}'`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="测试一下PHP环境"><a href="#测试一下PHP环境" class="headerlink" title="测试一下PHP环境"></a>测试一下PHP环境</h3><p>写一个phpinfo测试php环境是否正常</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /var/www/html/info.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>浏览器打开<code>http://IP:httpd端口/info.php</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/bf/a51c4fe3482af30d3b54a102c5a844.jpg" alt=""></p><p>如图，PHP环境安装完成。</p><p>*<em>Note: *</em><br>PHP无法正确解析，网页显示源码的解决方法：</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">vi</span> /etc/php.ini <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将short_open_tag = Off修改为short_open_tag = On，然后重启httpd服务即可</p><h2 id="安装TestLink"><a href="#安装TestLink" class="headerlink" title="安装TestLink"></a>安装TestLink</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://jaist.dl.sourceforge.net/project/testlink/TestLink%201.9/TestLink%201.9.18/testlink-1.9.18.tar.gz</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="解压重命名"><a href="#解压重命名" class="headerlink" title="解压重命名"></a>解压重命名</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># tar zxvf testlink-1.9.18.tar.gz</span><span class="token comment" spellcheck="true"># mv testlink-1.9.18 testlink</span><span class="token comment" spellcheck="true"># mv testlink /var/www/html/</span><span class="token comment" spellcheck="true"># chown -R apache:apache /var/www/html/testlink</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># sed -i -e "s/AllowOverride None/AllowOverride All/g" /etc/httpd/conf/httpd.conf</span><span class="token comment" spellcheck="true"># sed -i -e "s/DirectoryIndex index.html/DirectoryIndex index.html index.php index.shtm/g" /etc/httpd/conf/httpd.conf</span><span class="token comment" spellcheck="true"># sed -i -e "s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 2400/g" /etc/php.ini</span><span class="token comment" spellcheck="true"># sed -i -e "s/max_execution_time = 30/max_execution_time = 120/g" /etc/php.ini</span><span class="token comment" spellcheck="true"># service httpd restart</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/49/3c7f4c9291a6c276e5dad2200d5571.jpg" alt=""></p><h3 id="新建一些PHP环境要求必备的文件夹并赋予适当权限"><a href="#新建一些PHP环境要求必备的文件夹并赋予适当权限" class="headerlink" title="新建一些PHP环境要求必备的文件夹并赋予适当权限"></a>新建一些PHP环境要求必备的文件夹并赋予适当权限</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># mkdir -p /var/www/html/testlink/gui/templates_c</span><span class="token comment" spellcheck="true"># mkdir -p /var/testlink/logs/</span><span class="token comment" spellcheck="true"># mkdir -p /var/testlink/upload_area/</span><span class="token comment" spellcheck="true"># chmod 777 /var/www/html/testlink/gui/templates_c</span><span class="token comment" spellcheck="true"># chmod 777 /var/testlink/logs/</span><span class="token comment" spellcheck="true"># chmod 777 /var/testlink/upload_area/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/23/c132221e0b416226f6f7df1e63b12c.jpg" alt=""></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>浏览器打开<code>http://IP:port/testlink/install</code>(将IP换成自己主机IP，端口号换为自己主机的Apache服务端口号)。如图，点击New installation开始安装</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/14/da839143e11bec790a2a77f7247529.jpg" alt=""></p><p>选中同意协议，continue</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/7c/b33fa4f939e6447fa43f36b5577b43.jpg" alt=""></p><p>进入系统环境检测阶段，这一步需要根据错误提示进行配置，前面已经在安装php和testlink时解决了，所以现在已经没有错误了，图中橙色的提示可以忽略，点击continue</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/8c/84dad1406d9a22e95913b060326730.jpg" alt=""></p><p>如图，设定数据库管理员登录账户密码，自定义TestLink的数据库登录账户密码，其余均保持默认，点击Process TestLink Setup</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/58/736d782618beafcda69918ffca7749.jpg" alt=""></p><p><strong>这里有一点提示，如上图中黑体所说 ，需要手动导入<code>udf0</code>结尾的<code>sql</code>文件，只需在<code>mysql</code>命令行中执行<code>source /var/www/html/testlink/install/sql/mysql/testlink_create_udf0.sql</code>即可，需要说明的是，需要手动修改其中的<code>use</code>字段，如下图，修改为<code>mysql</code>新建的<code>testlink</code>数据库名</strong></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fytosr0ucnj31p818kk2a.jpg" alt=""></p><p><em>如果安装到最后出现了打印数据库调试信息，请检查<code>php</code>的<code>mysql</code>模块，命令是<code>php -m | grep mysql</code>，如下图则是正常的</em></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fytouqtrwgj31p818k7a4.jpg" alt=""></p><p><em>如果提示动态库无法加载之类的错误，只需重新安装<code>php-mysql</code>，然后重启<code>php-fpm</code>和<code>httpd</code>即可</em></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>安装完成网址输入<a href="http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin" target="_blank" rel="noopener external nofollow noreferrer">http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin</a></p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TestLink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 安装部署 Gerrit</title>
      <link href="/Gerrit-install-and-deploy.html"/>
      <url>/Gerrit-install-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h2 id="Gerrit-安装配置过程"><a href="#Gerrit-安装配置过程" class="headerlink" title="Gerrit 安装配置过程"></a><cneter><code>Gerrit</code> 安装配置过程</cneter></h2><h1 id="安装过程如下"><a href="#安装过程如下" class="headerlink" title="安装过程如下"></a>安装过程如下</h1><h2 id="步骤一：创建专用账户和工作目录"><a href="#步骤一：创建专用账户和工作目录" class="headerlink" title="步骤一：创建专用账户和工作目录"></a>步骤一：创建专用账户和工作目录</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># adduser gerrit  // 创建专用账户</span><span class="token comment" spellcheck="true"># passwd gerrit  //为专有账户设置密码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="步骤二：配置Java环境"><a href="#步骤二：配置Java环境" class="headerlink" title="步骤二：配置Java环境"></a>步骤二：配置<code>Java</code>环境</h2><ul><li>去官网下载<code>JDK</code>：<a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html" target="_blank" rel="noopener external nofollow noreferrer">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt=""></p><ul><li>安装<code>JDK</code><br>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -ivh jdk-8u161-linux-x64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>设置环境变量，编辑<code>~/.bashrc</code>，</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在文件的末尾添加以下行</p><pre><code>export JAVA_HOME=/usr/java/jdk1.8.0_161export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=$JAVA_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt=""></p><p>使环境配置生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># source ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>测试<code>Java</code>环境，在终端输入：<code>java -version</code>查看是否正常显示版本信息，若显示则安装成功</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt=""></p><h2 id="步骤三：安装MySQL"><a href="#步骤三：安装MySQL" class="headerlink" title="步骤三：安装MySQL"></a>步骤三：安装MySQL</h2><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># yum -y install mysql mysql-server mysql-devel</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动MySQL服务</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取安装MySQL时的初始密码并登录MySQL</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># grep 'temporary password' /var/log/mysqld.log</span><span class="token comment" spellcheck="true"># mysql -u root -p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt=""></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> set global validate_password_policy=0;mysql> set global validate_password_length=1;mysql> set password for root@localhost=password('root');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt=""></p><p>创建gerrit用户</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> CREATE USER 'gerrit'@'%' IDENTIFIED BY '123456';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建gerrit要用的数据表</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> CREATE DATABASE ReviewDB; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/d2/49b9ee020b217374593ca9bf2333b3.jpg" alt=""></p><p>把ReviewDB的所有权限赋给gerrit</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> GRANT ALL ON ReviewDB.* TO 'gerrit'@'%'; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/73/94a9f46a5dd2572e26ac02b13ec1d8.jpg" alt=""></p><h2 id="步骤四：安装Git"><a href="#步骤四：安装Git" class="headerlink" title="步骤四：安装Git"></a>步骤四：安装Git</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="步骤五：下载安装gerrit"><a href="#步骤五：下载安装gerrit" class="headerlink" title="步骤五：下载安装gerrit"></a>步骤五：下载安装<code>gerrit</code></h2><ul><li>从官网下载<code>gerrit</code>，存放于<code>/home/gerrit</code>目录：</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://gerrit-releases.storage.googleapis.com/gerrit-2.15.5.war</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装<code>gerrit</code>：</li></ul><p>首先切换为gerrit用户，然后运行gerrit的war包</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># su gerrit</span>$ <span class="token function">cd</span> $ java -jar gerrit-2.15.war init -d review_site<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>一路回车默认安装(其中的认证方式处改为HTTP)</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos-7 gerrit<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su gerrit</span><span class="token punctuation">[</span>gerrit@centos-7 ~<span class="token punctuation">]</span>$ ll总用量 83864-rwxr-xr-x. 1 root root 85872756 8月  21 12:49 gerrit-2.14.war<span class="token punctuation">[</span>gerrit@centos-7 ~<span class="token punctuation">]</span>$ java -jar gerrit-2.15.5.war init -d review_siteUsing secure store: com.google.gerrit.server.securestore.DefaultSecureStore<span class="token punctuation">[</span>2018-08-21 12:51:37,463<span class="token punctuation">]</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO  com.google.gerrit.server.config.GerritServerConfigProvider <span class="token keyword">:</span> No /home/gerrit/review_site/etc/gerrit.config<span class="token punctuation">;</span> assuming defaults*** Gerrit Code Review 2.15.5***Create <span class="token string">'/home/gerrit/review_site'</span> <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span>?*** Git Repositories***Location of Git repositories   <span class="token punctuation">[</span>git<span class="token punctuation">]</span>:*** SQL Database***Database server <span class="token function">type</span>           <span class="token punctuation">[</span>h2<span class="token punctuation">]</span>:*** Index***Type                           <span class="token punctuation">[</span>LUCENE/?<span class="token punctuation">]</span>:*** User Authentication***Authentication method          <span class="token punctuation">[</span>OPENID/?<span class="token punctuation">]</span>: HTTPGet username from custom HTTP header <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?SSO <span class="token function">logout</span> URL                 <span class="token keyword">:</span>Enable signed push support     <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?*** Review Labels***Install Verified label         <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?*** Email Delivery***SMTP server <span class="token function">hostname</span>           <span class="token punctuation">[</span>localhost<span class="token punctuation">]</span>:SMTP server port               <span class="token punctuation">[</span><span class="token punctuation">(</span>default<span class="token punctuation">)</span><span class="token punctuation">]</span>:SMTP encryption                <span class="token punctuation">[</span>NONE/?<span class="token punctuation">]</span>:SMTP username                  <span class="token keyword">:</span>*** Container Process***Run as                         <span class="token punctuation">[</span>gerrit<span class="token punctuation">]</span>:Java runtime                   <span class="token punctuation">[</span>/usr/java/jdk1.8.0_161/jre<span class="token punctuation">]</span>:Copy gerrit-2.15.5.war to review_site/bin/gerrit.war <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span>?Copying gerrit-2.15.5.war to review_site/bin/gerrit.war*** SSH Daemon***Listen on address              <span class="token punctuation">[</span>*<span class="token punctuation">]</span>:Listen on port                 <span class="token punctuation">[</span>29418<span class="token punctuation">]</span>:Generating SSH host key <span class="token punctuation">..</span>. rsa<span class="token punctuation">..</span>. dsa<span class="token punctuation">..</span>. <span class="token keyword">done</span>*** HTTP Daemon***Behind reverse proxy           <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Use SSL <span class="token punctuation">(</span>https://<span class="token punctuation">)</span>             <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Listen on address              <span class="token punctuation">[</span>*<span class="token punctuation">]</span>:Listen on port                 <span class="token punctuation">[</span>8080<span class="token punctuation">]</span>:Canonical URL                  <span class="token punctuation">[</span>http://centos-7.shared:8080/<span class="token punctuation">]</span>:*** Cache****** Plugins***Installing plugins.Install plugin commit-message-length-validator version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Install plugin download-commands version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Install plugin hooks version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Install plugin replication version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Install plugin reviewnotes version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Install plugin singleusergroup version v2.15.5 <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>?Initializing plugins.No plugins found with init steps.Initialized /home/gerrit/review_siteExecuting /home/gerrit/review_site/bin/gerrit.sh startStarting Gerrit Code Review: OKWaiting <span class="token keyword">for</span> server on centos-7.shared:8080 <span class="token punctuation">..</span>. OKOpening http://centos-7.shared:8080/<span class="token comment" spellcheck="true">#/admin/projects/ ...FAILED</span>Open Gerrit with a JavaScript capable browser:  http://centos-7.shared:8080/<span class="token comment" spellcheck="true">#/admin/projects/</span><span class="token punctuation">[</span>gerrit@centos-7 ~<span class="token punctuation">]</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>授权文件夹权限给gerrit用户： </p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># chown -R gerrit:gerrit review_site </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改<code>gerrit</code>配置文件，说明如下</li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ vim review_site/etc/gerrit.config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[gerrit]        basePath = git                          //指定被gerrit管理的所有git库存放位置，即review_site_project/git/        canonicalWebUrl = http://10.211.55.19:8081/project   //指定web访问gerrit的网址//填自己的ip和端口号[database]        type = mysql                             //指定gerrit所默认数据库类型，可以选用mysql，安装并创建gerrit账户        database = /home/gerrit/review_site/db/ReviewDB[auth]        type = HTTP                           //指定浏览器登录gerrit时的认证方式[sendemail]        smtpServer = localhost                //局域网邮件服务器，可使用hMailSever搭建[container]        user = gerrit                             //指定gerrit所在机器的用户身份与上文创建的用户对应一致,可以是root        javaHome = /usr/java/jdk1.8.0_161/jre[sshd]        listenAddress = *:29418                   //指定sshd服务监听的端口号[httpd]        listenUrl = http://*:8081/                //指定http代理地址[cache]        directory = cache                        //缓存位置</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/31/8e586e93c265a2f6ff36d3db0454e7.jpg" alt=""></p><p>重启gerrit服务</p><pre class="line-numbers language-bash"><code class="language-bash">$ review_site/bin/gerrit.sh restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置gerrit服务开机启动</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ln -snf /home/gerrit/review_site/bin/gerrit.sh /etc/init.d/gerrit.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="步骤六：配置反向代理服务-nginx"><a href="#步骤六：配置反向代理服务-nginx" class="headerlink" title="步骤六：配置反向代理服务(nginx)"></a>步骤六：配置反向代理服务(nginx)</h2><blockquote><p>说明： 局域网本地安装，设置本地<code>repo</code>库</p></blockquote><h3 id="安装nginx反向代理服务器"><a href="#安装nginx反向代理服务器" class="headerlink" title="安装nginx反向代理服务器"></a>安装<code>nginx</code>反向代理服务器</h3><ul><li>安装<code>gcc-c++ pcre pcre-devel zlib zlib-devel openssl</code>： </li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装启动<code>nginx</code>并设置自启动</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><span class="token comment" spellcheck="true"># yum update &amp;&amp; yum -y install nginx </span><span class="token comment" spellcheck="true"># systemctl enable nginx</span>Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.<span class="token comment" spellcheck="true"># systemctl start nginx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置nginx："><a href="#配置nginx：" class="headerlink" title="配置nginx："></a>配置<code>nginx</code>：</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim /etc/nginx/conf.d/default.conf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>server {    listen       82;    server_name  localhost;    auth_basic "Welcome to Gerrit Code Review !";    auth_basic_user_file /home/gerrit/review_site/etc/passwd;    #charset koi8-r;    #access_log  /var/log/nginx/host.access.log  main;    location / {        #root   /usr/share/nginx/html;        #index  index.html index.htm index.php index.jsp;        proxy_pass http://127.0.0.1:8081;        #proxy_set_header X-Forwarded-For $remote_addr;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    }    #error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /usr/share/nginx/html;    }</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a1/7b9e070ca210075f5fec8631a40d8b.jpg" alt=""></p><p>启动<code>nginx</code>服务：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># setenforce 0                 //关闭selinux以避免造成权限问题</span><span class="token comment" spellcheck="true"># systemctl disable firewalld  //禁用防火墙</span><span class="token comment" spellcheck="true"># systemctl stop firewalld     //关闭防火墙</span><span class="token comment" spellcheck="true"># systemctl start nginx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置第一个gerrit用户的账号和密码"><a href="#设置第一个gerrit用户的账号和密码" class="headerlink" title="设置第一个gerrit用户的账号和密码"></a>设置第一个<code>gerrit</code>用户的账号和密码</h3><p>要用到htpasswd命令需要首先安装有httpd</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install httpd</span>$ <span class="token function">touch</span> ./review_site/etc/passwd$ htpasswd -b ./review_site/etc/passwd gerrit 123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="步骤七：安装配置gitweb"><a href="#步骤七：安装配置gitweb" class="headerlink" title="步骤七：安装配置gitweb"></a>步骤七：安装配置<code>gitweb</code></h2><h3 id="安装gitweb-最好在联网环境下安装，或者在离线环境下下载对应的依赖包"><a href="#安装gitweb-最好在联网环境下安装，或者在离线环境下下载对应的依赖包" class="headerlink" title="安装gitweb,最好在联网环境下安装，或者在离线环境下下载对应的依赖包"></a>安装<code>gitweb</code>,最好在联网环境下安装，或者在离线环境下下载对应的依赖包</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install gitweb</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置gitweb-与gerrit集成"><a href="#配置gitweb-与gerrit集成" class="headerlink" title="配置gitweb,与gerrit集成"></a>配置<code>gitweb</code>,与<code>gerrit</code>集成</h3><p>修改<code>gitweb</code>的配置文件（/etc/gitweb.conf），将配置项 “$projectroot”修改为<code>gerrit</code>的<code>git</code>仓库目录。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/35/3723767206d90e1f1fbf859d5df6ba.jpg" alt=""></p><p>修改/home/gerrit/review_site/etc/gerrit.config,添加：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/26/432e046271c2658c8a203b86c19d5f.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/9d/b0b9039fc3682a7cdfae62ce5387d9.jpg" alt=""></p><h3 id="配置gerrit权限"><a href="#配置gerrit权限" class="headerlink" title="配置gerrit权限"></a>配置gerrit权限</h3><p>使用管理员账号登录<code>gerrit</code>,修改<code>All-Projects</code>的权限，为<code>refs/*</code>和<code>refs/meta/config</code>的<code>Read</code>配置项配置合适的权限。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/bc/d4431e93f304e1a913b244cadfd492.jpg" alt=""></p><p><strong>注意：如果你是在root用户下输入上面的命令 创建了password文件到/home/gerrit/review_site/etc目录中,你会发现在登录的时候永远登录不成功,永远会得到服务器500的错误页面。原因是password文件的权限问题。我们知道,/home/gerrit/是我们之前新建的gerrit用户的,那么这个文件夹的权限是700,也就是只允许gerrit用户访问,其他组的用户是访问不了的,虽然这个文件的权限拥有root用户的所有权限,但是因为它放在700权限的文件夹下面,所以同样其他用户是访问不到的。解决方法如下</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># chown -R gerrit:gerrit /home/gerrit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="重启gerrit服务和Nginx服务"><a href="#重启gerrit服务和Nginx服务" class="headerlink" title="重启gerrit服务和Nginx服务"></a>重启gerrit服务和Nginx服务</h3><p>重启<code>gerrit</code>和<code>nginx</code>服务</p><pre class="line-numbers language-bash"><code class="language-bash">$ /home/gerrit/review_site/bin/gerrit.sh restart<span class="token comment" spellcheck="true"># systemctl restart nginx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="步骤八：测试"><a href="#步骤八：测试" class="headerlink" title="步骤八：测试"></a>步骤八：测试</h2><p>访问<a href="http://localhost，用gerrit用户登录，登录界面如下" target="_blank" rel="noopener external nofollow noreferrer">http://localhost，用gerrit用户登录，登录界面如下</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/74/51196a5c04235cfbd07cf5a09e1b95.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/79/114d466e1f80823db828265ede65ee.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gerrit </tag>
            
            <tag> 代码审查 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins 配置部署</title>
      <link href="/Jenkins-configure-and-deploy.html"/>
      <url>/Jenkins-configure-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h1 id="Jenkins-配置部署"><a href="#Jenkins-配置部署" class="headerlink" title="Jenkins 配置部署"></a><center><code>Jenkins</code> 配置部署</center></h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用；常用的版本管理系统有SVN、GIT，构建工具有Maven、Ant、Gradle。其具备以下特点：</p><ul><li>易于安装：不需要安装、不需要数据库，只需通过java -jar jenkins.war或部署到一个servlet容器中。</li><li>易于配置：所有的配置都可能通过Jenkins提供的web界面完成，当然如果你喜欢，也可以通过手动修改xml文件进行配置。</li><li>消息通知及测试报告：能够生成各类测试报告并通过消息通知机制（Email等）进行报告，包括单元测试、覆盖率测试、静态分析等。</li><li>分布式构建：Jenkins支持多个Slave节点的动态挂载，完成分布式构建。</li><li>资源动态调度：Jenkins的容器资源通过Kubernetes动态调度，动态扩容收缩。</li><li>插件支持：Jenkins支持上千种插件，可以进行扩展，也可以根据需求近定制开发。</li></ul><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><p>以CentOS环境安装部署为例，详细介绍Jenkins安装部署整体过程和常用设置。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>如果使用Jenkins.war包的形式进行安装，需要提前准备以下环境。</p><h5 id="Java环境准备"><a href="#Java环境准备" class="headerlink" title="Java环境准备"></a>Java环境准备</h5><h6 id="去官网下载JDK："><a href="#去官网下载JDK：" class="headerlink" title="去官网下载JDK："></a>去官网下载<code>JDK</code>：</h6><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html" target="_blank" rel="noopener external nofollow noreferrer">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt=""></p><h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><ul><li>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -ivh jdk-8u161-linux-x64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/ad/4301bf0ab8d0d138ded7bc3709fd4a.jpg" alt=""></p><h6 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h6><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在文件的末尾添加以下行</p><pre><code>export JAVA_HOME=/usr/java/jdk1.8.0_161export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=$JAVA_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt=""></p><p>使环境配置生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># source ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="测试Java环境"><a href="#测试Java环境" class="headerlink" title="测试Java环境"></a>测试<code>Java</code>环境</h6><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># java -version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  查看是否正常显示版本信息，若显示则安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt=""></p><h5 id="Tomcat环境准备"><a href="#Tomcat环境准备" class="headerlink" title="Tomcat环境准备"></a>Tomcat环境准备</h5><h6 id="下载Tomcat"><a href="#下载Tomcat" class="headerlink" title="下载Tomcat"></a>下载Tomcat</h6><blockquote><p>地址: <a href="http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz" target="_blank" rel="noopener external nofollow noreferrer">http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz</a></p></blockquote><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h6><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># tar zxvf apache-tomcat-8.5.32.tar.gz</span><span class="token comment" spellcheck="true"># mv apache-tomcat-8.5.32 /usr/local/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="配置Tomcat环境"><a href="#配置Tomcat环境" class="headerlink" title="配置Tomcat环境"></a>配置Tomcat环境</h6><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在文件的末尾添加以下行</p><pre><code>export CATALINA_BASE=/usr/local/apache-tomcat-8.5.32export TOMCAT_HOME=/usr/local/apache-tomcat-8.5.32export CATALINA_HOME=/usr/local/apache-tomcat-8.5.32export PATH=$PATH:$CATALINA_HOME/bin:$CATALINA_HOME/lib</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/66/1656ee9280886c6c7de6057c8835cd.jpg" alt=""></p><p>使环境配置生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># source ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="启动Tomcat服务"><a href="#启动Tomcat服务" class="headerlink" title="启动Tomcat服务"></a>启动Tomcat服务</h6><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># startup.sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f9/4e6e503aa6fe748959adfb182e3e1c.jpg" alt=""></p><h6 id="测试Tomcat"><a href="#测试Tomcat" class="headerlink" title="测试Tomcat"></a>测试Tomcat</h6><p>打开浏览器，在地址栏中输入<a href="http://IP:8080回车，如果看到Tomcat自带的一个JSP页面，说明你的Tomcat已搭建成功" rel="external nofollow noreferrer">http://IP:8080回车，如果看到Tomcat自带的一个JSP页面，说明你的Tomcat已搭建成功</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/43/36596794bdf3af70f1ecd35f8c40a0.jpg" alt=""></p><h3 id="安装部署-1"><a href="#安装部署-1" class="headerlink" title="安装部署"></a>安装部署</h3><h4 id="下载war文件"><a href="#下载war文件" class="headerlink" title="下载war文件"></a>下载war文件</h4><pre><code># wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</code></pre><h4 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h4><p>将下载后的war包放到/usr/local/apache-tomcat-8.5.32/webapps/目录下，启动tomcat即可， 或者用命令<code>java -jar jenkins.war</code>。</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>打开浏览器输入<a href="http://IP:8080/jenkins回车即可看到jenkin初始配置界面，按照提示进行设置。" target="_blank" rel="noopener external nofollow noreferrer">http://IP:8080/jenkins回车即可看到jenkin初始配置界面，按照提示进行设置。</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/27/4f737ebea43eb34f747fb68a08b6fa.jpg" alt=""></p><h3 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h3><h5 id="邮件设置"><a href="#邮件设置" class="headerlink" title="邮件设置"></a>邮件设置</h5><p>Jenkins-&gt;系统管理-&gt;系统设置，弹出如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b0/075e39aad15468d3eb9cc0f6bf37f7.jpg" alt=""></p><ul><li>SMTP服务器：为邮箱服务地址。<ul><li>QQ: smtp.qq.com</li><li>163: smtp.163.com</li></ul></li><li>用户默认后缀：可以自动识别，只需填写用户即可。</li><li>其他配置为Jenkins邮箱默认用户及采用的认证方式。</li></ul><h5 id="Job设置"><a href="#Job设置" class="headerlink" title="Job设置"></a>Job设置</h5><p>在需要邮件通知的Job设置里面增加”构建后操作步骤” -&gt; 选择E-mail Notification。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/82/3005620b29b6fc4b2c9e3ce729af8b.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/9e/a3153b262215e17561eb34674635e2.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6d/dce01f6fa0a84d625f0eb55759c422.jpg" alt=""></p><h5 id="扩展插件设置"><a href="#扩展插件设置" class="headerlink" title="扩展插件设置"></a>扩展插件设置</h5><p>但是如果你群发的收件人列表比较多，或者每次通知的人不一样，比如每次只想通知导致构建失败的那个人（即最后一次上传代码的人），那么简单的E-mail Notification就不能满足要求，需要使用Email extension plugin插件。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/18/0775061dcf193cc08da229cef10eda.jpg" alt=""></p><ul><li><p>SMTP server – 设置SMTP服务器地址</p></li><li><p>Default user E-mail suffix – 设置用户默认邮件后缀</p></li><li><p>Default Content Type – 默认内容类型(Plain Text HTML)</p></li><li><p>Default Subject – 默认邮件主题</p></li><li><p>Default Content – 默认邮件内容，可以设置模板</p></li><li><p>Default Triggers – 触发器</p></li><li><input disabled="" type="checkbox"> <p>全局配置<br>根据实际情况勾选需要触发邮件通知的事件。点击上图右下角Default Trigger，弹出如下触发项：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/69/3127442cf5a527b984d83738c31e6f.jpg" alt=""></p><ul><li><input disabled="" type="checkbox"> 项目配置<br>进入到具体的项目配置界面点击”配置，在配置界面点击”增加构建后操作步骤”，选择”Editable Email Notification”。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/71/133a454b2ee120f2b1df930b4ca9fe.jpg" alt=""></p><p>可以在“Advanced Settings”中针对该项目进行个性化的配置。可以针对该项目定义该项目通知的收件人列表、主题、内容、附件等。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/53/67346392186853caab6ee621418aa4.jpg" alt=""></p><h4 id="任务创建"><a href="#任务创建" class="headerlink" title="任务创建"></a>任务创建</h4><h5 id="构建项目类型"><a href="#构建项目类型" class="headerlink" title="构建项目类型"></a>构建项目类型</h5><p>点击 Jenkins 首页”创建一个新任务”的链接，弹出如下图所示页面。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/04/c97a32a6b1285a76a6edb8497a1cd3.jpg" alt=""></p><p>Jenkins 提供了六种类型的任务。</p><ul><li><p>构建一个自由风格的软件项目<br>这是Jenkins的主要功能。Jenkins 会结合任何 SCM 和任何构建系统来构建你的项目, 甚至可以构建软件以外的系统。</p></li><li><p>Pipeline(流水线)<br>Orchestrates long-running activities that can span multiple build slaves. Suitable for building pipelines (formerly known as workflows) and/or organizing complex activities that do not easily fit in free-style job type. – 很难用一两句话说清 Pipeline, 参考 , 后面另起一文来介绍。</p></li><li><p>构建一个多配置项目<br>适用于多配置项目,例如多环境测试、平台指定构建,等等。</p></li><li><p>GitHub Organization<br>Scans a GitHub organization (or user account) for all repositories matching some defined markers. – 这个主要针对由 Github 托管的项目。</p></li><li><p>Multibranch Pipeline(多分支流水线)<br>Creates a set of Pipeline projects according to detected branches in one SCM repository. 根据一个SCM存储库中检测到的分支创建一组 Pipeline 项目。</p></li><li><p>文件夹<br>创建一个可以嵌套存储的容器。利用它可以进行分组。 视图仅仅是一个过滤器，而文件夹则是一个独立的命名空间， 因此你可以有多个相同名称的的内容，只要它们在不同的文件 夹里即可。</p></li></ul><p>这里选择第一个：构建一个自由风格的软件项目， 输入项目名称：python test project ，点击”确定”按钮。</p><h5 id="构建-Windows-测试任务"><a href="#构建-Windows-测试任务" class="headerlink" title="构建 Windows 测试任务"></a>构建 Windows 测试任务</h5><p>假设，有一个 Python 编写的测试脚本 py_tests.py ，其绝对路径为/root/py_tests.py，内容如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span> <span class="token string">"Hello world"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在Linux下怎么执行这个测试用例，打开终端</p><pre><code>[root@centos-7 ~]# cd[root@centos-7 ~]# ll py_tests.py-rw-r--r--. 1 root root 20 8月  16 16:07 py_tests.py[root@centos-7 ~]# python py_tests.pyHello world[root@centos-7 ~]#</code></pre><p>下面回到Jenkins的配置过程中</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/ab/46e2f5d22700eb539eac4128e19c85.jpg" alt=""></p><p>添加项目的描述：Python 测试项目，打印Hello world。</p><p>剩下的选项都不要管，拖到页面底部，构建 选项。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e0/dab0e9e3d049db8a84ee83f85582de.jpg" alt=""></p><p>选择<code>执行shell</code>选项，执行Linux shell命令。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c6/ef1db64d383033d03b465af7f3771d.jpg" alt=""></p><p>如上图，输入你在 Linux 终端下所输的命令<code>python /root/py_tests.py</code>。 点击<code>保存</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/8f/6c232d4632eb024fa2cadcf0fbfc13.jpg" alt=""></p><p>一个极简的，基于 Linux 系统的 Python 脚本测试持续集成项目就创建完成了。</p><h4 id="节点添加"><a href="#节点添加" class="headerlink" title="节点添加"></a>节点添加</h4><p>Jenkins有个很强大的功能：分布式构建(在Jenkins的配置中叫做节点)，分布式构建能够让同一套代码在不同的环境(如：Windows和Linux系统)中编译、测试等。而且Jenkins构建的代码和产物最后自动拷贝到主节点。</p><p><strong>注意：如果节点主机上不存在JDK，Jenkins会去自动下载。</strong></p><p><strong>建议：所有Unix或者Windows机器的环境路径统一(如：JDK、Ant、Maven)，好处是便于管理、不容易出现奇葩问题。</strong></p><h5 id="新建节点"><a href="#新建节点" class="headerlink" title="新建节点"></a>新建节点</h5><p>系统管理 → 管理节点 → 新建节点(左上角)，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/1e/067a4f7fa85272fa79f85208c937c0.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/eb/3eb8f07110c1e29abe65035fdc2b04.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/bb/e82fc1380ecf612e70e06bc156e17e.jpg" alt=""></p><p>  节点名称：建议使用字母、数字或字母和数字的组合。最好见名知意。不建议使用标点符号和中文(中文命名没有问题，但Job中无法引用)。</p><h5 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h5><ul><li>Name(名称)：节点名称</li><li>Description(描述)：节点描述，支持中文</li><li>并发构建数：最大同时构建数量(根据机器的性能定，单颗四核cpu建议不要超过5) - 必须为数字</li><li>远程工作目录：节点的根目录(注意：如果目录不存在，会自动创建目录。你必须对该目录有读写权限，不然会报错)</li><li>标签：标记(又叫做标签)用来对多节点分组,标记之间用空格分隔.例如’refression java6’将会把一个节点标记上’regression’和’java6’.</li></ul><blockquote><p>例来说,如果你有多个Linux系统的构建节点并且你的Job也需要在Linux系统上运行,那么你可以配置所有的Linux系统节点都标记为’windows’, 然后把Job也标记为’Linux’.这样的话你的Job就不会运行在除了Linux节点以外的其它节点之上了.<br>Linux用法：尽可能的使用这个节点/只允许运行绑定到这台机器的Job(根据你的需求，二选一)</p></blockquote><ul><li>启动方式：<ul><li>Linux节点：推荐 – Launch slave agents via SSH， 在Unix(包括Linux)机器上通过SSH通道连接节点 (适用于Unix和Linux)</li><li>Host(主机)：节点主机的ip地址</li><li>Credentials：凭据(如果为空或者不可选择，请在系统管理→Manage Credentials中配置。Manage Credentials的配置非常简单，这里就不在描述了。Manage Credentials配置完成后，需刷新节点配置页面才会显示。)</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/35/d7416430314fd19e34a01ac59ff464.jpg" alt=""></p><h5 id="节点连接"><a href="#节点连接" class="headerlink" title="节点连接"></a>节点连接</h5><p>以Launch slave agents via SSH为例，选择Manually trusted key Verification Strategy，然后点击最下面的保存。</p><p>Jenkins -&gt; 系统管理 -&gt; 系统设置，设置SSH Server</p><ul><li>Name: 这个可以随意写</li><li>Hostname: 远程主机的IP地址</li><li>Username: 远程主机登录的用户名</li><li>Remote Directory: 远程目录</li></ul><p>如图设置好信息后，点击下面的保存</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/3f/b787c0c1b5bab76ad878fbb47542ad.jpg" alt=""></p><p>Jenkins -&gt; 系统管理 -&gt; 管理节点，点击刚刚配置好的节点，上线节点</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/1d/1f61d958c23269f4fcc4a7ae295b0b.jpg" alt=""></p><p>回到节点列表后发现节点就已经成功上线了</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a4/346c91e15903e43bc6759a7c566502.jpg" alt=""></p><h4 id="角色权限"><a href="#角色权限" class="headerlink" title="角色权限"></a>角色权限</h4><p>由于jenkins默认的权限管理体系不支持用户组或角色的配置，因此需要安装第三发插件来支持角色的配置，本文将使用Role Strategy Plugin，介绍页面：<a href="https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin。" target="_blank" rel="noopener external nofollow noreferrer">https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin。</a></p><h5 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h5><p>安装插件后，进入系统设置页面，配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/89/a69327d3e04b1b57ff022132e9f5a5.jpg" alt=""></p><h5 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h5><p>在系统管理页面点击Manage and Assign Roles进入角色管理页面</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/90/a06f0b7e2eff8c0a9d81576497ff0c.jpg" alt=""></p><p>进入之后</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/be/1bbe3e8858dbac44ac5a1fa2451883.jpg" alt=""></p><ul><li>管理角色（Manage Roles）<br>选择该项可以创建全局角色、项目角色，并可以为角色分配权限。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b8/ea91c0ea7091dca3faf3c86356da16.jpg" alt=""></p><p>;如上图，分别创建了admin、anonymous两个全局角色，Online Program、test两个项目角色。</p><p>  项目角色与全局角色的区别就是，项目角色只能管理项目，没有管理jenkins的权限配置。</p><p>  添加项目角色时，需要指定匹配项目的模式，如上图中的Pattern，官方文档介绍该选项支持正则表达式，如”Roger-.”表示所有以Roger-开头的项目，<code>(?i)roger-.*</code>表示以roger-开头的项目并且不区分大小写，如以ABC开头的项目可以配置为”ABC|ABC.*”，也可以使用”abc|bcd|efg”直接匹配多个项目。</p><ul><li>创建用户<br>在分配角色之前需要先创建用户。<br>在系统管理页面，点击管理用户：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2e/6a8a273181a5357a4ca587a5c2ced9.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/60/d8fa2030fff834872c259f65720958.jpg" alt=""></p><p>  点击新建使用者可以创建新用户，点击用户ID或名称都可以修改用户信息。</p><p>  选择Assign Roles可以为用户分配所属角色，可以分配全局角色和项目角色。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/57/385c466d213dd9ead86034162d9029.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/93/ddef492ecd2995c5731ea8eb1e9ee1.jpg" alt=""></p><p>  如上图，将不同的用户分别分配给不同的角色，这样用户就可以具有角色所拥有的权限。</p><h3 id="运行与维护"><a href="#运行与维护" class="headerlink" title="运行与维护"></a>运行与维护</h3><h4 id="Jenkins升级"><a href="#Jenkins升级" class="headerlink" title="Jenkins升级"></a>Jenkins升级</h4><ul><li>说明：Jenkins迭代更新很频繁，一般1周更新一次，半年一个大版本。</li><li>升级：下载新的war包，替换旧的war包，重启即可。下载地址为<a href="http://mirrors.jenkins-ci.org/。" target="_blank" rel="noopener external nofollow noreferrer">http://mirrors.jenkins-ci.org/。</a></li></ul><p><strong>PS：升级前，请测试该版本和你本地数据的兼容性。如何测试：将JENKINS_HOME拷贝一份到新的机器，用新版的程序启动。测试对应的插件和配置。</strong></p><h4 id="Jenkins迁移和备份"><a href="#Jenkins迁移和备份" class="headerlink" title="Jenkins迁移和备份"></a>Jenkins迁移和备份</h4><p>首先找到JENKINS_HOME，一般在用户根目录下.jenkins目录，因为Jenkins的所有的数据都是以文件的形式存放在JENKINS_HOME目录中。所以不管是迁移还是备份，只需要操作JENKINS_HOME就行了。</p><ul><li><p>迁移：建议将JENKINS_HOME打包后再拷贝，Windows上可以用zip，rar等，Linux上有zip，tar等。然后将打包的文件解压到新的JENKINS_HOME目录就行了。</p></li><li><p>备份：如果是临时备份，整个压缩文件就行了。</p></li><li><p>恢复：恢复的时候需要先停止jenkins。</p></li></ul><h4 id="移动，删除或修改jobs"><a href="#移动，删除或修改jobs" class="headerlink" title="移动，删除或修改jobs"></a>移动，删除或修改jobs</h4><p>对于移动或删除jobs，只需要简单地移动或删除<code>$JENKINS_HOME/jobs</code>目录。<br>对于修改jobs的名字，只需要简单地修改<code>$JENKINS_HOME/jobs</code>下对应job的文件夹的名字。<br>对于不经常使用的job，只需要对<code>$JENKINS_HOME/jobs</code>下对应的jobs的目录zip或tar后存储到其他的地方。</p><h4 id="Jenkins-启动时的命令行参数"><a href="#Jenkins-启动时的命令行参数" class="headerlink" title="Jenkins 启动时的命令行参数"></a>Jenkins 启动时的命令行参数</h4><table><thead><tr><th><code>--httpPort=$HTTP_PORT</code></th><th>用来设置jenkins运行时的web端口。</th></tr></thead><tbody><tr><td><code>--httpsPort=$HTTP_PORT</code></td><td>表示使用https协议。</td></tr><tr><td><del>~</del>–httpListenAddress=$HTTP_HOST</td><td>用来指定jenkins监听的ip范围，默认为所有的ip都可以访问此jenkins server。</td></tr></tbody></table><h4 id="修改jenkins的timezone"><a href="#修改jenkins的timezone" class="headerlink" title="修改jenkins的timezone"></a>修改jenkins的timezone</h4><p>如果jenkins所在的server的timezone不同于用户的timezone，这时候需要修改jenkins的timezone，需要在jenkins启动的时候增加下列参数-Dorg.apache.commons.jelly.tags.fmt.timeZone=TZ。</p><h4 id="查看jenkins的系统信息"><a href="#查看jenkins的系统信息" class="headerlink" title="查看jenkins的系统信息"></a>查看jenkins的系统信息</h4><p>以在jenkins的管理页面下的系统信息中，查看所有的jenkins的信息，例如jenkins的启动配置，所依赖的系统的环境变量，所安装的plugins。</p><h4 id="Jenkins中执行batch和Python"><a href="#Jenkins中执行batch和Python" class="headerlink" title="Jenkins中执行batch和Python"></a>Jenkins中执行batch和Python</h4><p>Jenkins的job -&gt; build 支持Ant，maven，windows batch和Shell， 但是我们知道python，perl，ruby等脚本其实也是shell脚本，所以这里的Shell可以扩展为python，perl，ruby等。如图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/99/04a1d6c847be966e185435823bb110.jpg" alt=""></p><h3 id="Jenkins-整合-LDAP-以及-CAS-单点登录"><a href="#Jenkins-整合-LDAP-以及-CAS-单点登录" class="headerlink" title="Jenkins 整合 LDAP 以及 CAS 单点登录"></a>Jenkins 整合 LDAP 以及 CAS 单点登录</h3><p>参考另外一篇博客<br><a href="https://blog.iamzhl.top/Jenkins-integrate-with-ldap-and-CAS.html" target="_blank" rel="noopener external nofollow noreferrer">Jenkins 整合 LDAP 以及 CAS 单点登录</a></p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
            <tag> 持续集成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SonarQube 安装部署</title>
      <link href="/SonarQube-install-and-deploy.html"/>
      <url>/SonarQube-install-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h1 id="SonarQube安装部署"><a href="#SonarQube安装部署" class="headerlink" title="SonarQube安装部署"></a><center>SonarQube安装部署</center></h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SonarQube是一个管理代码质量的开放平台，可以从七个维度检测代码质量：</p><ul><li>复杂度分布（complexity）：代码复杂度过高将难以理解、难以维护；</li><li>重复代码（duplications）：程序中包含大量复制粘度的代码是质量低下的表现；</li><li>单元测试（unit tests）：统计并展示单元测试覆盖率；</li><li>编码规范（coding rules）：通过Findbugs、PMD、CheckStyle等规范代码编写；</li><li>注释（commments）：少了可读性差，多了看起来费劲；</li><li>潜在的Bug（potential bugs）：通过Findbugs、PMD、CheckStyle等检测潜在bug；</li><li>结构与设计（architecture &amp; design）：依赖、耦合等。</li></ul><p>SonarQube 可以集成不同的测试工具（CppCheck、CheckStyle、Junit、CppUnit等），代码分析工具、持续集成工具（Jenkins）、IDE（VisualStudio）。</p><p>Sonar通过对代码质量分析结果数据进行在加工处理，通过量化的方式来度量代码的质量变化，从而可以方便的对工程进行代码质量管理。</p><p>支持语言：JAVA PHP C# C COBOL PL/SQL FLEX等20余种。</p><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>SonarQube平台的组成：</p><ul><li>数据库：存放SonarQube的配置数据、代码质量的快照数据。</li><li>Web服务：用于查看SonarQube的配置数据、代码质量的快照数据。</li><li>分析器：对项目代码进行分析、生成质量结果数据并存入数据库中（分析器有多中，此处选择SonarQube Maven Plugin）。</li></ul><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>去官网下载<code>JDK</code>：<a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html" target="_blank" rel="noopener external nofollow noreferrer">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt=""></p><p>安装<code>JDK</code><br>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -ivh jdk-8u161-linux-x64.rpm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置环境变量，编辑<code>~/.bashrc</code>，</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在文件的末尾添加以下行</p><pre><code>export JAVA_HOME=/usr/java/jdk1.8.0_161export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=$JAVA_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt=""></p><p>使环境配置生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># source ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试<code>Java</code>环境，在终端输入：<code>java -version</code>查看是否正常显示版本信息，若显示则安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt=""></p><p><strong>Note:</strong><br>如果已经预装了openjdk，请先卸载</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum list installed | grep openjdk # 根据执行结果进行卸载</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># yum -y install mysql mysql-server mysql-devel</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动MySQL服务</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取安装MySQL时的初始密码并登录MySQL</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># grep 'temporary password' /var/log/mysqld.log</span><span class="token comment" spellcheck="true"># mysql -u root -p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt=""></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> set global validate_password_policy=0;mysql> set global validate_password_length=1;mysql> set password for root@localhost=password('root');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt=""></p><p>设置sonar的用户名和数据库</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># adduser sonar</span><span class="token comment" spellcheck="true"># passwd sonar # 修改sonar用户密码</span><span class="token comment" spellcheck="true"># su sonar # 切换为sonar用户安装</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> create user 'sonar'@'%' identified by 'sonar';mysql> CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;mysql> grant all privileges on sonar.* to 'sonar'@'%';mysql> flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装SonarQube"><a href="#安装SonarQube" class="headerlink" title="安装SonarQube"></a>安装SonarQube</h3><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">wget</span> https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.3.zip$ unzip sonarqube-7.3.zip  //若提示unzip命令找不到，用yum -y <span class="token function">install</span> unzip安装即可$ <span class="token function">mv</span> sonarqube-7.3 sonarqube $ <span class="token function">mv</span> sonarqube /usr/local/<span class="token comment" spellcheck="true"># chown -R sonar:sonar /usr/local/sonarqube</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置sonar"><a href="#配置sonar" class="headerlink" title="配置sonar"></a>配置sonar</h2><pre class="line-numbers language-bash"><code class="language-bash">$ vim /usr/local/sonarqube/conf/sonar.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如图设置以下选项</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/46/56cfe2c33866ab48ab8c9bdd402acc.jpg" alt=""></p><h2 id="启动sonar"><a href="#启动sonar" class="headerlink" title="启动sonar"></a>启动sonar</h2><pre class="line-numbers language-bash"><code class="language-bash">$ /usr/local/sonarqube/bin/linux-x86-64/sonar.sh start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功启动后，访问本地 <a href="http://IP:9000，SonarQube" rel="external nofollow noreferrer">http://IP:9000，SonarQube</a> 初始管理员账号为 admin，默认密码为 admin，登录后可修改密码。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/25/5b9f14a21cdaf024ea8b3ce551dd7a.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/83/71e7da548917e52b08eb37f385e000.jpg" alt=""></p><p><strong>Note:</strong><br>如果遇到Sonar启动不起来，查看日志自动关闭的问题，可以采用以下方法解决</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># echo -e "vm.max_map_count=262144" >> /etc/sysctl.conf</span><span class="token comment" spellcheck="true"># sysctl -p</span><span class="token comment" spellcheck="true"># echo -e "sonar hard nofile 65536" >> /etc/security/limits.conf </span><span class="token comment" spellcheck="true"># echo -e "sonar soft nofile 65536" >> /etc/security/limits.conf </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后注销sonar用户重新以sonar身份登录后再次启动:</p><pre class="line-numbers language-bash"><code class="language-bash">$ /usr/local/sonarqube/bin/linux-x86-64/sonar.sh start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>插件安装：如果需要下载插件的话，各个版本不一样，如图所示，先点击Administration,再打开Marketplace就可以看到Plugins各种插件了。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/c6/cef3a943ab5d4347d4af8f3332a196.jpg" alt=""></p><p>SonarQube 支持分析的语言有很多，像Java、Python、Php、C/C++、C#、HTML、JavaScript、PL/SQL、Objective C等20+语言，当我们需要支持分析什么语言时，只需要去插件中心安装对应语言的插件即可，非常方便，可扩展性强，根据自己的需要去选择插件。</p><h2 id="实验验证"><a href="#实验验证" class="headerlink" title="实验验证"></a>实验验证</h2><blockquote><p>本次实验验证以Java工程为例</p></blockquote><h3 id="安装配置sonar-scanner"><a href="#安装配置sonar-scanner" class="headerlink" title="安装配置sonar-scanner"></a>安装配置sonar-scanner</h3><ul><li>获取sonar-scanner</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip</span><span class="token comment" spellcheck="true"># unzip sonar-scanner-cli-3.2.0.1227-linux.zip</span><span class="token comment" spellcheck="true"># mv sonar-scanner-3.2.0.1227-linux sonar-scanner</span><span class="token comment" spellcheck="true"># mv sonar-scanner /usr/local/</span><span class="token comment" spellcheck="true"># chown -R sonar:sonar sonar-scanner</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>配置sonar-scanner环境变量</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># vim ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/40/6ea5e9c0aee37c056f4583b32c048d.jpg" alt=""></p><ul><li>使配置生效</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># source ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/70/524b2333bbfb3e6a50b77f92eb201d.jpg" alt=""></p><ul><li>检查环境配置是否成功</li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ sonar-scanner -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>配置sonar-scanner.properties文件</li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ vim /usr/local/sonar-scanner/conf/sonar-scanner.properties<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/46/849b0c5cac635e91e9efcf07ba5fbd.jpg" alt=""></p><h3 id="验证过程"><a href="#验证过程" class="headerlink" title="验证过程"></a>验证过程</h3><ul><li>添加Java Maven测试工程</li></ul><p>编写测试工程</p><ul><li>添加sonar-project.properties文件</li></ul><p>在工程根目录中添加sonar-project.properties文件，格式如下</p><pre><code>sonar.projectKey=com.geovis         //项目的唯一标识sonar.projectName=helloworld        //项目的名字sonar.projectVersion=1.0            //项目的版本sonar.sources=/root/helloworld/src  //项目的源码目录，多目录以英文逗号分隔</code></pre><p>例如我的项目结构如下</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6a/e62e31b74ec65b783f21f4d8cda98e.jpg" alt=""></p><p>那么此项目配置文件应为</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/98/4f0aa2e69db09a846cfd6da4a3442f.jpg" alt=""></p><ul><li>代码质量检查<br>设置完后，终端运行<code>sonar-scanner</code>命令，开始项目源代码的分析</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/77/64ffb2ce43fdba046811cce438845c.jpg" alt=""></p><ul><li>查看结果<br>命令运行完成之后，访问<a href="http://localhost:9000，输入账号密码即可查看分析结果，如下图" rel="external nofollow noreferrer">http://localhost:9000，输入账号密码即可查看分析结果，如下图</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b4/92864641223d1537b6f4dfa27a6358.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/97/221636aa330d56dea8bb870957f29a.jpg" alt=""></p><h2 id="SonarQube-整合-LDAP-和-CAS-单点登录"><a href="#SonarQube-整合-LDAP-和-CAS-单点登录" class="headerlink" title="SonarQube 整合 LDAP 和 CAS 单点登录"></a>SonarQube 整合 LDAP 和 CAS 单点登录</h2><p><code>SonarQube</code>整合<code>LDAP</code>和<code>CAS</code>单点登录的过程请参考我的另一篇博客<a href="https://blog.iamzhl.top/SonarQube-integrate-with-ldap-and-CAS.html" target="_blank" rel="noopener external nofollow noreferrer">SonarQube 整合 LDAP 和 CAS 单点登录</a></p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SonarQube </tag>
            
            <tag> sonar-scanner </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MantisBT 安装部署过程</title>
      <link href="/MantisBT-install-and-deploy.html"/>
      <url>/MantisBT-install-and-deploy.html</url>
      
        <content type="html"><![CDATA[<h1 id="MantisBT软件安装部署过程"><a href="#MantisBT软件安装部署过程" class="headerlink" title="MantisBT软件安装部署过程"></a><strong><center>MantisBT软件安装部署过程</center></strong></h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;Mantis是一个基于PHP技术的轻量级的开源缺陷跟踪系统，以Web操作的形式提供项目管理及缺陷跟踪服务。在功能上、实用性上足以满足中小型项目的管理及跟踪。更重要的是其开源，不需要负担任何费用。</p><h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><p>Mantis安装部署环境如下：</p><table><thead><tr><th>名称</th><th>版本号</th><th>描述</th></tr></thead><tbody><tr><td>Mantisbt</td><td>2.16.0</td><td>BugTracing 软件</td></tr><tr><td>操作系统</td><td>CentOS 7</td><td>RedHat 社区发行版</td></tr><tr><td>PHP</td><td>7.2.8</td><td>PHP 环境</td></tr></tbody></table><h1 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><span class="token comment" spellcheck="true"># yum -y install libicu libicu-devel libicu-doc</span><span class="token comment" spellcheck="true"># yum -y install php70w php70w-gd php70w-xml php70w-mysql php70w-mbstring php70w-ldap php70w-xmlrpc php70w-odbc php70w-pear php70w-soap php70w-snmp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装PHPMailer"><a href="#安装PHPMailer" class="headerlink" title="安装PHPMailer"></a>安装PHPMailer</h3><pre><code>https://github.com/Synchro/PHPMailer/releases/tag/v5.2.13</code></pre><p>下载解压到/var/www/html/mantis/PHPMailer-5.2.13/</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/0b/f7ba2cdc89ecb4edee3d7c32861ad1.jpg" alt=""></p><h3 id="安装apache-mysql等必要软件"><a href="#安装apache-mysql等必要软件" class="headerlink" title="安装apache mysql等必要软件"></a>安装apache mysql等必要软件</h3><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span><span class="token comment" spellcheck="true"># yum -y install mysql mysql-server mysql-devel</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动MySQL服务</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># systemctl start mysqld</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取安装MySQL时的初始密码并登录MySQL</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># grep 'temporary password' /var/log/mysqld.log</span><span class="token comment" spellcheck="true"># mysql -u root -p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt=""></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> set global validate_password_policy=0;mysql> set global validate_password_length=1;mysql> set password for root@localhost=password('root');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt=""></p><p>安装apache httpd</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum -y install httpd</span><span class="token comment" spellcheck="true"># systemctl enable httpd   //自启动</span><span class="token comment" spellcheck="true"># systemctl start httpd    //启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="安装mantis"><a href="#安装mantis" class="headerlink" title="安装mantis"></a>安装mantis</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cd /var/www/html</span><span class="token comment" spellcheck="true"># wget https://jaist.dl.sourceforge.net/project/mantisbt/mantis-stable/2.18.0/mantisbt-2.18.0.zip</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="解压重命名"><a href="#解压重命名" class="headerlink" title="解压重命名"></a>解压重命名</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># tar zxvf mantisbt-2.16.0.tar.gz</span><span class="token comment" spellcheck="true"># mv mantisbt-2.16.0 mantis</span><span class="token comment" spellcheck="true"># mv mantis /var/www/html/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="修改用户组"><a href="#修改用户组" class="headerlink" title="修改用户组"></a>修改用户组</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># chown -R apache:apache /var/www/html/mantis</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@centos-7 html<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -u root -p</span>Enter password:Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MySQL connection <span class="token function">id</span> is 8Server version: 5.7.23 MySQL Community Server <span class="token punctuation">(</span>GPL<span class="token punctuation">)</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.mysql<span class="token operator">></span> create database mantis<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> grant all privileges on mantis.* to root@localhost identified by <span class="token string">'123456'</span><span class="token punctuation">;</span>ERROR 1819 <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: Your password does not satisfy the current policy requirementsmysql<span class="token operator">></span> <span class="token keyword">set</span> global validate_password_policy<span class="token operator">=</span>0<span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">set</span> global validate_password_length<span class="token operator">=</span>1<span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> grant all privileges on mantis.* to root@localhost identified by <span class="token string">'123456'</span><span class="token punctuation">;</span>Query OK, 0 rows affected, 1 warning <span class="token punctuation">(</span>0.01 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> flush privileges<span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.00 sec<span class="token punctuation">)</span>mysql<span class="token operator">></span> <span class="token keyword">exit</span>Bye<span class="token punctuation">[</span>root@centos-7 html<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>打开浏览器在地址栏输入 <a href="http://10.211.55.17:82/mantis" target="_blank" rel="noopener external nofollow noreferrer">http://10.211.55.17:82/mantis</a>  –  格式为 <code>http://IP:端口/mantis文件夹名称</code>，这时就会自动跳转到php安装向导的页面: </p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/13/430b174ae372e2c4854b5804123ab1.jpg" alt=""></p><p>&nbsp;&nbsp;&nbsp;&nbsp;填好主机、密码等信息之后点击 Install/Upgrade Database 安装数据库。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/86/f2dd1067427ccefb9829d5a3e2903e.jpg" alt=""></p><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>进入Mantis登录界面，输入用户密码：administrator/root ，登陆即可看到mantis主界面。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b1/c3e84af9570ae5c9d61d788d482a69.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f4/2302c64875ae7556c732820ffe6c2f.jpg" alt=""></p><h2 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h2><p>修改MantisBT/config/config_inc.php文件</p><pre><code>$g_enable_email_notification = ON;$g_administrator_email = 'mailuser';    # 邮箱地址$g_webmaster_email = 'mailuser';        # 邮箱地址$g_from_email = 'mailuser';             # 邮箱地址$g_from_name = 'Mantis Bug Tracker';$g_phpMailer_method = PHPMAILER_METHOD_SMTP;$g_smtp_host = 'smtp.163.com';          # SMTP 服务器$g_smtp_username = 'mailuser';          # 邮箱地址$g_smtp_password = 'mailpwd';           # 邮箱密码$g_use_phpMailer = ON; $g_return_path_email = 'mailuser';      # 邮箱地址</code></pre><h2 id="中文配置"><a href="#中文配置" class="headerlink" title="中文配置"></a>中文配置</h2><p>修改/var/www/html/mantis/config_defaults_inc.php文件，在该文件中找到语言设置的地方，修改$g_default_language，将’english’改为’chinese_simplified’。懒得找的话直接复制下面的命令也可以。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># sed -i -e "s/$g_default_language = 'auto'/$g_default_language = 'chinese_simplified'/g" /var/www/html/mantis/config_defaults_inc.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/17/52f55640c0580b49bb51e81728e32b.jpg" alt=""></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>问题描述：配置完成后，无法发送邮件。</p><p>解决方法：<br>邮箱配置问题，添加本地邮箱服务器，设置本地邮箱，对于本地测试邮箱，设置$g_smtp_host=本地IP地址。</p><h1 id="实例运行"><a href="#实例运行" class="headerlink" title="实例运行"></a>实例运行</h1><ul><li>为了便于理解，先给出BUG跟踪流程图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b7/a17671861ee0f1c0ef2d34063c1f7e.png" alt=""></p><ul><li>Mantis使用流程图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/36/e0cd2969561f3a3847f00064f10d86.jpg" alt=""></p><ul><li>新用户创建与登录</li></ul><p>目前本系统的访问地址为：<a href="http://IP:port/mantis/login_page.php，用户可以通过首页显示的&quot;注册一个新帐号&quot;进行新用户注册。" rel="external nofollow noreferrer">http://IP:port/mantis/login_page.php，用户可以通过首页显示的"注册一个新帐号"进行新用户注册。</a></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/7d/1aa6506c45bdc101125dbf0eb471cb.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/e0/c44b7bd62656a42effb30cbe072d8d.jpg" alt=""></p><p>然后点击邮箱内的激活邮件，进行用户名与密码的设置。也可以通过管理员创建新用户</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/f3/3984a7b93cb83f5018a886334554f3.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/38/81f16e90a837e3b2e4753481d53d49.jpg" alt=""></p><p>管理员可以对用户的角色、所属的项目以及一些其他的情况进行对应的配置。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/7e/8a3bf7d3b7d54549861c08cc2b8695.jpg" alt=""></p><p>各种具体的配置以及各种角色用户的权限可参见管理员的管理视图。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/64/fb372744682c06a5abf50d6d08e3c3.jpg" alt=""></p><p><strong>操作流程</strong><br>首先，说明一下系统中的角色和一般所对应的人员：观察者（复查员）、报告者（测试员）、升级者（审核员）、开发人员（开发员）、经理（项目经理）、管理员（系统管理员）。还要简单说明一下问题状态及相关含义（以上的两点只是中文理解和中文翻译的问题，可以在mantisbt-2.15.0/lang/strings_chinese_simplified.txt中修改）：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/32/a9311c413f72019f384eb9fdb64e91.jpg" alt=""></p><ul><li>新建：新提交的报告，默认状态为新建</li><li>反馈：修正的问题经过测试后仍不完善</li><li>认可：报告的问题确实存在</li><li>已确认：通常为项目经理确认时使用</li><li>已分配：分派给具体开发人员</li><li>已解决：修改后的问题，可以进行测试</li><li>已关闭：测试通过的问题，或者在报告周期内判定为无需修改的问题。</li></ul><p>下面介绍一下简单的操作流程，这里以管理员和报告者作为示例，这里为了方便示例，示例中管理员包含了其他角色属性。观察者、升级者以及经理可以根据具体情况进行添加。</p><ul><li>提交问题</li></ul><p><strong>权限：</strong>全部角色<br><strong>必填信息：</strong>分类、摘要、描述、查看权限<br><strong>选填信息：</strong>出现频率、严重性、优先级、选择平台设置、重现步骤、辅助、标签、上传文件。<br><strong>问题单状态：</strong>新建</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/7a/b1f51f397d2700ccd2ae21cc7edbc7.jpg" alt=""></p><ul><li>审核问题</li></ul><p><strong>权限：</strong>审核员、项目经理、（开发员）<br><strong>可进行操作：</strong>添加附件、添加注释<br><strong>问题单状态：</strong>新建 -&gt; 已审核（认可），审核员对问题进行审核，并确认此问题；新建 -&gt; 已关闭，审核员认为报告的问题不存在或无需修改。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/cc/cf2fa843e333b7b168418e13720f06.jpg" alt=""></p><ul><li>确认问题</li></ul><p><strong>权限：</strong>项目经理<br><strong>问题单状态：</strong>认可 -&gt; 已确认，项目经理确认问题，确认后进入修改流程；认可 -&gt; 反馈，项目经理对问题存在异议，反馈给审核者。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/61/b450cb7f3eb6af3ce04b1e071dd25e.jpg" alt=""></p><ul><li>分派问题</li></ul><p><strong>权限：</strong>项目经理、开发员<br><strong>问题单状态：</strong>已确认 -&gt; 已分派，项目经理分派问题给相应的开发人员；已分派 -&gt; 已分派，开发组长也可以给组员分派问题。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/97/1e02d524da8f78c447a2fae2b0ceb3.jpg" alt=""></p><ul><li>修复问题</li></ul><p><strong>权限：</strong>开发员<br><strong>问题单状态：</strong>已分派 -&gt; 已解决，分派给开发员的问题已修复及内部测试，可以提交业务测试时。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/46/f8d53110204d554fe1339fa16d4d98.jpg" alt=""></p><ul><li>测试问题</li></ul><p><strong>权限：</strong>报告者<br><strong>问题单状态：</strong>已解决 -&gt; 已关闭，报告者对已解决的问题测试且测试通过；已解决 -&gt; 反馈，报告者对已解决的问题测试，而测试未通过，开发员可对反馈的问题继续修复，再进入后续环节。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/93/d945f5412b7aece0c5595564633ad6.jpg" alt=""></p><p>到此，整个流程结束。<br><strong>说明：整个流程中，问题处于不同的状态，标记的颜色不同。</strong></p>]]></content>
      
      
      <categories>
          
          <category> CI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MantisBT </tag>
            
            <tag> Bug追踪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awk to use</title>
      <link href="/awk-to-use.html"/>
      <url>/awk-to-use.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>awk</code>是<code>Linux</code>最常用的字符串处理工具</p><h1 id="awk-内置参数"><a href="#awk-内置参数" class="headerlink" title="awk 内置参数"></a>awk 内置参数</h1><ul><li>NR – 行号</li><li>NF – 列总数</li><li>FILENAME – 当前文件名</li></ul><blockquote><p>实例</p></blockquote><ul><li><p>打印<code>/etc/passwd</code>每行的行号，每行的字符总数以及第一行(即每行的用户名)</p><p><code>print</code>实现</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{print "Line:"NR,"Col:"NF,"User:"<span class="token variable">$1</span>}'</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>printf</code>实现</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{printf "Line:%s,Col:%s,User:%s\n",NR,NF,<span class="token variable">$1</span>}'</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打印<code>/etc/passwd</code>中<code>UID(即第三列)</code>大于100的行的行号，字符总数以及第一列(即每行的用户名)</p><p><code>print</code>实现</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{if (<span class="token variable">$3</span>>100) print "Line:"NR,"Col:"NF,"User:",<span class="token variable">$1</span>}'</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>printf</code>实现</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{if (<span class="token variable">$3</span>>100) printf("Line:%s,Col:%s,User:%s\n",NR,NF,<span class="token variable">$1</span>)}'</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>提取服务器日志<code>fresh.log</code>中<code>ERROR</code>行发生的时间</p></li></ul><p><code>fresh.log</code>内容格式如下图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/7b/0fc81ccb4783036209f7ed10c01128.jpg" alt=""></p><p>  利用<code>sed</code>和<code>awk</code></p><pre class="line-numbers language-bash"><code class="language-bash">  $ <span class="token function">sed</span> <span class="token string">'/ERROR/p'</span> fresh.log <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$1</span>}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  只利用<code>awk</code></p><pre class="line-numbers language-bash"><code class="language-bash">  $ <span class="token function">awk</span> <span class="token string">'/ERROR/{print <span class="token variable">$1</span>}'</span> fresh.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="START-END"><a href="#START-END" class="headerlink" title="START END"></a><code>START</code> <code>END</code></h1><blockquote><p><code>awk</code>提供了一个简单的方式在利用<code>awk</code>处理编程需求时的问题，例如制表时需在表前打印表头、表后打印表尾。</p></blockquote><blockquote><p>举一个案例，制表显示<code>/etc/passwd</code>的行号、列号和用户名</p></blockquote><blockquote><p>思路是首先在开头打印”Line Col User”，然后依次打印<code>/etc/passwd</code>每一行的行号、列号和用户名，最后另起一行打印<code>--------</code>并在中间加入<code>awk</code>操作的文件名以结束制表</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'BEGIN{print "Line    Col    User"}{print NR,NF,<span class="token variable">$1</span>}END{print "------",FILENAME,"------"}'</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">"#"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其中的<code>grep -v "#"</code>用以过滤掉<code>/etc/passwd</code>中开头的无用说明信息</p></blockquote><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><blockquote><p>为截图方便这里只截了前面的一些行和最后的一些行</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/93/04d33ecfbe22a469a95806f4d7e33f.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/6a/599d7e553eddcb04e05d87118fe358.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quicksort</title>
      <link href="/quicksort.html"/>
      <url>/quicksort.html</url>
      
        <content type="html"><![CDATA[<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"stdio.h"</span></span><span class="token keyword">void</span> <span class="token function">quicksort</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> t<span class="token punctuation">,</span> temp<span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">></span> right<span class="token punctuation">)</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>     temp <span class="token operator">=</span> a<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>    i <span class="token operator">=</span> left<span class="token punctuation">;</span>     j <span class="token operator">=</span> right<span class="token punctuation">;</span>     <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">!=</span> j<span class="token punctuation">)</span>     <span class="token punctuation">{</span>         <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">>=</span> temp <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span>             j <span class="token operator">--</span><span class="token punctuation">;</span>         <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> temp <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span>             i <span class="token operator">++</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span>         <span class="token punctuation">{</span>             t <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>             a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>             a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     a<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>     a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>     <span class="token function">quicksort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> left<span class="token punctuation">,</span> i<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">quicksort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> t<span class="token punctuation">;</span>     <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>         <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">quicksort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/b8/847de187a667d431036df4a77966d9.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快速排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 原版镜像大全</title>
      <link href="/High-Sierra-and-Mojave-Images-update.html"/>
      <url>/High-Sierra-and-Mojave-Images-update.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人所有镜像均采用<code>Applestore</code>官方商店下载整包制作，适用于<code>gpt</code>分区表，加入了各个版本刚推送时的<code>Clover</code>源码最新引导，后续的测试版推送之后我会尽早做出供坛友使用，希望大家多多支持给楼主加个分，你们的支持就是我的动力</p><hr><p>楼主所做的镜像全部集成多驱动，多<code>config</code>，镜像所集成的这些东西只是方便大家用，坛友写入之后请适当删减使用，有能力的或者本身自己有一套适合自己的<code>EFI</code>的朋友请用自己的，望周知。</p><p><strong><em>PS: 镜像内驱动和config是为新手准备，老鸟勿喷<br>镜像内有文件详细说明，新手请按说明自行配置引导。</em></strong></p><h2 id="最近一次更新内容"><a href="#最近一次更新内容" class="headerlink" title="最近一次更新内容"></a>最近一次更新内容</h2><p>新款<code>MacBook Pro</code>上市之后，<code>Apple</code>推出特供版本以支持八代<code>CPU</code>，依然是<code>10.13.6</code>，此次版本号为<code>17G2208</code>，经测试，已原生支持八代机器</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/35/a6f93b4a09ab4880e7b5736b6e87e7.jpg" alt=""></p><p>此外,<code>Clover</code>也及时跟新了<code>mbp15,1</code>以及<code>mbp15,2</code>的<code>SMBIOS</code>，推荐大家使用，低压本用<code>mbp15,2</code>，其他<code>mbp15,1</code>，下面是<code>SMBIOS</code>，大家可以直接套用，记得修改<code>BoardSerialNumber</code>为自己之前正在用的。</p><blockquote><p>MacBook Pro 15,1</p></blockquote><pre><code>&lt;key&gt;SMBIOS&lt;/key&gt;&lt;dict&gt;    &lt;key&gt;BiosReleaseDate&lt;/key&gt;    &lt;string&gt;06/26/2018&lt;/string&gt;    &lt;key&gt;BiosVendor&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;BiosVersion&lt;/key&gt;    &lt;string&gt;MBP151.88Z.0178.B00.1806260902&lt;/string&gt;    &lt;key&gt;Board-ID&lt;/key&gt;    &lt;string&gt;Mac-937A206F2EE63C01&lt;/string&gt;    &lt;key&gt;BoardManufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;BoardSerialNumber&lt;/key&gt;    &lt;string&gt;C02418108QXF64WCB&lt;/string&gt;    &lt;key&gt;BoardType&lt;/key&gt;    &lt;integer&gt;11&lt;/integer&gt;    &lt;key&gt;BoardVersion&lt;/key&gt;    &lt;string&gt;1.0&lt;/string&gt;    &lt;key&gt;ChassisAssetTag&lt;/key&gt;    &lt;string&gt;MacBook-Aluminum&lt;/string&gt;    &lt;key&gt;ChassisManufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;ChassisType&lt;/key&gt;    &lt;string&gt;0x09&lt;/string&gt;    &lt;key&gt;Family&lt;/key&gt;    &lt;string&gt;MacBook Pro&lt;/string&gt;    &lt;key&gt;FirmwareFeatures&lt;/key&gt;    &lt;string&gt;0xFC0FE137&lt;/string&gt;    &lt;key&gt;FirmwareFeaturesMask&lt;/key&gt;    &lt;string&gt;0xFF1FFF3F&lt;/string&gt;    &lt;key&gt;LocationInChassis&lt;/key&gt;    &lt;string&gt;Part Component&lt;/string&gt;    &lt;key&gt;Manufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;Mobile&lt;/key&gt;    &lt;true/&gt;    &lt;key&gt;PlatformFeature&lt;/key&gt;    &lt;string&gt;0x1A&lt;/string&gt;    &lt;key&gt;ProductName&lt;/key&gt;    &lt;string&gt;MacBookPro15,1&lt;/string&gt;    &lt;key&gt;SerialNumber&lt;/key&gt;    &lt;string&gt;C02X1HACKGYG&lt;/string&gt;    &lt;key&gt;Version&lt;/key&gt;    &lt;string&gt;1.0&lt;/string&gt;&lt;/dict&gt;</code></pre><blockquote><p>MacBook Pro 15,2</p></blockquote><pre><code>&lt;key&gt;SMBIOS&lt;/key&gt;&lt;dict&gt;    &lt;key&gt;BiosReleaseDate&lt;/key&gt;    &lt;string&gt;06/26/2018&lt;/string&gt;    &lt;key&gt;BiosVendor&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;BiosVersion&lt;/key&gt;    &lt;string&gt;MBP152.88Z.0178.B00.1806260902&lt;/string&gt;    &lt;key&gt;Board-ID&lt;/key&gt;    &lt;string&gt;Mac-827FB448E656EC26&lt;/string&gt;    &lt;key&gt;BoardManufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;BoardSerialNumber&lt;/key&gt;    &lt;string&gt;C02418108QXF64WCB&lt;/string&gt;    &lt;key&gt;BoardType&lt;/key&gt;    &lt;integer&gt;11&lt;/integer&gt;    &lt;key&gt;BoardVersion&lt;/key&gt;    &lt;string&gt;1.0&lt;/string&gt;    &lt;key&gt;ChassisAssetTag&lt;/key&gt;    &lt;string&gt;MacBook-Aluminum&lt;/string&gt;    &lt;key&gt;ChassisManufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;ChassisType&lt;/key&gt;    &lt;string&gt;0x09&lt;/string&gt;    &lt;key&gt;Family&lt;/key&gt;    &lt;string&gt;MacBook Pro&lt;/string&gt;    &lt;key&gt;FirmwareFeatures&lt;/key&gt;    &lt;string&gt;0xFC0FE137&lt;/string&gt;    &lt;key&gt;FirmwareFeaturesMask&lt;/key&gt;    &lt;string&gt;0xFF1FFF3F&lt;/string&gt;    &lt;key&gt;LocationInChassis&lt;/key&gt;    &lt;string&gt;Part Component&lt;/string&gt;    &lt;key&gt;Manufacturer&lt;/key&gt;    &lt;string&gt;Apple Inc.&lt;/string&gt;    &lt;key&gt;Mobile&lt;/key&gt;    &lt;true/&gt;    &lt;key&gt;PlatformFeature&lt;/key&gt;    &lt;string&gt;0x1A&lt;/string&gt;    &lt;key&gt;ProductName&lt;/key&gt;    &lt;string&gt;MacBookPro15,2&lt;/string&gt;    &lt;key&gt;SerialNumber&lt;/key&gt;    &lt;string&gt;C02X1HACJHCD&lt;/string&gt;    &lt;key&gt;Version&lt;/key&gt;    &lt;string&gt;1.0&lt;/string&gt;&lt;/dict&gt;</code></pre><h2 id="镜像内容"><a href="#镜像内容" class="headerlink" title="镜像内容"></a>镜像内容</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/88/e3735f1df7c1698869bc4700b0e34f.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/48/99a6d0d9094d41acc455008be82109.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/48/87d2b0ec6f40a3df7347148b03d196.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/04/9fa489977f2fc21eccce5b795eddb6.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/a6/ba1d85d46d0523daf0d539579bcbbd.png" alt=""></p><h2 id="镜像地址"><a href="#镜像地址" class="headerlink" title="镜像地址"></a>镜像地址</h2><p>每出一个版本都写一个帖子的话太麻烦，所以决定直接写一个镜像的集合贴，下面是各个版本的链接：</p><pre><code>链接:https://pan.baidu.com/s/1ymm0dm2R3dlFGyCH88fbmA  密码:vvon</code></pre><h2 id="镜像校验"><a href="#镜像校验" class="headerlink" title="镜像校验"></a>镜像校验</h2><p>为防止下载文件损坏，请尽量进行<code>MD5</code>、<code>SHA1</code>、<code>SHA256</code>校验，校验文件以图片的形式存在于各个镜像文件夹内。</p><h2 id="镜像列表"><a href="#镜像列表" class="headerlink" title="镜像列表"></a>镜像列表</h2><ul><li><p>OS X EI Capitan</p><ul><li>OS X EI Capitan 10.11.6 15G31</li></ul></li><li><p>macOS Sierra</p><ul><li>macOS Sierra 10.12.5 16F73</li><li>macOS Sierra 10.12.6 16G29</li></ul></li><li><p>macOS High Sierra</p><ul><li>macOS High Sierra DP1 17A264c</li><li>macOS High Sierra DP1 17A291m</li><li>macOS High Sierra DP1 17A306F</li><li>macOS High Sierra DP1 17A315i</li><li>macOS High Sierra DP1 17A330h</li><li>macOS High Sierra DP1 17A344b</li><li>macOS High Sierra DP1 17A352a</li><li>macOS High Sierra DP1 17A358a</li><li>macOS High Sierra DP1 17A360a</li><li>macOS High Sierra Golden Master 17A362a</li><li>macOS High Sierra 10.13.0 17A365</li><li>macOS High Sierra 10.13.0 17A405</li><li>macOS High Sierra 10.13.1 17B48</li><li>macOS High Sierra 10.13.2 17C88</li><li>macOS High Sierra 10.13.2 17C88 光 - 暗影精灵 II 专用</li><li>macOS High Sierra 10.13.3 17D47</li><li>macOS High Sierra 10.13.4 17E199</li><li>macOS High Sierra 10.13.5 17F77</li><li>macOS High Sierra 10.13.6 17G65</li><li>macOS High Sierra 10.13.6 17G2112</li><li>macOS High Sierra 10.13.6 17G2208</li></ul></li><li><p>macOS Mojave</p><ul><li>macOS Mojave 10.14 DP1 18A293u</li><li>macOS Mojave 10.14 DP2 18A324h</li><li>macOS Mojave 10.14 DP3 18A326h</li><li>macOS Mojave 10.14 DP4 18A336e</li><li>macOS Mojave 10.14 DP5 18A347e</li><li>macOS Mojave 10.14 DP6 18A353d</li><li>macOS Mojave 10.14 DP7 18A365a</li><li>macOS Mojave 10.14 DP8 18A371a</li><li>macOS Mojave 10.14 DP9 18A377a</li><li>macOS Mojave 10.14 DP10 18A384a</li><li>macOS Mojave 10.14 Golden Master 18A389</li><li>macOS Mojave 10.14.0 18A389</li><li>macOS Mojave 10.14.1 18B75</li><li>macOS Mojave 10.14.1 18B2107</li><li>macOS Mojave 10.14.1 18B3094</li><li>macOS Mojave 10.14.2 18C54</li><li>macOS Mojave 10.14.3 18D42</li><li>macOS Mojave 10.14.4 18E226</li><li>macOS Mojave 10.14.4 18E2034 (iMac 19 特供版)</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原版镜像 </tag>
            
            <tag> 黑苹果镜像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 上使用字符串处理神器 sed 的正确姿势</title>
      <link href="/Command-sed-on-mac.html"/>
      <url>/Command-sed-on-mac.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>sed</code>是<code>shell</code>中字符串处理的三大神器之一，利用<code>sed</code>进行字符串处理对从事<code>Linux</code>相关职业的人来说是必不可少的，但是在<code>mac</code>上的<code>sed</code>与<code>Linux</code>的<code>sed</code>是有一定区别的，为什么呢，因为<code>mac</code>实质上和<code>Linux</code>就是不一样的，尽管其中很多基本命令是通用的，例如<code>ls</code>、<code>cd</code>、<code>pwd</code>等。<code>mac</code>是<code>unix</code>内核，是基于<code>FreeBSD</code>的，而我们常用的<code>Linux</code>如<code>Ubuntu</code>、<code>CentOS</code>等是<code>Linux</code>内核。</p><h2 id="sed的不同"><a href="#sed的不同" class="headerlink" title="sed的不同"></a><code>sed</code>的不同</h2><p>非常大的一个坑就是<code>sed</code>命令的不统一，<code>Linux</code>的<code>sed</code>是基于<code>GNU</code>的<code>sed</code>，而<code>FreeBSD</code>中的<code>sed</code>则是基于<code>XNU</code>的，其用法有些不同，下面会做对比简要说明。</p><p>拿最常用的追加行来说，我们假设一个场景，我需要对<code>test.txt</code>文件实时写入，在文件第二行添加<code>1234</code>，文件初始内容如下所示</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cat</span> test.txt333311123333<span class="token function">test</span>44445555<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>Linux</code>下，我们只需要执行下面的命令即可实现追加</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">sed</span> -i -e <span class="token string">'1a\1234'</span> test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是在<code>mac</code>下这条命令会报错如下</p><pre><code>sed: 1: "1a\1234": extra characters after \ at the end of a command</code></pre><p>这是因为<code>xnu</code>的<code>sed</code>命令用法不同于<code>gnu</code>，具体可以通过下面的命令查看<code>sed</code>命令手册</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">man</span> <span class="token function">sed</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypvvrfr68j31p818kn8n.jpg" alt=""></p><p>那么我想用我习惯的<code>Linux</code>的<code>GNU-sed</code>怎么解决呢，我们可以安装<code>gnu-sed</code>来代替系统内的<code>sed</code>，具体方法如下</p><p>首先我们需要<code>Homebrew</code>包管理器</p><pre class="line-numbers language-bash"><code class="language-bash">$ /usr/bin/ruby -e <span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl -fsSL https://cdn.jsdelivr.net/gh/Homebrew/install/master/install<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，通过<code>brew</code>来安装<code>gnu-sed</code></p><pre class="line-numbers language-bash"><code class="language-bash">$ brew <span class="token function">install</span> gnu-sed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认<code>brew</code>会将<code>gnu-sed</code>安装到<code>/usr/local/Cellar/</code>目录下，这时我们就可以利用<code>gsed</code>来执行了</p><pre class="line-numbers language-bash"><code class="language-bash">$ gsed -i -e <span class="token string">'1a\1234'</span> test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果提示命令找不到的话，只需要将下面的路径添加到<code>PATH</code>环境变量就可以了</p><pre><code>/usr/local/Cellar/gnu-sed/4.5/bin/</code></pre><p>或者将<code>/usr/local/Cellar/gnu-sed/4.5/bin/gsed</code>添加别名都可以。</p><p>网上也有人用下面的命令安装</p><pre class="line-numbers language-bash"><code class="language-bash">$ brew <span class="token function">install</span> gnu-sed --with-default-names<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>貌似这种方式直接替代了系统内的<code>sed</code>，我个人不是很推荐这种方式，不是说不好，而是当我们的机器不只是一个人用，是做服务器用的，或者有一些我们正在用的脚本里面有<code>xnu</code>的<code>sed</code>调用，那么这种方式就会造成一些问题，所以我个人认为安装了<code>gnu-sed</code>后，利用别名、环境变量、配置文件等方式调用是更好的一种方法，当然，这个根据个人需求决定就好了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sed </tag>
            
            <tag> gnu-sed </tag>
            
            <tag> xnu-sed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2 + ohmyzsh + powerlevel9k + tmux 打造专属个性化终端</title>
      <link href="/Custom-terminal-on-your-mac.html"/>
      <url>/Custom-terminal-on-your-mac.html</url>
      
        <content type="html"><![CDATA[<h1 id="先来张图镇楼"><a href="#先来张图镇楼" class="headerlink" title="先来张图镇楼"></a>先来张图镇楼</h1><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/5c/d74f1affaf72faac5b2887dc78625d.jpg" alt=""></p><h1 id="首先搭建好安装homebrew环境"><a href="#首先搭建好安装homebrew环境" class="headerlink" title="首先搭建好安装homebrew环境"></a>首先搭建好安装<code>homebrew</code>环境</h1><blockquote><p>在<code>mac</code>上拥有一个好的包管理器是非常重要的，<code>Debian</code>家族有<code>apt</code>，<code>mac</code>有<code>homebrew</code>，非常好用。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ /usr/bin/ruby -e <span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl -fsSL https://cdn.jsdelivr.net/gh/Homebrew/install/master/install<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装<code>oh-my-zsh</code></h1><blockquote><p><code>oh-my-zsh</code>是一款非常好用且美观的<code>shell</code>工具，其命令的补全等都是其他如<code>bash</code>、<code>csh</code>等所无法比拟的</p></blockquote><blockquote><p>安装方式两种</p></blockquote><ul><li>通过<code>curl</code></li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ sh -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>通过<code>wget</code></li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ sh -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">wget</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -<span class="token variable">)</span></span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后设定<code>zsh</code>为默认<code>shell</code></p><pre class="line-numbers language-bash"><code class="language-bash">$ chsh -s /bin/zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="设定oh-my-zsh的主题"><a href="#设定oh-my-zsh的主题" class="headerlink" title="设定oh-my-zsh的主题"></a>设定<code>oh-my-zsh</code>的主题</h1><blockquote><p><code>oh-my-zsh</code>支持非常多的主题，这里我将我个人比较喜欢的主题<code>powerlevel9k</code>作为实例</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改<code>zsh</code>的配置文件</p><pre class="line-numbers language-bash"><code class="language-bash">$ vim ~/.zshrc <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将<code>ZSH_THEME</code>设定为<code>powerlevel9k</code>，如图</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypw3om3nij31p817atmw.jpg" alt=""></p><p>然后保存退出，使配置文件重新生效</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">source</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="安装iTerm2"><a href="#安装iTerm2" class="headerlink" title="安装iTerm2"></a>安装<code>iTerm2</code></h1><blockquote><p><code>iTerm2</code>是一款替代系统内置终端的工具，其功能更强大，可定义扩展性也更强</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ brew cask <span class="token function">install</span> iterm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="安装archey小工具"><a href="#安装archey小工具" class="headerlink" title="安装archey小工具"></a>安装<code>archey</code>小工具</h1><blockquote><p><code>archey</code>是一个命令行美化工具，其可以在运行终端程序时为用户显示打印出一个七彩的苹果<code>logo</code></p></blockquote><blockquote><p>这个工具的原作者是<a href="https://github.com/obihann" target="_blank" rel="noopener external nofollow noreferrer"><code>obihann</code></a>，我将其按照自己的习惯进行了一些修改，并做了汉化，朋友们可以自行选择</p></blockquote><ul><li>原作者的安装方式</li></ul><pre class="line-numbers language-bash"><code class="language-bash">brew <span class="token function">install</span> archey<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我个人修改的和汉化的可以通过我<code>GitHub</code>仓库中<code>Pages</code>页面的<code>README</code>说明文档进行安装，按照要求安装并配置完成后，退出终端再重新打开就可以发现终端可以自动打印图中的七彩苹果了。</p><p><a href="https://athlonreg.github.io/archey-osx/" target="_blank" rel="noopener external nofollow noreferrer">https://athlonreg.github.io/archey-osx/</a></p><h1 id="安装tmux小工具"><a href="#安装tmux小工具" class="headerlink" title="安装tmux小工具"></a>安装<code>tmux</code>小工具</h1><blockquote><p><code>Tmux</code>是一个优秀的终端复用软件，类似<code>GNU Screen</code>，但来自于<code>OpenBSD</code>，采用<code>BSD</code>授权。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ brew <span class="token function">install</span> tmux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后输入命令<code>tmux</code>即可打开软件，界面十分简单，类似一个下方带有状态栏的终端控制台</p><p>安装完成后，我们将其再美化一下</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cd</span> <span class="token punctuation">;</span> <span class="token function">rm</span> -rf .tmux$ <span class="token function">git</span> clone https://github.com/gpakosz/.tmux.git$ <span class="token function">ln</span> -s .tmux/.tmux.conf$ <span class="token function">cp</span> .tmux/.tmux.conf.local <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="美化结束"><a href="#美化结束" class="headerlink" title="美化结束"></a>美化结束</h1><blockquote><p>到这里，相信你应该和我开头的截图有一样的效果了，如果没有的话，可以在本文后面评论，我会尽快回复。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iTerm2 </tag>
            
            <tag> tmux </tag>
            
            <tag> oh-my-zsh </tag>
            
            <tag> 终端美化 </tag>
            
            <tag> archey </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果声卡 cx20751/2 驱动方法</title>
      <link href="/Drive-CX20751-2-audio-on-hackintosh.html"/>
      <url>/Drive-CX20751-2-audio-on-hackintosh.html</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先从<code>linux</code>提取<code>codec</code>，然后整理<code>codec</code>提取节点数据，参考我的另一篇帖子<a href="http://blog.athlonreg.top/Driver-audio-for-hackintosh.html" target="_blank" rel="noopener external nofollow noreferrer">http://blog.athlonreg.top/Driver-audio-for-hackintosh.html</a></p><h3 id="对比节点数据"><a href="#对比节点数据" class="headerlink" title="对比节点数据"></a>对比节点数据</h3><p>这里拿我的<code>CX20751</code>为例，<code>codec</code>整理的数据如下</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwbciiatj32701f6h20.jpg" alt=""></p><p>看其中的<code>Line in</code>节点，即<code>Mic at Ext</code>，我的是<code>0x19</code>，那么我的<code>AppleALC</code>就需要注入<code>Layout-ID</code>为<code>28</code>，如果你的<code>CX20751/2</code>提取的数据中此节点是<code>0x18</code>，就需要注入<code>Layout-ID</code>为<code>3</code>。</p><h3 id="注入Layout-ID"><a href="#注入Layout-ID" class="headerlink" title="注入Layout-ID"></a>注入<code>Layout-ID</code></h3><h4 id="DSDT方式"><a href="#DSDT方式" class="headerlink" title="DSDT方式"></a><code>DSDT</code>方式</h4><p>挂载你的<code>ESP</code>分区，打开<code>DSDT</code>，打上声卡<code>Layout-ID</code>注入补丁</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwc693jij31ke17i1ag.jpg" alt=""></p><p>如图，<code>3</code>和<code>12</code>都可以，我拿<code>12</code>为例，点击此补丁，将如下图中的<code>12</code>改为<code>28</code>，然后点击<code>Apply</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwdcqetkj31ru17idw8.jpg" alt=""></p><p>如果你的需要注入<code>3</code>，只需直接打上那个为<code>3</code>的补丁即可</p><h4 id="Hotpatch方式"><a href="#Hotpatch方式" class="headerlink" title="Hotpatch方式"></a><code>Hotpatch</code>方式</h4><p>将图中三个<code>SSDT</code>放入<code>/EFI/CLOVER/ACPI/patched</code>，三个文件分别做以下修改，我的是<code>28</code>改为<code>0x1C</code>，如果你的是<code>3</code>，则改为<code>0x03</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwghuvp8j30b60b845o.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwh26ts3j31aw118qdw.jpg" alt=""></p><p>![image-20181231141502091](/Users/canvas/Library/Application Support/typora-user-images/image-20181231141502091.png)</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwi1ni90j31ke17i19h.jpg" alt=""></p><p>然后在<code>config.plist</code>中勾选以下选项</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwj5qbvwj32201801db.jpg" alt=""></p><h4 id="config方式"><a href="#config方式" class="headerlink" title="config方式"></a><code>config</code>方式</h4><p>同样勾选以下选项</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwj5qbvwj32201801db.jpg" alt=""></p><p>然后注入<code>ID</code>，此处根据前面的<code>Layout-ID</code>决定注入<code>3</code>还是<code>28</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwl0wucij3220180tod.jpg" alt=""></p><h3 id="放驱动"><a href="#放驱动" class="headerlink" title="放驱动"></a>放驱动</h3><p>将<code>AppleALC</code>、<code>Lilu</code>、<code>CodecCommander</code>三个驱动放到<code>/EFI/CLOVER/kexts/Other</code></p><p><a href="https://github.com/vit9696/AppleALC/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/vit9696/AppleALC/releases</a><br><a href="https://github.com/vit9696/Lilu/releases" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/vit9696/Lilu/releases</a><br><a href="https://bitbucket.org/RehabMan/os-x-eapd-codec-commander/downloads/" target="_blank" rel="noopener external nofollow noreferrer">https://bitbucket.org/RehabMan/os-x-eapd-codec-commander/downloads/</a></p><p><strong>注意三个驱动都用<code>Release</code>里面的</strong></p><h3 id="放SSDT"><a href="#放SSDT" class="headerlink" title="放SSDT"></a>放<code>SSDT</code></h3><p>打开终端执行</p><pre><code>$ git clone https://github.com/RehabMan/OS-X-Clover-Laptop-Config</code></pre><p>利用<code>MaciASL</code>打开<code>SSDT-CX20752.dsl</code>，将其另存为<code>SSDT-CX20752.aml</code>。保存至<code>/EFI/CLOVER/ACPI/patched</code>,如果你正在使用<code>SortedOrder</code>，则将其加入进去。</p><p>然后保存全部工作重启。</p><h3 id="声卡输入修复"><a href="#声卡输入修复" class="headerlink" title="声卡输入修复"></a>声卡输入修复</h3><p>若遇到声卡内建输入或耳机线路输入无电平的情况，请继续以下步骤。</p><p>下载<code>ALCPlugFix for AppleALC.zip</code></p><p><a href="https://github.com/athlonreg/ASUS-F455LD-i5-4210u" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/athlonreg/ASUS-F455LD-i5-4210u</a></p><p>打开终端执行</p><pre><code>$ git clone https://github.com/athlonreg/ASUS-F455LD-i5-4210u</code></pre><p>下载完成后，如果你的<code>Layout-ID</code>是<code>3</code>，则将其中的<code>ALCPlugFix-LayoutID=3.zip</code>解压至桌面，若为<code>28</code>则将其中的<code>ALCPlugFix-LayoutID=28.zip</code>解压至桌面，执行</p><pre><code>$ cd ~/Desktop/ALCPlugFix/alc_fix $ chmod +x install.sh $ ./install.sh </code></pre><p>然后根据提示输入密码回车。最后保存重启即可。</p><p><strong><em>新版 AppleALC 已经解决此问题，注入 ID 7即可。</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cx20751 </tag>
            
            <tag> cx20752 </tag>
            
            <tag> ALCPlugFix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSI 七层模型详解</title>
      <link href="/OSI-Model.html"/>
      <url>/OSI-Model.html</url>
      
        <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>OSI（Open System Interconnection）参考模型是国际标准化组织（ISO）制定的一个用于计算机或通信系统间互联的标准体系，一般称为OSI参考模型或七层模型。</p><h2 id="模型图"><a href="#模型图" class="headerlink" title="模型图"></a>模型图</h2><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypy5q4ps0j30ra0esac0.jpg" alt=""></p><h3 id="各层描述"><a href="#各层描述" class="headerlink" title="各层描述"></a>各层描述</h3><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><blockquote><p>设备之间的比特流传输、物理接口、电气特性等</p></blockquote><p>物理层并不是物理媒体本身，它只是开放系统中利用物理媒体实现物理连接的功能描述和执行连接的规程。物理层提供用于建立、保持和断开物理连接的机械的、电气的、功能的和过程的条件。简而言之，物理层提供有关同步和全双工比特流在物理媒体上的传输手段，其典型的协议有<code>RS 232C</code>、<code>RS 449/422/423</code>、<code>V.24</code>和<code>X.21</code>、<code>X.21bis</code>等。</p><p>物理层是<code>OSI</code>的第一层，它虽然处于最底层，却是整个开放系统的基础。物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。</p><ul><li><p>为数据端设备提供传送数据的通路，数据通路可以是一个物理媒体，也可以是多个物理媒体连接而成。一次完整的数据传输，包括激活物理连接、传送数据和终止物理连接。所谓激活，就是不管有多少物理媒体参与，都要在通信的两个数据终端设备间连接起来，形成一条通路。</p></li><li><p>传输数据。物理层要形成适合数据传输需要的实体，为数据传送服务。一是要保证数据能在其上正确通过，二是要提供足够的带宽(带宽是指每秒钟内能通过的比特(<code>Bit</code>)数)，以减少信道上的拥塞。传输数据的方式能满足点到点，一点到多点，串行或并行，半双工或全双工，同步或异步传输的需要。</p></li><li><p>完成物理层的一些管理工作。</p></li></ul><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><blockquote><p>封装数据帧</p></blockquote><p>数据链路可以粗略地理解为数据通道。物理层要为终端设备间的数据通信提供传输介质及其连接。介质是长期的，连接是有生存期的。在连接生存期内，收发两端可以进行不等的一次或多次数据通信。每次通信都要经过建立通信联络和拆除通信联络两个过程。这种建立起来的数据收发关系就叫做数据链路。而在物理媒体上传输的数据难免受到各种不可靠因素的影响而产生差错，为了弥补物理层上的不足，为上层提供无差错的数据传输，就要能对数据进行检错和纠错。数据链路的建立，拆除，对数据的检错，纠错是数据链路层的基本任务。</p><p>链路层是为网络层提供数据传送服务的，这种服务要依靠本层具备的功能来实现。链路层应具备如下功能：</p><ul><li>链路连接的建立、拆除和分离；</li><li>帧定界和帧同步。链路层的数据传输单元是帧，协议不同，帧的长短和界面也有差别，但无论如何必须对帧进行定界；</li><li>顺序控制，指对帧的收发顺序的控制；</li><li>差错检测和恢复。还有链路标识，流量控制等等。差错检测多用方阵码校验和循环码校验来检测信道上数据的误码，而帧丢失等用序号检测。各种错误的恢复则常靠反馈重发技术来完成。</li></ul><p>独立的链路产品中最常见的当属网卡，网桥也是链路产品。数据链路层将本质上不可靠的传输媒体变成可靠的传输通路提供给网络层。在<code>IEEE802.3</code>情况下，数据链路层分成了两个子层，一个是逻辑链路控制，另一个是媒体访问控制.</p><p><code>OSI</code>其中：</p><ul><li><code>AUI</code>——连接单元接口 </li><li><code>PMA</code>——物理媒体连接</li><li><code>MAU</code>——媒体连接单元 </li><li><code>PLS</code>——物理信令</li><li><code>MDI</code>——媒体相关接口</li></ul><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><blockquote><p>封装数据报文</p></blockquote><p>网络层的产生也是网络发展的结果。在联机系统和线路交换的环境中，网络层的功能没有太大意义。当数据终端增多时。它们之间有中继设备相连，此时会出现一台终端要求不只是与惟一的一台而是能和多台终端通信的情况，这就产生了把任意两台数据终端设备的数据链接起来的问题，也就是路由或者叫寻径。另外，当一条物理信道建立之后，被一对用户使用，往往有许多空闲时间被浪费掉。人们自然会希望让多对用户共用一条链路，为解决这一问题就出现了逻辑信道技术和虚拟电路技术。</p><p>中继控制层，其主要功能是利用数据链路层所保证的邻接节点间的无差错数据传输功能，通过路由选择和中继功能，实现两个端系统之间的数据传输。为此，网络层还具有多路复用功能，采用统计时分复用原理，将一条数据链路复用为多条逻辑信道，从而实现一个数据终端设备利用一条物理电路同时和多个远程数据通信设备的通信。网络层规定了网路连接的建立和拆除规程以及数据传送规程等。</p><ul><li>路由选择和中继；</li><li>激活，终止网络连接；</li><li>在一条数据链路上复用多条网络连接，多采取分时复用技术；</li><li>检测与恢复；</li><li>排序，流量控制；</li><li>服务选择；</li><li>网络管理。</li></ul><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><blockquote><p>确定传输协议、确定数据传输的接口</p></blockquote><p>主要功能是端开放系统之间数据的收妥确认。同时，还用于弥补各种通信网路的质量差异，对经过下三层之后仍然存在的传输差错进行恢复，进一步提高可靠性。另外，还通过复用、分段和组合、连接和分离、分流和合流等技术措施，提高吞吐量和服务质量。</p><p>传输层是两台计算机经过网络进行数据通信时，第一个端到端的层次，具有缓冲作用。当网络层服务质量不能满足要求时，它将服务加以提高，以满足高层的要求；当网络层服务质量较好时，它只用很少的工作。传输层还可进行复用，即在一个网络连接上创建多个逻辑连接。传输层也称为运输层。传输层只存在于端开放系统中，是介于低3层通信子网系统和高3层之间的一层，但是很重要的一层。因为它是源端到目的端对数据传送进行控制从低到高的最后一层。</p><p>有一个既存事实，即世界上各种通信子网在性能上存在着很大差异。例如电话交换网，分组交换网，公用数据交换网，局域网等通信子网都可互连，但它们提供的吞吐量，传输速率，数据延迟通信费用各不相同。对于会话层来说，却要求有一性能恒定的界面。传输层就承担了这一功能。它采用分流/合流，复用/介复用技术来调节上述通信子网的差异，使会话层感受不到。</p><p>此外传输层还要具备差错恢复，流量控制等功能，以此对会话层屏蔽通信子网在这些方面的细节与差异。传输层面对的数据对象已不是网络地址和主机地址，而是会话层的界面端口。上述功能的最终目的是为会话提供可靠的，无误的数据传输。传输层的服务一般要经历传输连接建立、数据传送、传输连接释放3个阶段才算完成一个完整的服务过程。而在数据传送阶段又分为一般数据传送和加速数据传送两种。</p><h3 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h3><blockquote><p>对应用会话的管理、同步</p></blockquote><p>按照在应用进程之间约定的原则，按照正确的顺序收、发数据，进行各种形态的对话。会话层规定了会话服务用户间会话连接的建立和拆除规程以及数据传送规程。</p><p>会话层提供的服务是应用建立和维持会话，并能使会话获得同步。会话层使用校验点可使通信会话在通信失效时从校验点继续恢复通信。这种能力对于传送大的文件极为重要。会话层，表示层，应用层构成开放系统的高3层，面向应用进程提供分布处理、对话管理、信息表示、检查和恢复与语义上下文有关的传送差错等。为给两个对等会话服务用户建立一个会话连接，应该做如下几项工作：</p><ul><li>将会话地址映射为运输地址；</li><li>数据传输阶段；</li><li>连接释放。</li></ul><h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><blockquote><p>数据的表现形式、特殊数据的加密、压缩（解释传输的数据）</p></blockquote><p>把应用层提供的信息变换为能够共同理解的形式，提供字符代码、数据格式、控制信息格式、加密等的统一表示。表示层的作用之一是为异种机通信提供一种公共语言，以便能进行互操作。这种类型的服务之所以需要，是因为不同的计算机体系结构使用的数据表示法不同。例如，<code>IBM</code>主机使用<code>EBCDIC</code>编码，而大部分<code>PC</code>机使用的是<code>ASCII</code>码。在这种情况下，便需要表示层来完成这种转换。通过前面的介绍，我们可以看出，会话层以下5层完成了端到端的数据传送，并且是可靠的、无差错的传送。但是数据传送只是手段而不是目的，最终是要实现对数据的使用。由于各种系统对数据的定义并不完全相同，最易明白的例子是键盘——其上的某些键的含义在许多系统中都有差异。这自然给利用其它系统的数据造成了障碍。表示层和应用层就担负了消除这种障碍的任务。</p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><blockquote><p>提供用户接口</p></blockquote><p>实现应用进程（如用户程序、终端操作员等）之间的信息交换。同时，还具有一系列业务处理所需要的服务功能。应用层一般包括公共应用服务要素（<code>CASE</code>）和特定应用服务要素（<code>SASE</code>）。其中<code>CASE</code>提供应用进程中最基本的服务，向应用进程提供信息传送所必需的、但又独立于应用进程通信的能力。SASE实质上是各种应用进程在应用层中的映射，每一个<code>SASE</code>都针对某一类具体应用，例如文件传送、访问和管理（<code>FTAM</code>）、虚拟终端（<code>VT</code>）、消息处理系统（<code>MHS</code>）、电子数据互换（<code>EDI</code>）和目录查询等。</p><p>应用层向应用程序提供服务，这些服务按其向应用程序提供的特性分成组，并称为服务元素。有些可为多种应用程序共同使用，有些则为较少的一类应用程序使用。应用层是开放系统的最高层，是直接为应用进程提供服务的。其作用是在实现多个系统应用进程相互通信的同时，完成一系列业务处理所需的服务。</p><h2 id="OSI七层模型-相关协议-缩写"><a href="#OSI七层模型-相关协议-缩写" class="headerlink" title="OSI七层模型 相关协议 缩写"></a>OSI七层模型 相关协议 缩写</h2><h3 id="应用层-1"><a href="#应用层-1" class="headerlink" title="应用层"></a>应用层</h3><p>HTTP        超文本传输协议<br>FTP         文件传输协议<br>SMTP        简单邮件传输协议<br>TELNETTCP/IP    终端仿真协议<br>POP3        邮局协议第三版<br>Finger      用户信息协议<br>NNTP        网络新闻传输协议<br>IMAP4       因特网信息访问协议第四版<br>LPR UNIX    远程打印协议<br>Rwho UNIX   远程 Who协议<br>Rexec UNIX  远程执行协议<br>Login UNIX  远程登陆协议<br>RSH UNIX    远程Shell协议<br>NTF HP      网络文件传输协议<br>RDA HP      远程数据库访问协议<br>VT          虚拟终端仿真协议<br>RFA HP      远程文件访问协议<br>RPC Remote Process Comm.<br>S-HTTP      安全超文本传输协议<br>GDP         网关发现协议<br>X-Window<br>CMOT        基于TCP/IP的CMIP协议<br>SOCKS       安全套接字协议<br>FANP        流属性通知协议<br>SLP         服务定位协议<br>MSN         微软网络服务<br>Radius      远程用户拨号认证服务协议<br>DNS         域名系统<br>NFS         网络文件系统协议<br>NIS SUN     网络信息系统协议<br>R-STAT SUN  远程状态协议<br>NSM SUN     网络状态监测协议<br>PMAP SUN    端口映射协议<br>Mount<br>LPR         UNIX远程打印协议</p><h4 id="常用UDP协议的应用层服务"><a href="#常用UDP协议的应用层服务" class="headerlink" title="常用UDP协议的应用层服务"></a>常用UDP协议的应用层服务</h4><p>BOOTP   引导协议<br>DHCP    动态主机配套协议<br>NTP     网络时间协议<br>TFTP    简单文件传输协议<br>SNMP    简单网络管理协议</p><h3 id="表示层-1"><a href="#表示层-1" class="headerlink" title="表示层"></a>表示层</h3><p>DECnet NSP<br>LPP             轻量级表示协议<br>NBSSN NetBIOS   会话服务协议<br>XDP             外部数据表示协议<br>IPX</p><h3 id="会话层-1"><a href="#会话层-1" class="headerlink" title="会话层"></a>会话层</h3><p>SSL     安全套接字层协议<br>TLS     传输层安全协议<br>DAP     目录访问协议<br>LDAP    轻量级目录访问协议<br>RPC     远程过程调用协议<br>VINES NETRPC<br>VFRP<br>NeTBIOS<br>IPX</p><h3 id="传输层-1"><a href="#传输层-1" class="headerlink" title="传输层"></a>传输层</h3><p>XOT         基于tcp之上的X协议<br>Van Jacobson 压缩TCP协议<br>ISO-DE ISO  开发环境——–&gt;NetBISO<br>TALI        传输适配层接口协议<br>DSI、NetBIOS、IP NeTBIOS、ISO-TP SSP、SMB、MSRPC<br>UDP         用户数据报协议<br>RUDP        可靠的用户数据报协议<br>Mobile IP   移动IP协议</p><h3 id="网络层-1"><a href="#网络层-1" class="headerlink" title="网络层"></a>网络层</h3><p>IP/IPv6 互联网协议/互联网协议第六版<br>ICMPv6  互联网控制信息协议第六版<br>ICMP    互联网控制信息协议<br>IGMP    互联网组管理协议<br>SLIP    串行线路IP协议</p><h4 id="安全协议"><a href="#安全协议" class="headerlink" title="安全协议"></a>安全协议</h4><p>AH  认证头协议<br>ESP 安装封装有效载荷协议</p><h4 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h4><p>EGP     外部网关协议<br>OSPF    开放最短路径优先协议<br>IGRP    内部网关路由协议<br>NHRP    下一跳解析协议<br>IE-IRGP     增强内部网关路由选择协议<br>RIPng for IPv6 IPv6路由信息协议<br>GGP     网关到网关协议<br>VRRP    虚拟路由器冗余协议<br>PGM     实际通用组播协议<br>RSVP    资源预留协议<br>PIM-DM  密集模式独立组播协议<br>DVMRP   距离矢量组播路由协议<br>RIP2    路由信息协议第二版<br>PIM-SM  稀疏模式独立组播协议<br>MOSPF   组播开放最短路径优先协议</p><h3 id="数据链路层-1"><a href="#数据链路层-1" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>MPLS    多协议标签交换协议<br>XTP     压缩传输协议<br>DCAP    数据转换客户访问协议<br>SLE     串行连接封装协议<br>IPinIP  IP套IP封装协议</p><h4 id="隧道协议"><a href="#隧道协议" class="headerlink" title="隧道协议"></a>隧道协议</h4><p>PPTP    点对点隧道协议<br>L2F     第二层转发协议<br>L2TP    第二层隧道协议<br>ATMP    接入隧道管理协议<br>Cisco   协议<br>CDP     思科发现协议<br>CGMP    思科组管理协议</p><h4 id="地址解析协议"><a href="#地址解析协议" class="headerlink" title="地址解析协议"></a>地址解析协议</h4><p>ARP     地址解析协议<br>RAR     逆向地址解析协议</p><h3 id="物理层-1"><a href="#物理层-1" class="headerlink" title="物理层"></a>物理层</h3><p>IEEE        802.2<br>Ethernet    v.2<br>Internetwork</p>]]></content>
      
      
      <categories>
          
          <category> Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSI </tag>
            
            <tag> 七层模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果常见补丁</title>
      <link href="/Common-patches-on-Hackintosh.html"/>
      <url>/Common-patches-on-Hackintosh.html</url>
      
        <content type="html"><![CDATA[<h3 id="先说说怎样强制加载某个驱动"><a href="#先说说怎样强制加载某个驱动" class="headerlink" title="先说说怎样强制加载某个驱动"></a>先说说怎样强制加载某个驱动</h3><p>如下，<code>KextToPatch</code>并列<code>ForceKextsToLoad</code>，设置<code>kext</code>路径</p><pre><code>&lt;key&gt;ForceKextsToLoad&lt;/key&gt;&lt;array&gt;    &lt;string&gt;\System\Library\Extensions\AppleHDA.kext&lt;/string&gt;    &lt;string&gt;\Extra\Extensions&lt;/string&gt;&lt;/array&gt;</code></pre><h3 id="笔记本显存修改至2048MB"><a href="#笔记本显存修改至2048MB" class="headerlink" title="笔记本显存修改至2048MB"></a>笔记本显存修改至<code>2048MB</code></h3><blockquote><p>HD4200_4400_4600 Mobile：</p></blockquote><pre><code>Name：        AppleIntelFramebufferAzulFind：        01030303 00000002 00003001 00006000 00000060Replace：    01030303 00000002 00003001 00009000 00000080Comment:    1536MB -&gt; 2048MB for HD4200_4400_4600 Mobile</code></pre><blockquote><p>HD620 Mobile：</p></blockquote><pre><code>Name：        AppleIntelKBLGraphicsFramebufferFind：        01030303 00002002 00000000 00000060Replace：    01030303 00002002 00000000 00000080 Comment:    1536MB -&gt; 2048MB for HD620 Mobile</code></pre><blockquote><p>HD630 Mobile：</p></blockquote><pre><code>Name：        AppleIntelKBLGraphicsFramebufferFind：        01030303 00006002 00005001 00000060Replace：    01030303 00006002 00005001 00000080Comment:    1536MB -&gt; 2048MB for HD630 Mobile</code></pre><blockquote><p>HD520_530_540 Mobile：</p></blockquote><pre><code>Name：        AppleIntelSKLGraphicsFramebufferFind：        01030303 00002002 00005001 00000060Replace：    01030303 00002002 00005001 00000080Comment:    1536MB -&gt; 2048MB for HD520_530_540 Mobile</code></pre><blockquote><p>HD5500 Mobile：</p></blockquote><pre><code>Name：        AppleIntelBDWGraphicsFramebuffer Find:         01030303 00002002 00005001 00000060Replace:     01030303 00002002 00005001 00000080Comment:    1536MB -&gt; 2048MB for HD5500 Mobile</code></pre><h3 id="开启Trim"><a href="#开启Trim" class="headerlink" title="开启Trim"></a>开启<code>Trim</code></h3><pre><code>Name: com.apple.iokit.IOAHCIBlockStorageFind: 00415050 4C452053 534400Replcae: 00000000 00000000 000000Comment: Enable TRIM for SSD</code></pre><h3 id="花屏补丁"><a href="#花屏补丁" class="headerlink" title="花屏补丁"></a>花屏补丁</h3><pre><code>Name: com.apple.iokit.IOGraphicsFamilyFind: 4188C4EB 11Replcae: 4188C4EB 31Comment: Boot graphics glitch, 10.10.2/10.10.3MatchOS: 10.10.2,10.10.3</code></pre><pre><code>Name: com.apple.iokit.IOGraphicsFamilyFind: 01000075 17Replcae: 010000EB 17Comment: Boot graphics glitch, 10.10.x/10.11.x (credit lisai9093, cecekpawon)MatchOS: 10.10.x,10.11.x</code></pre><pre><code>Name: com.apple.iokit.IOGraphicsFamilyFind: 01000075 25Replcae: 010000EB 25Comment: Boot graphics glitch, 10.12.dp1 (credit denskop)MatchOS: 10.12.x</code></pre><pre><code>Name: com.apple.iokit.IOGraphicsFamilyFind: 01000075 22Replcae: 010000EB 22Comment: Boot graphics glitch, 10.13 beta (based on denskop patch)MatchOS: 10.13.x</code></pre><h3 id="DVMT补丁"><a href="#DVMT补丁" class="headerlink" title="DVMT补丁"></a>DVMT补丁</h3><blockquote><p>Broadwell</p></blockquote><pre><code>Name: com.apple.driver.AppleIntelBDWGraphicsFramebufferFind: 39CF763CReplcae: 39CFEB3CComment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.10.x (based on Austere.J patch)MatchOS: 10.10.x</code></pre><pre><code>Name: com.apple.driver.AppleIntelBDWGraphicsFramebufferFind: 4139C476 3EReplcae: 4139C4EB 3EComment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.11.beta (based on Austere.J patch)MatchOS: 10.11.x</code></pre><pre><code>Name: com.apple.driver.AppleIntelBDWGraphicsFramebufferFind: 8945C839 C7764FReplcae: 8945C839 C7EB4FComment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.12.0 (based on Austere.J patch)MatchOS: 10.12.x</code></pre><pre><code>Name: com.apple.driver.AppleIntelBDWGraphicsFramebufferFind: 4C895DB8 7644Replcae: 4C895DB8 EB44Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)MatchOS: 10.13.0,10.13.1</code></pre><pre><code>Name: com.apple.driver.AppleIntelBDWGraphicsFramebufferFind: 4C8945C0 7644Replcae: 4C8945C0 EB44Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit RehabMan)MatchOS: 10.13.2,10.13.3</code></pre><blockquote><p>Skylake</p></blockquote><pre><code>Name: com.apple.driver.AppleIntelSKLGraphicsFramebufferFind: 4139C476 2AReplcae: 4139C4EB 2AComment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.11.4 (based on Austere.J patch)MatchOS: 10.11.x</code></pre><pre><code>Name: com.apple.driver.AppleIntelSKLGraphicsFramebufferFind: 8945C839 C67651Replcae: 8945C839 C6EB51Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.12.0 (based on Austere.J patch)MatchOS: 10.12.x</code></pre><pre><code>Name: com.apple.driver.AppleIntelSKLGraphicsFramebufferFind: 4C8955B8 7640Replcae: 4C8955B8 EB40Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)MatchOS: 10.13.0,10.13.1</code></pre><pre><code>Name: com.apple.driver.AppleIntelSKLGraphicsFramebufferFind: 4C895DB8 7640Replcae: 4C895DB8 EB40Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit PMHeart, , shdkpr2008)MatchOS: 10.13.2,10.13.3</code></pre><blockquote><p>Kabylake</p></blockquote><pre><code>Name: com.apple.driver.AppleIntelKBLGraphicsFramebufferFind: 4C895DC0 7646Replcae: 4C895DC0 EB46Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.0/1 (credit PMHeart)MatchOS: 10.13.0,10.13.1</code></pre><pre><code>Name: com.apple.driver.AppleIntelKBLGraphicsFramebufferFind: 4C896DB8 7646Replcae: 4C896DB8 EB46Comment: Disable minStolenSize less or equal fStolenMemorySize assertion, 10.13.2/3 (credit RehabMan)MatchOS: 10.13.2,10.13.3</code></pre><h3 id="硬盘橙色"><a href="#硬盘橙色" class="headerlink" title="硬盘橙色"></a>硬盘橙色</h3><pre><code>Name: AppleAHCIPortFind: 45787465 726E616CReplcae: 496E7465 726E616CComment: Define external drivers as internal to fix yellow drive icons</code></pre><h3 id="让没有ECC内存的机器利用MacPro4-1或者-MacPro5-1机型启动"><a href="#让没有ECC内存的机器利用MacPro4-1或者-MacPro5-1机型启动" class="headerlink" title="让没有ECC内存的机器利用MacPro4,1或者 MacPro5,1机型启动"></a>让没有<code>ECC</code>内存的机器利用<code>MacPro4,1</code>或者 <code>MacPro5,1</code>机型启动</h3><pre><code>Name: AppleTyMCEDriverFind: 720A004D 61635072 6F342C31 004D6163 50726F35 2C310058Replcae: 720A0000 00000000 00000000 00000000 00000000 00000058Comment: Allow booting with a MacPro4,1 or MacPro5,1 SMBIOS definition without ECC memory</code></pre><h3 id="万能声卡将Headphones显示替代为Telephones"><a href="#万能声卡将Headphones显示替代为Telephones" class="headerlink" title="万能声卡将Headphones显示替代为Telephones"></a>万能声卡将<code>Headphones</code>显示替代为<code>Telephones</code></h3><pre><code>Name: VoodooHDAFind: 48656164 70686F6E 657300Replcae: 54656C65 70686F6E 657300Comment: For VoodooHDA replacing the string Headphones with Telephones</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> patch </tag>
            
            <tag> 补丁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 下一些常用命令</title>
      <link href="/Common-command-in-macOS.html"/>
      <url>/Common-command-in-macOS.html</url>
      
        <content type="html"><![CDATA[<h3 id="Trim"><a href="#Trim" class="headerlink" title="Trim"></a>Trim</h3><blockquote><p>开启</p></blockquote><pre><code>$ sudo trimforce enable</code></pre><blockquote><p>关闭</p></blockquote><pre><code>$ sudo trimforce disable</code></pre><h3 id="查看启用的ig-platform-id"><a href="#查看启用的ig-platform-id" class="headerlink" title="查看启用的ig-platform-id"></a>查看启用的<code>ig-platform-id</code></h3><pre><code>$ ioreg -l | grep -y platform-id</code></pre><h3 id="笔记本开启插电源出提示音"><a href="#笔记本开启插电源出提示音" class="headerlink" title="笔记本开启插电源出提示音:"></a>笔记本开启插电源出提示音:</h3><blockquote><p>开启:</p></blockquote><pre><code>$ defaults write com.apple.PowerChime ChimeOnAllHardware -bool true; open /System/Library/CoreServices/PowerChime.app &amp;</code></pre><blockquote><p>关闭:</p></blockquote><pre><code>$ defaults write com.apple.PowerChime ChimeOnAllHardware -bool false; killall PowerChime</code></pre><h3 id="去掉apfs-efi最新版本的日志调试显示"><a href="#去掉apfs-efi最新版本的日志调试显示" class="headerlink" title="去掉apfs.efi最新版本的日志调试显示"></a>去掉<code>apfs.efi</code>最新版本的日志调试显示</h3><pre><code>$ cd ~/Desktop                        &amp; cp /usr/standalone/i386/apfs.efi .$ perl -i -pe 's|\x00\x74\x07\xb8\xff\xff|\x00\x90\x90\xb8\xff\xff|sg' ./apfs.efi</code></pre><h3 id="提取显示器EDID及设备ID厂商ID"><a href="#提取显示器EDID及设备ID厂商ID" class="headerlink" title="提取显示器EDID及设备ID厂商ID"></a>提取显示器<code>EDID</code>及设备<code>ID</code>厂商<code>ID</code></h3><blockquote><p>EDID</p></blockquote><pre><code>$ ioreg -lw0 | grep -i "IODisplayEDID" | sed -e 's/.*&lt;//' -e 's/&gt;//'</code></pre><blockquote><p>PID</p></blockquote><pre><code>$ ioreg -l | grep "DisplayProductID"    </code></pre><blockquote><p>VID</p></blockquote><pre><code>$ ioreg -l | grep "DisplayVendorID"  </code></pre><h3 id="为macOS-Sierra以上的OS-X开启任何来源"><a href="#为macOS-Sierra以上的OS-X开启任何来源" class="headerlink" title="为macOS Sierra以上的OS X开启任何来源"></a>为<code>macOS Sierra</code>以上的<code>OS X</code>开启任何来源</h3><pre><code>$ sudo spctl --master-disable</code></pre><h3 id="查看加载的非官方内核扩展-–-kext"><a href="#查看加载的非官方内核扩展-–-kext" class="headerlink" title="查看加载的非官方内核扩展 – kext"></a>查看加载的非官方内核扩展 – <code>kext</code></h3><pre><code>$ kextstat | grep -v "com.apple" | grep -v Energy</code></pre><h3 id="查看显示器硬件信息"><a href="#查看显示器硬件信息" class="headerlink" title="查看显示器硬件信息"></a>查看显示器硬件信息</h3><blockquote><p>EDID</p></blockquote><pre><code>$ ioreg -l | grep "IODisplayEDID"</code></pre><blockquote><p>ProductID</p></blockquote><pre><code>$ ioreg -l | grep "DisplayProductID"</code></pre><blockquote><p>VendorID</p></blockquote><pre><code>$ ioreg -l | grep "DisplayVendorID"</code></pre><h3 id="设置系统语言"><a href="#设置系统语言" class="headerlink" title="设置系统语言"></a>设置系统语言</h3><pre><code>$ languagesetup</code></pre><h3 id="磁盘工具"><a href="#磁盘工具" class="headerlink" title="磁盘工具"></a>磁盘工具</h3><pre><code>$ diskutil $ fdisk $ df </code></pre><h3 id="kext工具"><a href="#kext工具" class="headerlink" title="kext工具"></a><code>kext</code>工具</h3><pre><code>$ kextstat $ kextfind$ kextlibs$ kextcache</code></pre><h3 id="系统设置工具"><a href="#系统设置工具" class="headerlink" title="系统设置工具"></a>系统设置工具</h3><pre><code># systemsetup</code></pre><h3 id="系统控制工具"><a href="#系统控制工具" class="headerlink" title="系统控制工具"></a>系统控制工具</h3><pre><code>$ sysctl $ sysadminctl</code></pre><h3 id="系统状态查看工具"><a href="#系统状态查看工具" class="headerlink" title="系统状态查看工具"></a>系统状态查看工具</h3><pre><code>$ systemstats $ system_profiler$ ioreg$ iostat$ bdmesg</code></pre><h3 id="nvram工具"><a href="#nvram工具" class="headerlink" title="nvram工具"></a><code>nvram</code>工具</h3><pre><code>$ nvram</code></pre><h3 id="pkg工具"><a href="#pkg工具" class="headerlink" title="pkg工具"></a><code>pkg</code>工具</h3><pre><code>$ pkgutil</code></pre><h3 id="clover生成工具"><a href="#clover生成工具" class="headerlink" title="clover生成工具"></a><code>clover</code>生成工具</h3><pre><code>$ clover-genconfig</code></pre><h3 id="查看启动参数"><a href="#查看启动参数" class="headerlink" title="查看启动参数"></a>查看启动参数</h3><pre><code>$ sysctl -n kern.bootargs </code></pre><h3 id="查看CPU内核数"><a href="#查看CPU内核数" class="headerlink" title="查看CPU内核数"></a>查看<code>CPU</code>内核数</h3><pre><code>$ sysctl -n hw.physicalcpu </code></pre><h3 id="查看CPU线程数"><a href="#查看CPU线程数" class="headerlink" title="查看CPU线程数"></a>查看<code>CPU</code>线程数</h3><pre><code>$ sysctl -n hw.logicalcpu </code></pre><h3 id="查看机型SMBIOS"><a href="#查看机型SMBIOS" class="headerlink" title="查看机型SMBIOS"></a>查看机型<code>SMBIOS</code></h3><pre><code>$ sysctl -n machdep.cpu.brand_string </code></pre><h3 id="查看网络是否连通"><a href="#查看网络是否连通" class="headerlink" title="查看网络是否连通"></a>查看网络是否连通</h3><pre><code>$ ping -c 2 www.baidu.com &amp;&gt;/dev/null&amp;&amp; echo "Internet: Connected" || echo "Internet: Disconnected" </code></pre><h3 id="查看当前登录用户"><a href="#查看当前登录用户" class="headerlink" title="查看当前登录用户"></a>查看当前登录用户</h3><pre><code>$ who </code></pre><h3 id="查看DNS"><a href="#查看DNS" class="headerlink" title="查看DNS"></a>查看<code>DNS</code></h3><pre><code>$ cat /etc/resolv.conf | sed -n '16p' | awk '{print $2}' </code></pre><h3 id="查看IP"><a href="#查看IP" class="headerlink" title="查看IP"></a>查看<code>IP</code></h3><pre><code>$ osascript -e "IPv4 address of (system info)" //内网$ dig +short myip.opendns.com @resolver1.opendns.com //公网</code></pre><h3 id="查看运行时间"><a href="#查看运行时间" class="headerlink" title="查看运行时间"></a>查看运行时间</h3><pre><code>$ uptime | sed 's/.*up \([^,]*\), .*/\1/'</code></pre><h3 id="查看电量剩余"><a href="#查看电量剩余" class="headerlink" title="查看电量剩余"></a>查看电量剩余</h3><pre><code>$ ioreg -c AppleSmartBattery -r | awk '$1~/Capacity/{c[$1]=$3} END{OFMT="%.2f%"; max=c["\"MaxCapacity\""]; if (max&gt;0) { print 100*c["\"CurrentCapacity\""]/max;} }' </code></pre><h3 id="查看电池充电状态"><a href="#查看电池充电状态" class="headerlink" title="查看电池充电状态"></a>查看电池充电状态</h3><pre><code>$ pmset -g batt | sed -n '2p' | awk '{print $4}' | sed 's/;//g' </code></pre><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><pre><code>$ sw_vers -productVersion </code></pre><h3 id="查看系统版本号"><a href="#查看系统版本号" class="headerlink" title="查看系统版本号"></a>查看系统版本号</h3><pre><code>$ sw_vers -buildVersion</code></pre><h3 id="查看内存容量"><a href="#查看内存容量" class="headerlink" title="查看内存容量"></a>查看内存容量</h3><pre><code>$ echo $(($(sysctl -n hw.memsize) / 1024 / 1024))</code></pre><h3 id="查看操作系统型号"><a href="#查看操作系统型号" class="headerlink" title="查看操作系统型号"></a>查看操作系统型号</h3><pre><code>$ sysctl -n hw.model</code></pre><h3 id="查看当前系统短版本名称"><a href="#查看当前系统短版本名称" class="headerlink" title="查看当前系统短版本名称"></a>查看当前系统短版本名称</h3><pre><code>$ xxd -ps /Applications/Utilities/System\ Information.app/Contents/MacOS/System\ Information|tr -d '\n'|perl -nle "print $&amp; if m{00$(sw_vers -productVersion|awk -F '.' '{printf $1"."$2}'|xxd -ps)00\K.*?00}"|xxd -r -p</code></pre><h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单修改 FB 实现显存增加至 2048MB 修复某些花屏</title>
      <link href="/How-to-patch-Framebuffer-change-VRAM-from-1536MB-to-2048MB.html"/>
      <url>/How-to-patch-Framebuffer-change-VRAM-from-1536MB-to-2048MB.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>本来不打算发这个帖子的，因为好多人觉得没有什么用，但前几天帮论坛好友阿林解决他<code>hd4600</code>花屏问题时，发现这个方法还是有一定作用的。之前在<code>10.12</code>区有坛友的<code>4600</code>部分区域出现花屏的情况，最后通过修改注入的<code>ig</code>来解决的，大家都知道，<code>4200 4400 4600</code>都是靠<code>FakeID</code>为<code>0x04128086</code>和<code>ig</code>为<code>0x0a260006</code>然后配合<code>FakePCIID</code>和<code>FakePCIID_HD_Graphics</code>两个<code>kext</code>来驱动的，大家也知道，一部分<code>4600</code>也可以用<code>0x04160000</code>而不需要<code>FakeID</code>注入来驱动（相应的不少<code>4400</code>也可以用<code>0x0a160000</code>而不需要<code>FakeID</code>来驱动），两种方法都可以驱动核显，但区别还是有的，最容易发现的就是显存了，第一种方法驱动后都是<code>1536m</code>，第二种则是<code>1024m</code>。而前面提到的<code>4600</code>部分区域花屏的案例则是用第二种方式来解决的，后来经过测试，发现通过对<code>framebuffer</code>进行<code>patch</code>以达到<code>2048m</code>的显存也可以解决这个问题，于是这个方法就被我记在心里了。后来在帮阿林解决了他的花屏问题后，决定还是把相关方法写出来，虽然没什么技术含量，但也能为景友提供一个思路。<br>废话就说到这，下面说方法:</p><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="查看FB以及ig"><a href="#查看FB以及ig" class="headerlink" title="查看FB以及ig"></a>查看<code>FB</code>以及<code>ig</code></h3><p>首先，确定你当前加载的Framebuffer，终端执行以下命令</p><pre class="line-numbers language-bash"><code class="language-bash">$ kextstat <span class="token operator">|</span> <span class="token function">grep</span> -y AppleIntel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwub6t0ej31p817agtj.jpg" alt=""></p><p>如图，看输出结果中带Framebuffer的就是我们需要的（haswell之前的是带FB的），图中我的就是AppleIntelFramebufferAzul然后执行以下命令查看当前使用的ig</p><pre class="line-numbers language-bash"><code class="language-bash">$ ioreg -l <span class="token operator">|</span> <span class="token function">grep</span> ig-platform-id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwujmt1cj31p817a479.jpg" alt=""></p><p>如图我的就是<code>0x0a260006</code>,有朋友不清楚，不是<code>0600260a</code>吗，下次一定要知道，这种<code>id</code>将每两位一组分组，然后从后往前排序，最后由于是十六进制，我们在最前面加上<code>0x</code>来表示，就得出了<code>0x0a260006</code>，这就是我们的<code>id</code>，当然了，后面步骤中用到的还是<code>0600260a</code>。</p><h3 id="下载并安装hexfiend"><a href="#下载并安装hexfiend" class="headerlink" title="下载并安装hexfiend"></a>下载并安装<code>hexfiend</code></h3><p>我直接放链接了<br>链接:<a href="https://pan.baidu.com/s/1EhkVv2eaUE1u_Gmp87arJw" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1EhkVv2eaUE1u_Gmp87arJw</a>  密码:lm1o</p><h3 id="在FB中查找ig进行处理"><a href="#在FB中查找ig进行处理" class="headerlink" title="在FB中查找ig进行处理"></a>在<code>FB</code>中查找<code>ig</code>进行处理</h3><p>然后，在<code>/System/Library/Extensions</code>下找到和第一步找出的<code>Frambuffer</code>同名<code>kext</code>，以我的为例，就是<code>AppleIntelFramebufferAzul.kext</code>,右键显示包内容，在<code>/Contents/MacOS</code>下将<code>kext</code>的同名文件拷贝到桌面，以我的为例就是<code>AppleIntelFramebufferAzul</code>。</p><p>右键此文件打开方式选我们刚才安装的<code>hexfiend</code>，快捷键<code>command + F</code>调出搜索框，输入刚才在第一步找到的<code>ig</code>，回车搜索，找到后面紧跟<code>01030303</code>的那一串字符，如图</p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/29/165432j9e9ve5zw091q6mj.png" alt=""></p><p>从搜索的<code>ig</code>后面第一串开始，到<code>00000060</code>结束，将这些字符串拷贝到一个文本文档，并八个数字一组，整理好，然后再复制一行，将第二行最后的<code>60</code>改为<code>80</code>，如图</p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/29/165830l1ji7ero3hez1js6.png" alt=""></p><p>第一串就是我们要做的<code>patch</code>的<code>Find</code>，第二串是<code>Replace</code>，而<code>Name</code>则是第一步中的<code>Framebuffer</code>名字，我这里就是<code>AppleIntelFramebufferAzul</code>，<code>Comment</code>就无所谓了，我写成<code>Change VRAM from 1536MB to 2048MB for HD4400</code>，这时我们的补丁就做好了。</p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/29/170205ia9i0jppida5jai5.png" alt=""></p><p>最后将<code>patch</code>打到<code>config.plist</code></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/29/170356xpbiyid3del3byda.png" alt=""></p><p>然后保存重启，就会发现关于本机的显存从原来的<code>1536MB</code>变成了<code>2048MB</code></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwxgweqkj312s0pun6l.jpg" alt=""></p><p>如果没效果，可以尝试重建缓存。</p><h2 id="帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用"><a href="#帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用" class="headerlink" title="帖子的最后，我将之前做的几个patch贴出来，大家可以尝试使用"></a>帖子的最后，我将之前做的几个<code>patch</code>贴出来，大家可以尝试使用</h2><blockquote><p>HD4200_4400_4600 Mobile</p></blockquote><pre><code>Name：           AppleIntelFramebufferAzulFind：           01030303 00000002 00003001 00006000 00000060Replace：        01030303 00000002 00003001 00009000 00000080Comment：        1536MB -&gt; 2048MB for HD4200_4400_4600 Mobile</code></pre><blockquote><p>HD620 Mobile：</p></blockquote><pre><code>Name：           AppleIntelKBLGraphicsFramebufferFind：           01030303 00002002 00000000 00000060Replace：        01030303 00002002 00000000 00000080 Comment：        1536MB -&gt; 2048MB for HD620 Mobile</code></pre><blockquote><p>HD630 Mobile：</p></blockquote><pre><code>Name：           AppleIntelKBLGraphicsFramebufferFind：           01030303 00006002 00005001 00000060Replace：        01030303 00006002 00005001 00000080Comment：        1536MB -&gt; 2048MB for HD630 Mobile</code></pre><blockquote><p>HD520_530_540 Mobile：</p></blockquote><pre><code>Name：           AppleIntelSKLGraphicsFramebufferFind：           01030303 00002002 00005001 00000060Replace：        01030303 00002002 00005001 00000080Comment：        1536MB -&gt; 2048MB for HD520_530_540 Mobile</code></pre><blockquote><p>HD5500 Mobile：</p></blockquote><pre><code>Name：           AppleIntelBDWGraphicsFramebuffer find：           01030303 00002002 00005001 00000060Replace：        01030303 00002002 00005001 00000080Comment：        1536MB -&gt; 2048MB for HD5500 Mobile</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 显存 </tag>
            
            <tag> FB </tag>
            
            <tag> 花屏 </tag>
            
            <tag> Framebuffer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 修改帐户名、主机名和计算机名</title>
      <link href="/How-to-change-your-username-on-your-mac.html"/>
      <url>/How-to-change-your-username-on-your-mac.html</url>
      
        <content type="html"><![CDATA[<h3 id="帐户信息修改"><a href="#帐户信息修改" class="headerlink" title="帐户信息修改"></a>帐户信息修改</h3><pre><code>System Preferences &gt; Users &amp; Groups &gt; 右单击当前用户 &gt; Advanced Options</code></pre><p><em>注意：用了一段时间的电脑不建议修改，可能会导致很多软件要重新安装。</em></p><h3 id="主机名修改"><a href="#主机名修改" class="headerlink" title="主机名修改"></a>主机名修改</h3><pre><code>$ sudo scutil --set HostName MacBookPro</code></pre><h3 id="计算机名修改"><a href="#计算机名修改" class="headerlink" title="计算机名修改"></a>计算机名修改</h3><pre><code>$ sudo scutil --set ComputerName MacBookPro</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 账户名 </tag>
            
            <tag> 主机名 </tag>
            
            <tag> 计算机名 </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0-1背包问题</title>
      <link href="/0-1-backpack.html"/>
      <url>/0-1-backpack.html</url>
      
        <content type="html"><![CDATA[<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  algorithm</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by athlonreg on 17/01/2018.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 athlonreg. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> n 5</span><span class="token macro property">#<span class="token directive keyword">define</span> c 10</span><span class="token keyword">int</span> weight<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span> value<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> m1<span class="token punctuation">,</span>m2<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">>=</span>weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">&lt;</span>weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>    m1<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>    m2<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token operator">-</span>weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> m1<span class="token operator">></span>m2<span class="token operator">?</span>m1<span class="token punctuation">:</span>m2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypv22cywpj32c01fewvf.jpg" alt=""></p><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><pre><code>////  main.c//  algorithm////  Created by athlonreg on 17/01/2018.//  Copyright © 2018 athlonreg. All rights reserved.//#include &lt;stdio.h&gt;#define n 5#define c 10int weight[n]={2,2,6,5,4}, value[n]={6,3,5,4,6};int main(int argc, const char * argv[]) {    int s[n][c+1];    int i,j;    for(j=0;j&lt;=c;j++){        if(j&gt;weight[n-1])            s[n-1][j]=value[n-1];        else            s[n-1][j]=0;    }    for(i=n-2;i&gt;=0;i--){        for(j=0;j&lt;=c;j++){            if(j&lt;weight[i])                s[i][j]=s[i+1][j];            else                s[i][j]=s[i+1][j]&gt;(s[i+1][j-weight[i]]+value[i])?s[i+1][j]:(s[i+1][j-weight[i]]+value[i]);        }    }    printf("%d\n",s[0][c]);    return 0;}</code></pre><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypv4po8i8j32c01fetpm.jpg" alt=""></p><h3 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h3><pre><code>////  main.c//  algorithm////  Created by athlonreg on 17/01/2018.//  Copyright © 2018 athlonreg. All rights reserved.//#include &lt;stdio.h&gt;#define n 5#define c 10int weight[n]={2,2,6,5,4}, value[n]={6,3,5,4,6};int maxvalue, tempvalue, tempweight;void traceback(int t){    if(t==n){        if(tempvalue&gt;maxvalue)            maxvalue=tempvalue;        return;    }    if(tempweight+weight[t]&lt;=c){        tempweight+=weight[t];        tempvalue+=value[t];        traceback(t+1);        tempweight-=weight[t];        tempvalue-=value[t];    }    traceback(t+1);}int main(int argc, const char * argv[]) {    traceback(0);    printf("%d\n",maxvalue);    return 0;}</code></pre><h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fyq1iqgsbfj32c01fedwn.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 0-1背包问题 </tag>
            
            <tag> algorithm </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n 皇后问题</title>
      <link href="/n-queen.html"/>
      <url>/n-queen.html</url>
      
        <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  algorithm</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by athlonreg on 17/01/2018.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 athlonreg. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> n 8</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">judge</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>n<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>t<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>t<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%3d"</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        a<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">judge</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">traceback</span><span class="token punctuation">(</span>t<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypy499b85j32c01fewv3.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> 算法 </tag>
            
            <tag> n皇后问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵连乘问题</title>
      <link href="/RecurMatrix.html"/>
      <url>/RecurMatrix.html</url>
      
        <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  RecurMatrix</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by Canvas on 2018/12/31.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 Canvas. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> n 6</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">RecurMatrix</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>j<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> minvalue<span class="token operator">=</span><span class="token function">RecurMatrix</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">RecurMatrix</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>j<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> tempvalue<span class="token operator">=</span><span class="token function">RecurMatrix</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">RecurMatrix</span><span class="token punctuation">(</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tempvalue<span class="token operator">&lt;</span>minvalue<span class="token punctuation">)</span><span class="token punctuation">{</span>            minvalue<span class="token operator">=</span>tempvalue<span class="token punctuation">;</span>            b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>k<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> minvalue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>j<span class="token punctuation">)</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token function">traceback</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">traceback</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"A[%d-%d]*A[%d-%d]\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">RecurMatrix</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypywc48exj32c01fe7ml.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> 算法 </tag>
            
            <tag> 矩阵连乘问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/BinarySearch.html"/>
      <url>/BinarySearch.html</url>
      
        <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  algorithm</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by athlonreg on 17/01/2018.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 athlonreg. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> n 5</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">BinarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> low<span class="token punctuation">,</span> <span class="token keyword">int</span> high<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> mid<span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">==</span>k<span class="token punctuation">)</span>            <span class="token keyword">return</span> mid<span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">></span>k<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token function">BinarySearch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> low<span class="token punctuation">,</span> mid<span class="token number">-1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token keyword">return</span> <span class="token function">BinarySearch</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> high<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">BinarySearch</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token number">-1</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypvgc3ii4j32701f64fp.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> 算法 </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clover ACPI hotpatch</title>
      <link href="/Clover-ACPI-hotpatch.html"/>
      <url>/Clover-ACPI-hotpatch.html</url>
      
        <content type="html"><![CDATA[<h2 id="Preface–序言"><a href="#Preface–序言" class="headerlink" title="Preface–序言"></a>Preface–序言</h2><p>This blog is created by me to introduce how to using Clover to hotpatch ACPI，and provide an Chinese version。</p><blockquote><p>我写这篇博客是为了介绍如何使用<code>Clover</code>对<code>ACPI</code>使用<code>hotpatch</code>，并翻译原贴提供中文参考帖。</p></blockquote><h2 id="Brief-description-for-hotpatch–hotpatch概要"><a href="#Brief-description-for-hotpatch–hotpatch概要" class="headerlink" title="Brief description for hotpatch–hotpatch概要"></a>Brief description for hotpatch–<code>hotpatch</code>概要</h2><p>In RehabMan’s GitHub homepage, a repository named <code>OS-X-Clover-Laptop-Config</code> Contains some Clover <code>config.plist</code> for common Intel graphics and hotpatch for common configurations.More information in <a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener external nofollow noreferrer">here</a>.</p><blockquote><p><code>RehabMan</code>的<code>GitHub</code>有一个仓库–<code>OS-X-Clover-Laptop-Config</code>,里面包含了一些适用于常见的英特尔核芯显卡的<code>config.plist</code>,还有<code>hotpatch</code>。点击<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener external nofollow noreferrer">这里</a>了解更多。</p></blockquote><p>There are some handy SSDTs for use with Clover ACPI hotpatch (in conjunction with hotpatch/config.plist) If you understand ACPI, you may find the SSDTs and hotpatch/config.plist quite useful.</p><blockquote><p>这儿有许多针对使用Clover ACPI hotpatch(连同使用hotpatch/config.plist)的SSDT。如果你理解了ACPI，你会发现这些<code>SSDT</code>和<code>hotpatch/config.plist</code>相当重要。</p></blockquote><p>Read here for the hotpatch guide: <a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p><blockquote><p>这里是<code>hotpatch</code>的‘入门引导贴。<br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p></blockquote><h2 id="A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要"><a href="#A-brief-description-of-each-hotpatch-SSDT-is-provided-below–下面是每一个-hotpatch-SSDT-的概要" class="headerlink" title="A brief description of each hotpatch SSDT is provided below–下面是每一个 hotpatch SSDT 的概要"></a>A brief description of each hotpatch SSDT is provided below–下面是每一个 <code>hotpatch SSDT</code> 的概要</h2><p><code>SSDT-Config.dsl</code>: This file provides configuration data for other SSDTs. Read the comments within the file for more information.</p><blockquote><p><code>SSDT-Config.dsl</code>:这个文件为其他<code>SSDT</code>提供参数。请阅读文件中的注释以获得更多信息。</p></blockquote><p><code>SSDT-Debug.dsl</code>: This SSDT is for use with ACPIDebug.kext. Instead of patching your DSDT to add the RMDT device, you can use this SSDT and refer to the methods with External. See ACPIDebug.kext documentation for more information regarding the RMDT methods.</p><blockquote><p>这个<code>SSDT</code>和<code>ACPIDebug.kext</code>一起使用。不需要对你的<code>DSDT</code>打补丁增加<code>RMDT</code>设备，你可以使用这个<code>SSDT</code>通过<code>External</code>导入这个方法。关于<code>RMDT</code>方法，要了解更多请参阅<code>ACPIDebug.kext</code>文档。</p></blockquote><p><code>SSDT-XOSI.dsl</code>: This SSDT provides the XOSI method, which is a replacement for the system provided _OSI object when the _OSI-&gt;XOSI patch is being used. This is actually one of the examples in the Clover ACPI hotpatch guide, linked above.</p><blockquote><p>这个<code>SSDT</code>提供了<code>XOSI</code>方法，当打了<code>_OSI-&gt;XOSI</code>补丁时，<code>XOSI</code>方法会替换系统提供的<code>_OSI</code>对象。实际上，这就是<code>Clover ACPI hotpatch</code>入门参考帖的一个例子，链接在下面。</p></blockquote><p>SSDT-IGPU.dsl This SSDT injects Intel GPU properties depending on the configuration data in SSDT-Config and the device-id that is discovered to be present on the system. It assumes the IGPU is named IGPU (typical is GFX0, requring GFX0-&gt;IGPU rename). Configured with RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml.</p><blockquote><p>这个<code>SSDT</code>根据<code>SSDT-config</code>的配置数据和系统中发现的设备id注入了Intel GPU–核芯显卡属性。它假定<code>IGPU</code>被命名成<code>IGPU</code>(通常是<code>GFX0</code>，需要重命名<code>GFX0-&gt;IGPU</code>)。通过<code>RMCF.TYPE, RMCF.HIGH, RMCF.IGPI, and SSDT-SkylakeSpoof.aml</code>来配置。</p></blockquote><p><code>SSDT-SkylakeSpoof.aml</code>: This SSDT is an optional SSDT that can be paired with SSDT-IGPU.dsl. When present, SSDT-IGPU uses the data within as an override for various KabyLake graphics devices which spoofs those devices as Skylake. Prior to 10.12.6, Skylake spoofing is the only option for KabyLake graphics. And even with 10.12.6 (or later, including 10.13.x), it still may be useful to spoof KabyLake graphics as Skyake. Keep in mind complete Skylake spoofing requires FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext.</p><blockquote><p>这个<code>SSDT</code>是一个可选的<code>SSDT</code>,它可以配合<code>SSDT-IGPU.dsl</code>使用。<code>SSDT-IGPU</code>使用这些数据对<code>KabyLake</code>图形设备的数据进行覆盖重写，把<code>KabyLake</code>仿冒成<code>Skylake</code>。10.12.6之前,<code>KabyLake</code>只有仿冒成’SkyLake’驱动核显，即使在10.12.6之后(或者更新的版本，包括10.13.x)，将<code>KabyLake</code>仿冒成’SkyLake’仍然是很有用的，需要注意的是完整的仿冒需要<code>FakePCIID.kext + FakePCIID_Intel_HD_Graphics.kext</code>。</p></blockquote><p><code>SSDT-IMEI.dsl</code>: This SSDT injects fake device-id as required for IMEI when using mixed HD3000/7-series or HD4000/6-series. Be sure to read the comments within carefully, as customization is required if your system already has an IMEI identity in ACPI.</p><blockquote><p>当使用混合的hd3000/7系或hd4000/6系时，该SSDT为IMEI注入了仿冒的设备id。一定要仔细阅读注释，因为如果您的系统已经在ACPI中有了IMEI标识，那么就需要进行定制。</p></blockquote><p><code>SSDT-PNLF.dsl</code>: This SSDT injects a PNLF device that works with IntelBacklight.kext or AppleBacklight.kext. Configured with RMCF.BKLT, RMCF.LMAX, RMCF.FBTP. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/</a></p><blockquote><p>这个SSDT注入了一个<code>PNLF</code>设备，它可以与<code>IntelBacklight.kext</code> 或者<code>AppleBacklight.kext</code>一起工作。通过<code>RMCF.BKLT</code> ,<code>RMCF.LMAX</code> <code>RMCF.FBTP</code>。更多信息参见指南:</p></blockquote><p><code>SSDT-LPC.dsl</code>:This SSDT injects properties to force AppleLPC to load for various unsupported LPC device-ids. It assumes the LPC device is named LPCB.</p><blockquote><p>这个SSDT:注入属性以强制<code>AppleLPC</code>加载各种不支持的<code>LPC</code>设备id。需要<code>LPC</code>设备被命名为<code>LPCB</code>。</p></blockquote><p><code>SSDT-SATA.dsl</code>: This SSDT injects properties (fake device-id, compatible) to enable the SATA controller with certain unsupported SATA controllers. It assumes the SATA device is named SATA (typical is SAT0, thus requiring SAT0-&gt;SATA rename).</p><blockquote><p>这个SSDT注入了一些属性(仿冒的设备id，兼容的)，以使某些不受支持的<code>SATA</code>控制器启用<code>SATA</code>控制器。它假设<code>SATA</code>设备被命名为<code>SATA</code>(常见的是<code>SAT0</code>，因此需要<code>SAT0-SATA</code>重命名)。</p></blockquote><p><code>SSDT-Disable_DGPU.dsl</code>: This SSDT provides an _INI method that will call _OFF for a couple of common paths for a discrete GPU in a switched/dual GPU scenario. This SSDT can work to disable the Nvidia or AMD graphics device, if the path matches (or is modified to math) and your _OFF method code path has no EC related code. Refer to the hotpatch guide for a complete example.</p><blockquote><p>这个SSDT提供了一个<code>INI</code>方法，它将在可切换的/双<code>GPU</code>中为独立显卡提供一些通用的路径来调用<code>_OFF</code>。如果路径匹配(或被自定义来匹配)而且你的<code>_OFF</code>方法代码路径则没有与<code>EC</code>相关的代码，那么这个<code>SSDT</code>可以禁用<code>Nvidia</code>或<code>AMD</code>图形设备。有关一个完整的示例，请参阅热补丁指南。</p></blockquote><p><code>SSDT-SMBUS.dsl</code>:This SSDT injects the missing DVL0 device. Mostly used with Sandy Bridge and Ivy Bridge systems.</p><blockquote><p>这个SSDT注入了丢失的<code>DVL0</code>设备。主要用于<code>Sandy Bridge</code>和<code>Ivy Bridge</code>平台。</p></blockquote><p><code>SSDT-GPRW.dsl</code> and <code>SSDT-UPRW.dsl</code>: These SSDTs is used in conjuction with the GPRW-&gt;XPRW or UPRW-&gt;XPRW patch. Used together this SSDT can fix “instant-wake” by disabling “wake on USB”. It overrides the _PRW package return for GPE indexes 0x0d or 0x6d. Potential companion patches are provided in hotpatch/config.plist</p><blockquote><p>这些SSDT与<code>GPRW-XPRW</code>或<code>UPRW-XPRW</code>补丁一起使用。通过使用这些<code>SSDT</code>，可以通过禁用<code>wake on USB</code>来修复<code>instant wake</code>。它重写了<code>GPE</code>的索引<code>0x0d</code>或<code>0x6d</code>的<code>PRW</code>包返回值。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-LANC_PRW.dsl</code>: Also part of fixing “instant wake”, but this is for _PRW on the Ethernet device. Potential companion patches are provided in hotpatch/config.plist.</p><blockquote><p>这也是修复<code>instant wake</code>的一部分，但这是在以太网设备上进行修复的。在<code>hotpatch</code>/<code>config.plist</code>中提供了潜在的伙伴补丁。</p></blockquote><p><code>SSDT-PTSWAK.dsl</code>: This SSDT provides overrides for both _PTS and _WAK. When combined with the appropriate companion patches from hotpatch/config.plist, these methods can provide various fixes. The actions are controlled by RMCF.DPTS, RMCF.SHUT, RMCF.XPEE, RMCF.SSTF. Refer to SSDT-Config.dsl for more information on those options.</p><blockquote><p>这个SSDT提供了对<code>_PTS</code>和<code>_WAK</code>的重写。当与来自<code>hotpatch</code>/<code>config.plist</code>的适当的补丁相结合使用时，这些方法可以提供一系列的修复。这些行为是由<code>RMCF.DPTS</code>, <code>RMCF.SHUT</code>,<code>RMCF.XPEE</code>,<code>RMCF.XPEE</code> ,<code>RMCF.SSTF</code>.更多关于这些选项的信息参阅<code>SSDT-Config</code>。</p></blockquote><p><code>SSDT-Disable_EHCI.dsl</code>: This SSDT can disable both EHCI controllers. It is assumed both have been renamed to EH01/EH02 (typically original names are EHC1/EHC2).</p><blockquote><p>这个SSDT可以禁用<code>EHCI</code>控制器。要求这两种情况都被重新命名为<code>EH01/EH02</code>(通常原来的名字是<code>EHC1/EHC2</code>).</p></blockquote><p><code>SSDT-Disable_EH01.dsl</code>, <code>SSDT-Disable_EH02.dsl</code>: Each of these SSDTs is just SSDT-Disable_EHCI.dsl broken down to only disable EH01 or only EH02. Use as appropriate depending on which EHCI controllers are active/present in your ACPI set.</p><blockquote><p>这些SSDT每一个都是<code>SSDT-Disable_EHCI.dsl</code>分解的，仅仅用以禁用<code>EH01</code>或<code>EH02</code>。取决于在你的<code>ACPI</code>集合中使用哪个<code>EHCI</code>控制器是合适的。</p></blockquote><p><code>SSDT-XWAK.dsl</code>, <code>SSDT-XSEL.dsl</code>, <code>SSDT-ESEL.dsl</code>: Each of these SSDTs provides an empty XWAK, XSEL, and ESEL methods (respectively). Use with the appropriate companion patch from hotpatch/config.plist. Typically, these methods are disabled (by having no code in them) to disable certain actions native ACPI may be doing on wake from sleep or during startup that cause problems with the xHCI/EHCI configuration.</p><blockquote><p>这些SSDT分别提供了一个空的<code>XWAK</code>、<code>XSEL</code>和<code>ESEL</code>方法(独立地)。配合<code>hotpatch/config.plist</code>中适当的补丁一起使用。通常情况下，这些方法被禁用(因为在它们中没有代码)，以禁用本地<code>ACPI</code>可能在唤醒睡眠或在启动时导致<code>xHCI/EHCI</code>i配置问题的某些动作。</p></blockquote><p><code>SSDT-PluginType1.dsl</code>: This SSDT injects “plugin-type”=1 on CPU0. It assumes ACPI Processor objects are in Scope(_PR). It can be used to enable native CPU power management on Haswell and later CPUs. See guide for more information: <a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p><blockquote><p>这个SSDT在<code>CPU0</code>注入<code>“plugin-type”=1</code>。它要求<code>ACPI</code>处理器对象在<code>Scope(_PR)</code>范围内。它可以用于在<code>Haswell</code>和更新的<code>CPU</code>启用原生电源管理。更多信息见指南：<a href="https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/</a>.</p></blockquote><p><code>SSDT-HDEF.dsl</code> and <code>SSDT-HDAU.dsl</code>: Injects layout-id, hda-gfx, and PinConfiguration properties on HDEF and HDAU in order to implement audio with patched AppleHDA.kext Configured with: RMCF.AUDL.</p><blockquote><p>在<code>HDEF</code>和<code>HDAU</code>上注入<code>layout-id</code>、<code>hda-gfx</code>和<code>PinConfiguration</code>属性，以通过对<code>AppleHDA</code>的<code>patch</code>实现音频。通过<code>RMCF.AUDL</code>配置.</p></blockquote><p><code>SSDT-EH01.dsl</code>,<code>SSDT-EH02.dsl</code>, and <code>SSDT-XHC.dsl</code>:These SSDTs inject USB power properties and control over FakePCIID_XHCIMux (dending on SSDT-Disable_EH*.dsl).</p><blockquote><p>这些SSDT注入<code>USB</code>电源属性并通过<code>FakePCIID_XHCIMux</code>控制(取决于<code>SSDT-Disable_EH*.dsl</code>)。</p></blockquote><p><code>SSDT-ALS0.dsl</code>: Injects a fake ALS device (ambient light sensor). This SSDT is used to fix problems with restoring brightness upon reboot.</p><blockquote><p>注入仿冒<code>ALS</code>设备(环境光传感器)。这个<code>SSDT</code>用于修复重新启动时还原亮度的问题。</p></blockquote><h2 id="Introduction-说明文档"><a href="#Introduction-说明文档" class="headerlink" title="Introduction-说明文档"></a>Introduction-说明文档</h2><p>Patching ACPI is always necessary to enable (near) full functionality when installing OS X on non-Apple hardware.</p><blockquote><p>在非苹果硬件上安装OS X时，修补<code>ACPI</code>以启用(接近)完整的功能总是必要的。</p></blockquote><p>There is a complete guide here: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener external nofollow noreferrer">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p><blockquote><p>这里有一个完整的指南: <a href="http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener external nofollow noreferrer">http://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/</a></p></blockquote><p>That guide uses what is known as “static patching”. In order to inject patched ACPI files, we extract native ACPI, disassemble them, make changes, then recompile and place the files in ACPI/patched, so that Clover injects the patched ACPI instead of native ACPI. With the techniques detailed in this guide, the changes can be made directly to the ACPI binaries provided by BIOS, skipping the extract, disassembly, and recompilation steps.</p><blockquote><p>该指南使用了所谓的“静态补丁”。为了注入打了补丁的<code>ACPI</code>文件，我们提取本地的ACPI，将它们反编译，进行修改，然后重新编译，并将文件放在<code>ACPI/patched</code>中，这样Clover就注入了打过补丁的<code>ACPI</code>，而不是原生的<code>ACPI</code>。通过本指南中详细介绍的技术，可以直接对<code>BIOS</code>提供的<code>ACPI</code>二进制文件进行更改，跳过提取、分解和重新编译步骤。</p></blockquote><p>You should have a solid understanding of static ACPI patching before attempting to hotpatch. You should also have an understanding of the ACPI spec, binary patching, programming, and ACPI concepts. Don’t expect step-by-step and spoon feeding in this thread.</p><blockquote><p>在尝试<code>hotpatch</code>之前，你应该对静态的<code>ACPI</code>补丁有一定的了解。你还应该了解<code>ACPI</code>规范、二进制补丁、语法和<code>ACPI</code>概念。不要指望在这个过程中循序渐进地学习。</p></blockquote><h3 id="Clover-mechanisms-Clover机制"><a href="#Clover-mechanisms-Clover机制" class="headerlink" title="Clover mechanisms-Clover机制"></a>Clover mechanisms-<code>Clover</code>机制</h3><p>Clover provides a few methods for accomplishing ACPI hotpatch:</p><blockquote><p>Clover提供了一些新的方法来实现<code>ACPI hotpatch</code>.</p></blockquote><ul><li>config.plist/ACPI/DSDT/Fixes</li><li>config.plist/ACPI/DSDT/Patches</li><li>ability to inject additional SSDTs</li></ul><p><code>DSDT/Fixes</code> provide fixed function ACPI patching. Each “Fix” can do a particular kind of patching that can be used instead of typical patching you might do with MaciASL and static patching. For example, “IRQ Fix” can be accomplished with “FixHPET_0010” “FixIPIC_0040” “FIX_RTC_20000” and “FIX_TMR_40000”. As an other example, “Fix _WAK Arg0 v2” can be accomplished with “FIX_WAK_200000”. You can read the Clover wiki for more information on each patch. Most of the time, there are not many DSDT “Fixes” needed for basic functionality. DSDT “Fixes” are useful for implementing patches that are difficult or impossible to implement with ACPI/DSDT/Patches or additional SSDTs.</p><blockquote><p><code>DSDT/Fixes</code>提供了具有修复功能的<code>ACPI</code>补丁。每一个<code>Fix</code>都可以使用一种特殊的补丁，从而不需要你使用<code>MaciASL</code>和静态补丁。例如，<code>IRQ Fix</code>可以用<code>FixHPET_0010</code>、<code>FixIPIC_0040</code>、<code>FIX_RTC_20000</code>和<code>FIX_TMR_40000</code>来完成。再举一个例子，<code>Fix _WAK Arg0 v2</code>可以用<code>FIX_WAK_200000</code>来完成。对于每个补丁阅读<code>Clover wiki</code>以获得更多信息。大多数情况下，基本功能所需的DSDT<code>Fix</code>并不多。对于用<code>ACPI/DSDT/Patches</code>或附加的<code>SSDT</code>很难实现甚至不可能实现的补丁,利用DSDT<code>Fixes</code>实现非常有用。</p></blockquote><p>DSDT/Patches allows for binary search and replace by Clover. Clover loads the native ACPI files, applies the patches specified in ACPI/Patches using binary search/replace, then injects the patched ACPI. You need to have an understanding of the binary AML format. It is fully documented in the ACPI spec.</p><blockquote><p><code>DSDT/Patches</code>允许通过<code>Clover</code>对二进制进行查找并替换。<code>Clover</code>加载本地的<code>ACPI</code>文件，在<code>ACPI/Patches</code>中使用二进制查找替换以应用指定的补丁，然后注入打过补丁的<code>ACPI</code>。您需要了解二进制<code>AML</code>格式。它在<code>ACPI</code>规范中有完整的文档记录。</p></blockquote><p>ACPI namespace is built by merging the DSDT and SSDTs at load time. By placing additional SSDTs into ACPI/patched, we can essentially add code to this ACPI set. Since many OS X patches involve adding properties to ioreg with a _DSM method, it is often adequate to simply add an SSDT which contains the additional _DSM method instead of patching the native ACPI files. A perfect example you’re already familiar with is the SSDT.aml that is generated by Pike’s ssdtPRgen.sh.</p><blockquote><p>ACPI命名空间在加载时通过合并<code>DSDT</code>和<code>SSDT</code>构建。通过将额外的<code>SSDT</code>放到<code>ACPI/patched</code>,我们可以添加代码到<code>ACPI</code>集。因为许多<code>OS X</code>补丁涉及<code>_DSM</code>方法添加属性到<code>ioreg</code> ,通常是适当的<code>SSDT</code>包含额外的一个<code>_DSM</code>方法而不是对本地<code>ACPI</code>文件打补丁。你已经熟悉的一个很好的例子是<code>Pike</code>的<code>ssdtprgensh.sh</code>脚本生成的<code>SSDT.aml</code>。</p></blockquote><p>In some cases, more than one mechanism must be used to accomplish a single goal. For example, you might use binary patching to disable or rename components in the native ACPI set, and then replace it with additional SSDTs.</p><blockquote><p>在某些情况下，必须使用不止一个机制来完成某一个目标。例如，你可能使用二进制补丁来禁用或重命名本地<code>ACPI</code>集合中的组件，然后用额外的<code>SSDT</code>替换它。</p></blockquote><h3 id="Renaming-ACPI-objects-重命名ACPI对象"><a href="#Renaming-ACPI-objects-重命名ACPI对象" class="headerlink" title="Renaming ACPI objects-重命名ACPI对象"></a>Renaming ACPI objects-重命名<code>ACPI</code>对象</h3><p>Since OS X can depend on specific ACPI object names used by Macs, a common patch is to rename an object in the native ACPI set. For example, most PC laptops use GFX0 for the integrated Intel GPU object (Intel HD Graphics). In OS X, power management for Intel graphics is not enabled unless this device is named IGPU. Using static patching, we apply “Rename IGPU to GFX0” in order to rename this object. The patch must be applied to the DSDT and all SSDTs that reference it.</p><blockquote><p>由于<code>OS X</code>可以依赖于<code>Mac</code>所使用的特定的<code>ACPI</code>对象名称，一个常见的补丁是在本地的ACPI集合中重命名一个对象，例如，大多数<code>PC</code>笔记本使用<code>GFX0</code>作为集成的<code>Intel GPU</code>对象(<code>Intel HD</code>显卡)。在<code>OS X</code>中，除非这个设备被命名为<code>IGPU</code>，否则英特尔图形的电源管理是不能启用的。使用静态补丁，我们应用<code>Rename IGPU to GFX0</code>来重命名这个对象。这个补丁必须应用到<code>DSDT</code>和所有有引用<code>GFX0</code>的<code>SSDT</code>上。</p></blockquote><p>With hotpatch, we can rename GFX0 to IGPU using a simple Clover patch in ACPI/DSDT/Patches. Such patches apply to DSDT and all native SSDTs (DSDT/Patches do not apply to SSDTs that are added via ACPI/patched). The patch for the rename would be:</p><blockquote><p>使用<code>hotpatch</code>，我们可以在<code>ACPI/DSDT/Patches</code>使用一个简单的四叶草补丁将<code>GFX0</code>重命名为<code>IGPU</code>。这些补丁适用于<code>DSDT</code>和所有本地的<code>SSDTs</code>(<code>(DSDT/Patches</code>不能被应用到通过<code>ACPI/patched</code>添加的<code>SSDT</code>)。重命名的补丁是:</p></blockquote><pre><code>Comment: Rename GFX0 to IGPUFind: &lt;4746 5830&gt;Replace: &lt;4947 5055&gt;</code></pre><p>The hex values in Find and Replaces are the ASCII codes for GFX0 and IGPU, respectively.</p><blockquote><p>查找和替换的十六进制值分别是<code>GFX0</code>和<code>IGPU</code>的<code>ASCII</code>码,分别是：</p></blockquote><pre><code>$ echo -n GFX0|xxd0000000: 4746 5830                                GFX0$ echo -n IGPU|xxd0000000: 4947 5055                                IGPU</code></pre><p>There are number of common renames, and most are in the config.plist that are part of my Clover/hoptpatch project:</p><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p><blockquote><p>有许多通用的重命名，而且很多都在<code>config.plist</code>里，这个<code>config.plist</code>是我的<code>Clover/hotpatch</code>项目的一部分:<a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch</a></p></blockquote><p>In fact, the hotpatch SSDTs that are part of the same project depend on the renames being implemented.</p><blockquote><p>事实上，这些<code>hotpach</code>的<code>SSDT</code>也是上面那个项目的一部分，并且它们要求这些重命名必须被实现。</p></blockquote><p>Common renames:</p><blockquote><p>通用的重命名：</p></blockquote><pre><code>GFX0 -&gt; IGPUSAT0 -&gt; SATAEHC1 -&gt; EH01EHC2 -&gt; EH02XHCI -&gt; XHCHECI -&gt; IMEIMEI -&gt; IMEILPC -&gt; LPCBHDAS -&gt; HDEFAZAL -&gt; HDEF</code></pre><p>Note: All ACPI identifiers are 4 characters. Shorter names are padded with underscore. So, for example, XHC is represented in the AML binary as XHC_, EC would be EC__, EC0 would be EC_, MEI would be MEI_, etc.</p><blockquote><p>注意：所有的<code>ACPI</code>标识符都是4个字符。较短的名字用下划线填充。例如，<code>XHC</code>在<code>AML</code>二进制文件中被表示为<code>XHC_</code>，<code>EC</code>是<code>EC__</code>，<code>EC0</code>是<code>EC0_</code>，<code>MEI</code>是<code>MEI_</code>，等等。</p></blockquote><h3 id="Removing-methods-移除方法"><a href="#Removing-methods-移除方法" class="headerlink" title="Removing methods-移除方法"></a>Removing methods-移除方法</h3><p>It is very difficult to remove ACPI objects, (methods, names, devices, etc) using Clover binary patches. Commonly, we must add _DSM methods to inject properties that describe various hardware properties. But added _DSM methods can conflict with existing _DSM methods that may already be in the native ACPI files. With static patching, “Remove _DSM methods” would be used.</p><blockquote><p>使用<code>Clover</code>二进制补丁来移除<code>ACPI</code>对象(方法、名称、设备等等)是非常困难的。通常，我们必须添加<code>_DSM</code>方法来注入各种描述硬件属性的属性。但是，添加<code>_DSM</code>方法可能与本地<code>ACPI</code>文件现有的<code>_DSM</code>方法冲突。这时，就会用到静态补丁<code>Remove _DSM methods</code>。</p></blockquote><p>Since it is difficult to remove the methods, but we don’t want the native methods to conflict with new _DSM methods that are added, the fix is to rename the native methods to something else.</p><blockquote><p>由于很难删除这些方法，但是我们又不希望本地方法与添加的新<code>_DSM</code>方法相冲突，所以就将本地方法重命名为其他名字来修复这个问题。</p></blockquote><p>So… again, we use a simple rename patch:</p><blockquote><p>那么…同样地，我们使用一个简单的重命名补丁:</p></blockquote><pre><code>Comment: Rename _DSM to XDSMFind: &lt;5f44534d&gt;Replace: &lt;5844534d&gt;</code></pre><p>Sometimes, you might rename an object to effectively disable it so it does not cause problems. For example, my Intel DH67GD DSDT defines an APSS object. If this object is left in the DSDT it interferes with power management (causes panic). I use a rename from APSS -&gt; APXX. Because AppleIntelCPUPowerManagement is looking for APSS, it does not cause a problem once renamed to APXX.</p><blockquote><p>有时，你可能会重命名一个对象，以便有效地禁用它，这样它就不会造成问题。例如，我的<code>Intel DH67GD</code>的 <code>DSDT</code>定义了<code>APSS</code>对象。如果这个对象留在<code>DSDT</code>中，它会干扰电源管理(引起<code>KP</code>)。我使用<code>APSS-&gt;APXX</code>的重命名。因为<code>AppleIntelCPUPowerManagement</code>会查找<code>APSS</code>,只要改名为<code>APXX</code>就不会引起问题。</p></blockquote><h3 id="Redirect-and-Replace-重定向和替换"><a href="#Redirect-and-Replace-重定向和替换" class="headerlink" title="Redirect and Replace-重定向和替换"></a>Redirect and Replace-重定向和替换</h3><p>In some cases, we would like to replace code to change the behavior. For this, we can rename the object and provide an alternate implementation in an SSDT.</p><blockquote><p>在某些情况下，我们希望替换代码来改变某些动作。为此，我们可以重命名这个对象，并在<code>SSDT</code>中提供一个用来替代的对象以达到目的。</p></blockquote><p>A common fix is spoofing the ACPI code in DSDT and SSDTs such that it behaves as if a certain version of Windows is the ACPI host. When static patching, we might use “OS Check Fix (Windows 8)”. When applied, it changes code from:</p><blockquote><p>一个常见的修复是在<code>DSDT</code>和<code>SSDT</code>中仿冒<code>ACPI</code>代码，使其表现得就像是<code>ACPI</code>主机的某个版本的<code>Windows</code>一样。当利用静态补丁时，我们可能会使用<code>OS Check Fix (Windows 8)</code>。当应用这个补丁时，它会将代码从:</p></blockquote><pre><code>If (_OSI("Windows 2012"))</code></pre><p>To:</p><blockquote><p>改为：</p></blockquote><pre><code>If (LOr(_OSI("Darwin"),_OSI("Windows 2012"))</code></pre><p>Since the _OSI implementation in OS X only responds to “Darwin” the code is changed so that this specific _OSI check also accomodates “Darwin”.</p><blockquote><p>由于<code>OS X</code>中<code>_OSI</code>方法的实现只对被修改了代码的<code>Darwin</code>作出响应，所以这个特定的<code>_OSI check</code>补丁也能响应<code>Darwin</code>。</p></blockquote><p>With hotpatching, the opposite approach is taken. Instead of changing the code using _OSI, we change the code so it calls a different method that emulates the _OSI implementation that would be in the Windows ACPI host.</p><blockquote><p>而热补丁则采用相反的方法，我们不使用<code>_OSI</code>修改代码，而是改变代码让它调用一种不同的方法来模拟在<code>Windows ACPI</code>主机上的<code>_OSI</code>实现。</p></blockquote><p>This technique relies on two of the techniques… a patch to change all calls from _OSI to XOSI… and an implementation of XOSI that emulates what Windows would do for a certain Windows version.</p><blockquote><p>这项技术依赖于两种技术，一个补丁来改变从<code>_OSI</code>到<code>XOSI</code>的所有调用。另一个是<code>XOSI</code>的实现，即模拟<code>Windows</code>对某个<code>Windows</code>版本的操作。</p></blockquote><p>First, changing the code to call XOSI instead of _OSI:</p><blockquote><p>首先，改变代码来调用<code>XOSI</code>而不是<code>_OSI</code>:</p></blockquote><pre><code>Comment: Change _OSI to XOSIFind: &lt;5f4f 5349&gt;Replace: &lt;584f 5349&gt;</code></pre><p>The hex codes above should be no mystery (they are ASCII for _OSI and XOSI, respectively).</p><blockquote><p>上面的十六进制代码没有什么神秘的(它们分别是<code>_OSI</code>和<code>XOSI</code>的<code>ASCII</code>码)。</p></blockquote><p>Now the code mentioned above, after patching by Clover, will read:</p><blockquote><p>现在，上面提到的代码，在通过<code>Clover</code>打了补丁之后，将会读到:</p></blockquote><pre><code>If (XOSI("Windows 2012"))</code></pre><p>Now we need an SSDT that implements XOSI. You will find such an implementation in the repository (SSDT-XOSI.dsl).</p><blockquote><p>现在我们需要一个实现<code>XOSI</code>的<code>SSDT</code>。你可以我的<code>GitHub</code>仓库中找到这样的实现(SSDT-XOSI.dsl).</p></blockquote><p>Note that without the SSDT that implements the XOSI method, the (patched) calls to XOSI would cause an ACPI abort (ACPI abort causes execution of the ACPI method to be terminated immediately with an error). Don’t use the _OSI-&gt;XOSI patch without the XOSI method.</p><blockquote><p>注意，如果没有实现<code>XOSI</code>方法的<code>SSDT</code>，这个补丁对<code>XOSI</code>的调用将导致<code>ACPI</code>的加载被终止(<code>ACPI</code>中止导致<code>ACPI</code>方法的执行被错误立即终止)。如果没有<code>XOSI</code>方法不要使用<code>_OSI</code>-&gt;<code>XOSI</code>补丁。</p></blockquote><h3 id="Rename-and-Replace-重命名和替换"><a href="#Rename-and-Replace-重命名和替换" class="headerlink" title="Rename and Replace-重命名和替换"></a>Rename and Replace-重命名和替换</h3><p>A second pattern, similar to “Redirect and Replace” is “Rename and Replace”. In this case, instead of changing all the call sites, we change the method definition such that the method is named something different than it was originally, but leave the original method name at the call sites. This allows the method that is the target of the calls to be replaced.</p><p>For example, it is very common for USB devices to cause “instant wake”. As a work around, wake on USB can be disabled. Most laptops don’t have a BIOS option for it, so instead the _PRW methods that control this feature are patched.</p><p>For example, the native _SB.PCI0.EHC1._PRW method might read:</p><pre><code>Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake{    Return (GPRW (0x6D, 0x03))}</code></pre><p>In order to patch it so USB devices on EHCI#1 cannot cause wake, it would be changed:</p><pre><code>Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake{    Return (GPRW (0x6D, 0))}</code></pre><p>Usually, there are several such call sites to GPRW that need to be changed (also, keep in mind not all ACPI sets use the specific name GPRW). Instead of trying to patch all the call sites as above, we can instead patch the method definition of GPRW instead:</p><p>With the original code:</p><pre><code>Method (GPRW, 2, NotSerialized){   ...}</code></pre><p>If we change it to:</p><pre><code>Method (XPRW, 2, NotSerialized){   ...}</code></pre><p>Since you don’t want to change any call sites, the patch must be constructed such that it affects only the method itself and not the call sites. According to ACPI spec, a method definition starts with bytecode 14, is followed by the method size, the method name, argument count/flags. You can use the “-l” option in iasl to generate a mixed listing of your ACPI file. For example, the Lenovo u430 GPRW method mixed listing:</p><pre><code>4323:          Method (GPRW, 2, NotSerialized)00003F95:  14 45 08 47 50 52 57 02     ".E.GPRW."4324:          {4325:              Store (Arg0, Index (PRWP, Zero))00003F9D:  70 68 ..................    "ph"00003F9F:  88 50 52 57 50 00 00 ...    ".PRWP.."</code></pre><p>We could do a find replace using the method header bytes:</p><pre><code>Find: &lt;14 45 08 47 50 52 57 02&gt;Replace: &lt;14 45 08 58 50 52 57 02&gt;</code></pre><p>But what happens if the method differs slightly between different versions of BIOS or models that are similar, but not exactly the same? In that case, the byte following the 14 will change due to the change in the method length.</p><p>My thought is that the beginning of the method body is less likely to be different than the total length of the method, so it helps to add a few extra bytes from the body of the method to the find/replace specification:</p><pre><code>Find: &lt;47 50 52 57 02 70 68&gt;Replace: &lt;58 50 52 57 02 70 68&gt;</code></pre><p>The number of follow-on bytes that you use depends on how many you need to make the find/replace affect only the method definition. You can verify by looking at the native AML binary in a hex editor such as Hex Fiend (it is a nice hex editor and is also open source).</p><p>Note: Although you could search just for the method name + arg count/flags, it is possible that the same pattern will find a call site to the method which you don’t want to change. In the case of the u430 that wasn’t the case, so I was able to find/replace with just the method name+flags.</p><pre><code>Find: &lt;47505257 02&gt;Replace: &lt;58505257 02&gt;</code></pre><p>In the case of the ProBook UPRW, it was necessary to use the follow-on bytes that are part of the method body:</p><pre><code>Find: &lt;55505257 0a7012&gt;Replace: &lt;58505257 0a7012&gt;</code></pre><p>Now any code that calls GPRW (or UPRW in the ProBook example) will not call the implementation in XPRW because the name doesn’t match. The original XPRW is now unreachable code. Which means the GPRW implementation can be changed for our purpose:</p><pre><code>Method(GPRW, 2){    If (0x6d == Arg0) { Return(Package() { 0x6d, 0, }) }    External(\XPRW, MethodObj)    Return(XPRW(Arg0, Arg1))}</code></pre><p>Explaining the code: For any call to GPRW with the first argument set to 0x6d (the GPE we are trying to disable for wake), instead of returning what the original GPRW would, we return a package with 0x6d and 0 (which disables wake). And for other GPE values, the code simply calls the original GPRW method now named XPRW.</p><p>Another simple case is patching EC query methods to fix the brightness keys. A simple rename of the _Qxx methods involved to XQxx, and a new definition of the method with the original name is all that is needed.</p><p>For example, in the HP Envy Haswell repo:</p><pre><code>// _Q13 called on brightness/mirror display keyMethod (_Q13, 0, Serialized)  // _Qxx: EC Query{    External(\HKNO, FieldUnitObj)    Store(HKNO, Local0)    If (LEqual(Local0,7))    {        // Brightness Down        Notify(\_SB.PCI0.LPCB.PS2K, 0x0405)    }    If (LEqual(Local0,8))    {        // Brightness Up        Notify(\_SB.PCI0.LPCB.PS2K, 0x0406)    }    If (LEqual(Local0,4))    {        // Mirror toggle        Notify(\_SB.PCI0.LPCB.PS2K, 0x046e)    }}</code></pre><p>And the associated patch:</p><pre><code>Comment: change Method(_Q13,0,S) to XQ13Find: &lt;5f513133 08&gt;Replace: &lt;58513133 08&gt;</code></pre><p>This same “Rename and Replace” mechanism can be used in cases that are much more complex than this. For example, it is typically used to patch battery methods, which need to be patched to avoid access to multibyte EC fields.</p><h4 id="Tips-for-complex-Rename-and-Replace"><a href="#Tips-for-complex-Rename-and-Replace" class="headerlink" title="Tips for complex Rename and Replace"></a>Tips for complex Rename and Replace</h4><p>As you probably already know, patching for battery status (multibyte EC fields) can be very complex and can involve a lot of code changes to many methods.</p><p>This section will detail some of the techniques and procedures used for battery patching.</p><p>It is advisable to patch for battery without using hotpatch first. After you get it working, then attempt hotpatch. Also, the difference between the code not patched for battery and the code patched for battery is very helpful. You can use a tool like ‘diffmerge’ to compare each. This is especially true if there is already a static battery patch for your laptop in my laptop repository.</p><p>General procedure:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><p>An example is provided in post #2 of this thread.</p><h3 id="Code-value-patching"><a href="#Code-value-patching" class="headerlink" title="Code value patching"></a>Code value patching</h3><p>Consider the case of “Fix Mutex with non-zero SyncLevel”. This patch finds all Mutex objects and replaces the SyncLevel with 0. We use this patch since OS X does not support Mutex debugging correctly and aborts on any Acquire with a Mutex that has a non-zero SyncLevel.</p><p>As an example, the u430 has Mutexes delcared as such:</p><pre><code>Mutex (MSMI, 0x07)</code></pre><p>To make it compatible with OS X it must be changed:</p><pre><code>Mutex (MSMI, 0)</code></pre><p>The ACPI spec defines how a Mutex object is encoded in the AML, but it can be helpful to look at a mixed disassembly of a small ACPI file:</p><pre><code>DefinitionBlock ("", "DSDT", 2, "test", "test", 0){    Mutex(ABCD, 7)}</code></pre><p>The iasl compiler can create a mixed listing file with the “-l” option.</p><p>If we compile the above file with: iasl -l test.dsl, test.lst contains:</p><pre><code>       1:  DefinitionBlock ("", "DSDT", 2, "test", "test", 0)00000000:  44 53 44 54 2B 00 00 00     "DSDT+..."00000008:  02 36 74 65 73 74 00 00     ".6test.."00000010:  74 65 73 74 00 00 00 00     "test...."00000018:  00 00 00 00 49 4E 54 4C     "....INTL"00000020:  10 04 16 20 ............    "... "       2:  {       3:          Mutex(ABCD, 7)00000024:  5B 01 41 42 43 44 07 ...    "[.ABCD."       4:  }   </code></pre><p>As you can see, the <code>Mutex(ABCD, 7)</code>, is encoded as <code>&lt;5B 01 41 42 43 44 07&gt;</code></p><p>It is now very easy to construct a patch for it:</p><pre><code>Comment: Change Mutex(ABCD,7) to Mutex(ABCD,0)Find: &lt;5B 01 41 42 43 44 07&gt;Replace: &lt;5B 01 41 42 43 44 00&gt;</code></pre><h3 id="Clover-ACPI-configuration"><a href="#Clover-ACPI-configuration" class="headerlink" title="Clover ACPI configuration"></a>Clover ACPI configuration</h3><p>With static patching, DropOem=true is used and patched DSDT and SSDTs are added to ACPI/patched. With hotpatch, instead use DropOem=false, and only add-on SSDTs are placed in ACPI/patched.</p><p>It is important to note that config.plist/ACPI/patches are applied only to native SSDTs, and not the SSDTs in ACPI/patched. This means that if you are renaming objects using config.plist, the add-on SSDTs must refer to the new names, not the old names. Unlike SSDTs in ACPI/patched, binary patches in ACPI/Patches <em>do apply</em> to DSDT.aml that might be in ACPI/patched. Keep this in mind if you’re using a combination of static and hotpatching.</p><p>Also, with static patching, SortedOrder is used to specify the order of SSDTs in ACPI/patched. With hotpatch it is not strictly necessary as it is possible to construct the code in each SSDT such that the code is not order dependent. Especially if you place all add-on code in a single SSDT such as many of my laptop repo examples. Unless your add-on SSDTs are order dependent, you do not have to name each one in SortedOrder.</p><p>It is also not necessary to choose “numbered names” for each SSDT. Instead you can use meaningful names, such as “SSDT-USB.aml”, SSDT-XOSI.aml”, etc. Using numbers instead of meaningul names will just confuse you. Don’t do it.</p><h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><p>You can use patchmatic to look at your complete ACPI set as injected by Clover after patching. By runnning ‘patchmatic -extract’, patchmatic will write all injected DSDT.aml and SSDT*.aml in the order they were injected by Clover. You can disassemble them with ‘iasl -da -dl *.aml’. If iasl shows errors with the disassembly (for example duplicate symbols), it is likley OS X is also rejecting the conflicting SSDTs.</p><p>If you’re a novice with this technique, it is a good idea to implement one patch at a time, and slowly build it up to a full set of working patches + SSDTs. Trying to do all at once can make it difficult to locate your mistake.</p><h2 id="Battery-Status-Hotpatch"><a href="#Battery-Status-Hotpatch" class="headerlink" title="Battery Status Hotpatch"></a>Battery Status Hotpatch</h2><p>This second post is dedicated to patching battery status with Clover hotpatch. To demonstrate the process, we will work through an example DSDT. The example files used are from the guide for disabling discrete graphics, an “Asus UX303LN”.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As mentioned in post #1, the general procedures are as follows:</p><ul><li>start with native ACPI</li><li>patch for battery status using static patching (verify it works)</li><li>use diffmerge to compare the unpatched code with patched code</li><li>for each method that is different, implement the “Rename and Replace” pattern</li><li>for the EC fields, create another EC OperationRegion (use a name that is different from the original) and Field definition as a sort of “overlay” which contains only the EC fields you need to patch</li><li>to create the EC overlay, you can use the patched Field/OperationRegion in the patched DSDT, then eliminate unpatched fields</li><li>use External to allow the replacement methods in the SSDT to access the fields defined elsewhere in the ACPI set (usually DSDT)</li><li>let the compiler point out where you need to use External</li><li>watch out for symbols with duplicate names in different scopes</li></ul><h3 id="Using-diffmerge-to-find-patched-vs-native-differences"><a href="#Using-diffmerge-to-find-patched-vs-native-differences" class="headerlink" title="Using diffmerge to find patched vs. native differences"></a>Using diffmerge to find patched vs. native differences</h3><p>Start by disassembling the origin files: iasl -da -dl *.aml<br>(you should be familiar with this part as it is part of normal ACPI patching)</p><p>Next apply the battery patch only using MaciASL to DSDT.dsl. In this case, we apply the “ASUS N55SL/VivoBook”. There is no need to fix any errors, as we are interested only in the differences created by applying the battery patch. Save the patched file as DSDT_patched.dsl.</p><p>Now you can run diffmerge to see the differences between DSDT.dsl and DSDT_patched.dsl. I usually just do this from Terminal:</p><p><code>$ diffmerge DSDT.dsl DSDT_patched.dsl</code></p><p>The initial diffmerge window will look something like this:<br><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypvstpmgaj30u40nljze.jpg" alt=""></p><p>From there, we can examine the parts that have changes by clicking on the markers in the left column.</p><p>In the examples, the groups of changes you find:</p><ul><li>group 1: is the changes to the EC fields (multibyte to single byte)</li><li>group 2: addition of RDBA, WRBA, RDBB, WRBB methods</li><li>group 3: patched FBST, _BIX, B1FA methods</li><li>group 4: patched SMBR, SMBW, ECSB methods</li><li>group 5: patched TACH method</li><li>final group: addition of B1B2 method</li></ul><h3 id="Constructing-the-initial-SSDT"><a href="#Constructing-the-initial-SSDT" class="headerlink" title="Constructing the initial SSDT"></a>Constructing the initial SSDT</h3><p>Start with an empty SSDT in MaciASL:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){}</code></pre><p>Next, add all methods that were added by the patch. In the example, this includes RDBA, WRBA, RDBB, WRBB and B1B2 methods. You can copy them directly from the DSDT_patched.dsl.</p><p>You want to be certain each method is placed in the same scope. For example, here is the “group 2” methods added:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>And with B1B2 added:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>Don’t worry that the code does not compile at the moment. It is not expected at this point, due to the EC fields (and other identifiers) that are not defined in this file. They will need to be definined or referenced via External (eventually).</p><p>Now let’s add the patched methods. Just like the methods that were added methods, the patched methods are just copied from the DSDT_patched.dsl:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    // patched methods    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)}                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }    }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB.EC0)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }            }</code></pre><p>Notice how FBST and _BIX were added to scope _SB.PCI0.BAT0, but BIFA was added to _SB.PCI0.LPCB.EC0. It is important to inject all methods into their original scope.</p><p>Now, we add SMBR, SMBW, ECSB, and TACH:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    // patched methods    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)}                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }        Method (SMBR, 3, Serialized)        {            Store (Package (0x03)                {                    0x07,                    Zero,                    Zero                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, RDBL))            {                If (LNotEqual (Arg0, RDWD))                {                    If (LNotEqual (Arg0, RDBT))                    {                        If (LNotEqual (Arg0, RCBT))                        {                            If (LNotEqual (Arg0, RDQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                ShiftLeft (Arg1, One, Local3)                Or (Local3, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, RDQK))                {                    If (LNotEqual (Arg0, RCBT))                    {                        Store (Arg2, CMDB)                    }                }                WRBA(Zero)                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))                {                    If (LEqual (Arg0, RDBL))                    {                        Store (BCNT, Index (Local0, One))                        Store (RDBA(), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDWD))                    {                        Store (0x02, Index (Local0, One))                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RCBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                }            }            Release (MUEC)            Return (Local0)        }        Method (SMBW, 5, Serialized)        {            Store (Package (0x01)                {                    0x07                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, WRBL))            {                If (LNotEqual (Arg0, WRWD))                {                    If (LNotEqual (Arg0, WRBT))                    {                        If (LNotEqual (Arg0, SDBT))                        {                            If (LNotEqual (Arg0, WRQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                WRBA(Zero)                ShiftLeft (Arg1, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, WRQK))                {                    If (LNotEqual (Arg0, SDBT))                    {                        Store (Arg2, CMDB)                    }                }                If (LEqual (Arg0, WRBL))                {                    Store (Arg3, BCNT)                    WRBA(Arg4)                }                If (LEqual (Arg0, WRWD))                {                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)                }                If (LEqual (Arg0, WRBT))                {                    Store (Arg4, DAT0)                }                If (LEqual (Arg0, SDBT))                {                    Store (Arg4, DAT0)                }                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))            }            Release (MUEC)            Return (Local0)        }        Method (ECSB, 7, NotSerialized)        {            Store (Package (0x05)                {                    0x11,                    Zero,                    Zero,                    Zero,                    Buffer (0x20){}                }, Local1)            If (LGreater (Arg0, One))            {                Return (Local1)            }            If (ECAV ())            {                Acquire (MUEC, 0xFFFF)                If (LEqual (Arg0, Zero))                {                    Store (PRTC, Local0)                }                Else                {                    Store (PRT2, Local0)                }                Store (Zero, Local2)                While (LNotEqual (Local0, Zero))                {                    Stall (0x0A)                    Increment (Local2)                    If (LGreater (Local2, 0x03E8))                    {                        Store (SBBY, Index (Local1, Zero))                        Store (Zero, Local0)                    }                    ElseIf (LEqual (Arg0, Zero))                    {                        Store (PRTC, Local0)                    }                    Else                    {                        Store (PRT2, Local0)                    }                }                If (LLessEqual (Local2, 0x03E8))                {                    If (LEqual (Arg0, Zero))                    {                        Store (Arg2, ADDR)                        Store (Arg3, CMDB)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCNT)                            WRBA(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DAT0)                            Store (Arg5, DAT1)                        }                        Store (Arg1, PRTC)                    }                    Else                    {                        Store (Arg2, ADD2)                        Store (Arg3, CMD2)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCN2)                            WRBB(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DA20)                            Store (Arg5, DA21)                        }                        Store (Arg1, PRT2)                    }                    Store (0x7F, Local0)                    If (LEqual (Arg0, Zero))                    {                        While (PRTC)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    Else                    {                        While (PRT2)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    If (Local0)                    {                        If (LEqual (Arg0, Zero))                        {                            Store (SSTS, Local0)                            Store (DAT0, Index (Local1, One))                            Store (DAT1, Index (Local1, 0x02))                            Store (BCNT, Index (Local1, 0x03))                            Store (RDBA(), Index (Local1, 0x04))                        }                        Else                        {                            Store (SST2, Local0)                            Store (DA20, Index (Local1, One))                            Store (DA21, Index (Local1, 0x02))                            Store (BCN2, Index (Local1, 0x03))                            Store (RDBB(), Index (Local1, 0x04))                        }                        And (Local0, 0x1F, Local0)                        If (Local0)                        {                            Add (Local0, 0x10, Local0)                        }                        Store (Local0, Index (Local1, Zero))                    }                    Else                    {                        Store (0x10, Index (Local1, Zero))                    }                }                Release (MUEC)            }            Return (Local1)        }        Method (TACH, 1, Serialized)        {            If (ECAV ())            {                Switch (Arg0)                {                    Case (Zero)                    {                        Store (B1B2(TH00,TH01), Local0)                        Break                    }                    Case (One)                    {                        Store (B1B2(TH10,TH11), Local0)                        Break                    }                    Default                    {                        Return (Ones)                    }                }                Multiply (Local0, 0x02, Local0)                If (LNotEqual (Local0, Zero))                {                    Divide (0x0041CDB4, Local0, Local1, Local0)                    Return (Local0)                }                Else                {                    Return (Ones)                }            }            Else            {                Return (Ones)            }        }        }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    // added methods (group 2)    Scope (_SB.PCI0.LPCB)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}</code></pre><p>With all the nodes expanded in MaciASL, our work looks like this:<br><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypvtw1v2ej30r10hr41s.jpg" alt=""></p><h3 id="Resolving-errors"><a href="#Resolving-errors" class="headerlink" title="Resolving errors"></a>Resolving errors</h3><p>Now we need to start resolving errors by using External or defining the patched EC fields as necessary.<br>We can use the compiler to help.</p><p>Clicking Compile will show the first error: “3, 6085, Object not found or not accessible from scope (_SB.PCI0)”<br>It is at this line:</p><pre><code>Scope (_SB.PCI0)</code></pre><p>The compiler is indicating that _SB.PCI0 is not declared, so you can’t use it in a Scope operator.</p><p>We need to declare it with External, as the scope is actually defined in another file (DSDT.aml):<br>Add it to the top of the file:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    Scope (_SB.PCI0)    {...</code></pre><p>Now the next error is at “Scope(BAT0)”, so, again:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    Scope (_SB.PCI0)    {        Scope (BAT0)        {...</code></pre><p>The next error is “13, 6085, Object not found or not accessible from scope (^^LPCB.EC0.ACAP)”<br>We can tell from the code referencing ACAP that it is a method:</p><pre><code>If (^^LPCB.EC0.ACAP ())</code></pre><p>Note: Method calls are indicated by the “()” (in this case, an empty parameter list).</p><p>So, we know we can add an External as MethodObj:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)...}</code></pre><p>Note: The path ^^LPCB.EC0.ACAP is equivalent to _SB.PCI0.LPCB.EC0.ACAP because the reference was in scope _SB.PCI0.BAT0.FBST (the path of the FBST method). Each ^ (parent of) operator walks up the current scope by one item, so ^ is _SB.PCI0.BAT0, and ^^ is _SB.PCI0.</p><p>In some cases, you need to look at the DSDT to find the path and/or type of a given identifier. For example, the next error has to do with CHGS. Again, we know it is a method as it is the target of a method call, but for the path, we must refer to the DSDT:<br>Code (Text):</p><pre><code>Scope (\){    Method (CHGS, 1, Serialized)    {        Store (\_SB.PCI0.LPCB.EC0.BCHG (Arg0), Local0)        Return (Local0)    }</code></pre><p>So, it is in the root:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)...</code></pre><p>The next undefined symbol, BLLO, is something other than a method:</p><pre><code>If (BLLO){</code></pre><p>Looking in DSDT, we find it is defined with Name (and it happens to be in root scope):</p><pre><code>Name (BLLO, Zero)</code></pre><p>Which makes it an IntObj:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)...</code></pre><p>Fixing all the errors in the FBST method:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)...</code></pre><p>And now continue with the same process.</p><p>Eventually, you will have:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)...</code></pre><p>And will come to an error with XC30/XC31: “153, 6085, Object not found or not accessible from scope (^^LPCB.EC0.XC30)”</p><p>This is one of the 16-bit fields that was broken into two.<br>And this is where it is necessary to create the EC overlay.</p><p>To do this, we use another OperationRegion within EC scope, that has a different name than what we find in DSDT:</p><pre><code>External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){    OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)    Field(ERM2, ByteAcc, NoLock, Preserve)    {    }}</code></pre><p>And from DSDT_patched.dsl, we can get the various patched fields (again refer to the diffmerge).<br>This is the entire set from ECOR in the DSDT_patched.dsl</p><pre><code>Offset (0x04),CMD1,   8,CDT1,   8,CDT2,   8,CDT3,   8,Offset (0x80),Offset (0x81),Offset (0x82),Offset (0x83),EB0R,   8,EB1R,   8,EPWF,   8,Offset (0x87),Offset (0x88),Offset (0x89),Offset (0x8A),HKEN,   1,Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,TSTP,   8,Offset (0x9C),CDT4,   8,CDT5,   8,Offset (0xA0),Offset (0xA1),Offset (0xA2),Offset (0xA3),EACT,   8,TH1R,   8,TH1L,   8,TH0R,   8,TH0L,   8,Offset (0xB0),B0PN,   16,Offset (0xB4),Offset (0xB6),Offset (0xB8),Offset (0xBA),Offset (0xBC),Offset (0xBE),B0TM,   16,B0C1,   16,B0C2,   16,XC30,8,XC31,8,B0C4,   16,Offset (0xD0),B1PN,   16,Offset (0xD4),Offset (0xD6),Offset (0xD8),Offset (0xDA),Offset (0xDC),Offset (0xDE),B1TM,   16,B1C1,   16,B1C2,   16,YC30,8,YC31,8,B1C4,   16,Offset (0xF0),Offset (0xF2),Offset (0xF4),B0S0,8,B0S1,8,Offset (0xF8),Offset (0xFA),Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>And if we strip the unpatched identifiers, but keep the offsets correct (very important!):</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xBE),/*B0TM*/,   16,/*B0C1*/,   16,/*B0C2*/,   16,XC30,8,XC31,8,Offset (0xDE),/*B1TM*/,   16,/*B1C1*/,   16,/*B1C2*/,   16,YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>The same thing can be written as follows:</p><pre><code>Offset (0x93),TH00,8,TH01,8,TH10,8,TH11,8,Offset (0xc4),XC30,8,XC31,8,Offset (0xe4),YC30,8,YC31,8,Offset (0xF4),B0S0,8,B0S1,8,Offset (0xFC),B1S0,8,B1S1,8</code></pre><p>So, into our SSDT:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8        }    }</code></pre><p>And then on to fixing more errors, we add some more External:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {...</code></pre><p>And then we have errors with T2B0 and T2B1. These are again broken down 16-bit EC fields that need to be defined in our EC overlay. In fact, might as well define the rest we know we need (from diffmerge data).</p><p>There is patched data in SMBX:</p><pre><code>OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</code></pre><p>So, we create a similar overlay, with a unique name:</p><pre><code>            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }</code></pre><p>And similar withe SMB2 region:</p><pre><code>            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8            }</code></pre><p>And the T2B0 and T2B1 that are in orginal SMBX, but now RMB1:</p><pre><code>Field (RMB1, ByteAcc, NoLock, Preserve){    Offset (0x04),    T2B0,8,T2B1,8}</code></pre><p>And now we have:</p><pre><code>External(_SB.PCI0, DeviceObj)External(_SB.PCI0.BAT0, DeviceObj)External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)External(CHGS, MethodObj)External(BLLO, IntObj)External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)External(_SB.PCI0.BAT0.PUNT, IntObj)External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)External(_SB.PCI0.BAT0.LFCC, IntObj)External(MBLF, IntObj)External(_SB.PCI0.BAT0.PBST, PkgObj)External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)External(_SB.PCI0.BAT0.NBIX, PkgObj)External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)External(_SB.PCI0.BAT0._BIF, MethodObj)External(_SB.PCI0.BAT0.PBIF, PkgObj)External(_SB.PCI0.BAT0.BIXT, PkgObj)External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)External(BSLF, IntObj)External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)External(_SB.PCI0.LPCB, DeviceObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)Scope(_SB.PCI0.LPCB.EC0){        OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)        Field(ERM2, ByteAcc, NoLock, Preserve)        {            Offset (0x93),            TH00,8,TH01,8,            TH10,8,TH11,8,            Offset (0xc4),            XC30,8,XC31,8,            Offset (0xe4),            YC30,8,YC31,8,            Offset (0xF4),            B0S0,8,B0S1,8,            Offset (0xFC),            B1S0,8,B1S1,8        }        OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)        Field (RMB1, ByteAcc, NoLock, Preserve)        {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/            PRTC,   8,            SSTS,   5,                ,   1,            ALFG,   1,            CDFG,   1,            ADDR,   8,            CMDB,   8, */     Offset(4), // the data above is 4 bytes offset from the start of this region!            //BDAT, 256,            BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8        }        OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)        Field (RMB2, ByteAcc, NoLock, Preserve)        {/*            PRT2,   8,            SST2,   5,                ,   1,            ALF2,   1,            CDF2,   1,            ADD2,   8,            CMD2,   8, */  Offset(4),            //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8        }        Field (RMB1, ByteAcc, NoLock, Preserve)        {            Offset (0x04),            T2B0,8,T2B1,8        }}                   </code></pre><p>Then continue on with fixing more errors with External (it ends eventually!), by adding these External declarations:</p><pre><code>External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)</code></pre><p>Note: With DAT0, don’t be confused at the “other” DAT0 in a different scope!</p><p>At this point, the SSDT compiles without any errors:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "batt", 0){    External(_SB.PCI0, DeviceObj)    External(_SB.PCI0.BAT0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.ACAP, MethodObj)    External(CHGS, MethodObj)    External(BLLO, IntObj)    External(_SB.PCI0.LPCB.EC0.EB0S, FieldUnitObj)    External(_SB.PCI0.BAT0.PUNT, IntObj)    External(_SB.PCI0.LPCB.EC0.B0DV, FieldUnitObj)    External(_SB.PCI0.BAT0.LFCC, IntObj)    External(MBLF, IntObj)    External(_SB.PCI0.BAT0.PBST, PkgObj)    External(_SB.PCI0.LPCB.EC0.BATP, MethodObj)    External(_SB.PCI0.BAT0.NBIX, PkgObj)    External(_SB.PCI0.LPCB.EC0.GBTT, MethodObj)    External(_SB.PCI0.BAT0._BIF, MethodObj)    External(_SB.PCI0.BAT0.PBIF, PkgObj)    External(_SB.PCI0.BAT0.BIXT, PkgObj)    External(_SB.PCI0.LPCB.EC0.ECAV, MethodObj)    External(BSLF, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBL, IntObj)    External(_SB.PCI0.LPCB.EC0.RDWD, IntObj)    External(_SB.PCI0.LPCB.EC0.RDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RCBT, IntObj)    External(_SB.PCI0.LPCB.EC0.RDQK, IntObj)    External(_SB.PCI0.LPCB.EC0.MUEC, MutexObj)    External(_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SBBY, IntObj)    External(_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SWTC, MethodObj)    External(_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.WRBL, IntObj)    External(_SB.PCI0.LPCB.EC0.WRWD, IntObj)    External(_SB.PCI0.LPCB.EC0.WRBT, IntObj)    External(_SB.PCI0.LPCB.EC0.SDBT, IntObj)    External(_SB.PCI0.LPCB.EC0.WRQK, IntObj)    External(_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)    External(_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)    External(_SB.PCI0.LPCB, DeviceObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    Scope(_SB.PCI0.LPCB.EC0)    {            OperationRegion (ERM2, EmbeddedControl, Zero, 0xFF)            Field(ERM2, ByteAcc, NoLock, Preserve)            {                Offset (0x93),                TH00,8,TH01,8,                TH10,8,TH11,8,                Offset (0xc4),                XC30,8,XC31,8,                Offset (0xe4),                YC30,8,YC31,8,                Offset (0xF4),                B0S0,8,B0S1,8,                Offset (0xFC),                B1S0,8,B1S1,8            }            OperationRegion (RMB1, EmbeddedControl, 0x18, 0x28)            Field (RMB1, ByteAcc, NoLock, Preserve)            {/* Note: disabling these fields (already defined in DSDT, referenced with External if needed,    but keeping the correct offset! (very important!) */*/                PRTC,   8,                SSTS,   5,                    ,   1,                ALFG,   1,                CDFG,   1,                ADDR,   8,                CMDB,   8, */         Offset(4), // the data above is 4 bytes offset from the start of this region!                //BDAT, 256,BA00,8,BA01,8,BA02,8,BA03,8,BA04,8,BA05,8,BA06,8,BA07,8,BA08,8,BA09,8,BA0A,8,BA0B,8,BA0C,8,BA0D,8,BA0E,8,BA0F,8,BA10,8,BA11,8,BA12,8,BA13,8,BA14,8,BA15,8,BA16,8,BA17,8,BA18,8,BA19,8,BA1A,8,BA1B,8,BA1C,8,BA1D,8,BA1E,8,BA1F,8            }            OperationRegion(RMB2, EmbeddedControl, 0x40, 0x28)            Field (RMB2, ByteAcc, NoLock, Preserve)            {/*                PRT2,   8,                SST2,   5,                    ,   1,                ALF2,   1,                CDF2,   1,                ADD2,   8,                CMD2,   8, */      Offset(4),                //BDA2, 256,BB00,8,BB01,8,BB02,8,BB03,8,BB04,8,BB05,8,BB06,8,BB07,8,BB08,8,BB09,8,BB0A,8,BB0B,8,BB0C,8,BB0D,8,BB0E,8,BB0F,8,BB10,8,BB11,8,BB12,8,BB13,8,BB14,8,BB15,8,BB16,8,BB17,8,BB18,8,BB19,8,BB1A,8,BB1B,8,BB1C,8,BB1D,8,BB1E,8,BB1F,8             }            Field (RMB1, ByteAcc, NoLock, Preserve)            {                Offset (0x04),                T2B0,8,T2B1,8            }    }    Scope (_SB.PCI0)    {        Scope (BAT0)        {            Method (FBST, 4, NotSerialized)            {                And (Arg1, 0xFFFF, Local1)                Store (Zero, Local0)                If (^^LPCB.EC0.ACAP ())                {                    Store (One, Local0)                }                If (Local0)                {                    If (CHGS (Zero)){    Store (0x02, Local0)}Else{    Store (Zero, Local0)   }                }                Else                {                    Store (One, Local0)                }                If (BLLO)                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (And (^^LPCB.EC0.EB0S, 0x08))                {                    ShiftLeft (One, 0x02, Local2)                    Or (Local0, Local2, Local0)                }                If (LGreaterEqual (Local1, 0x8000))                {                    Subtract (0xFFFF, Local1, Local1)                }                Store (Arg2, Local2)                If (LEqual (PUNT, Zero))                {                    Multiply (Local1, ^^LPCB.EC0.B0DV, Local1)                    Multiply (Local2, 0x0A, Local2)                }                And (Local0, 0x02, Local3)                If (LNot (Local3))                {                    Subtract (LFCC, Local2, Local3)                    Divide (LFCC, 0xC8, Local4, Local5)                    If (LLess (Local3, Local5))                    {                        Store (LFCC, Local2)                    }                }                Else                {                    Divide (LFCC, 0xC8, Local4, Local5)                    Subtract (LFCC, Local5, Local4)                    If (LGreater (Local2, Local4))                    {                        Store (Local4, Local2)                    }                }                If (LNot (^^LPCB.EC0.ACAP ()))                {                    Divide (Local2, MBLF, Local3, Local4)                    If (LLess (Local1, Local4))                    {                        Store (Local4, Local1)                    }                }                Store (Local0, Index (PBST, Zero))                Store (Local1, Index (PBST, One))                Store (Local2, Index (PBST, 0x02))                Store (Arg3, Index (PBST, 0x03))            }            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended            {                If (LNot (^^LPCB.EC0.BATP (Zero)))                {                    Return (NBIX)                }                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))                {                    Return (NBIX)                }                _BIF ()                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))                If (LEqual (DerefOf (Index (BIXT, One)), One))                {                    Store (Zero, Index (BIXT, One))                    Store (DerefOf (Index (BIXT, 0x05)), Local0)                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))                }                Store (B1B2(^^LPCB.EC0.XC30,^^LPCB.EC0.XC31), Index (BIXT, 0x08))                Store (0x0001869F, Index (BIXT, 0x09))                Return (BIXT)            }    }    }    Scope (_SB.PCI0.LPCB.EC0)    {        Method (BIFA, 0, NotSerialized)        {            If (ECAV ())            {                If (BSLF)                {                    Store (B1B2(B1S0,B1S1), Local0)                }                Else                {                    Store (B1B2(B0S0,B0S1), Local0)                }            }            Else            {                Store (Ones, Local0)            }            Return (Local0)        }        Method (SMBR, 3, Serialized)        {            Store (Package (0x03)                {                    0x07,                    Zero,                    Zero                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, RDBL))            {                If (LNotEqual (Arg0, RDWD))                {                    If (LNotEqual (Arg0, RDBT))                    {                        If (LNotEqual (Arg0, RCBT))                        {                            If (LNotEqual (Arg0, RDQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                ShiftLeft (Arg1, One, Local3)                Or (Local3, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, RDQK))                {                    If (LNotEqual (Arg0, RCBT))                    {                        Store (Arg2, CMDB)                    }                }                WRBA(Zero)                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))                {                    If (LEqual (Arg0, RDBL))                    {                        Store (BCNT, Index (Local0, One))                        Store (RDBA(), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDWD))                    {                        Store (0x02, Index (Local0, One))                        Store (B1B2(T2B0,T2B1), Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RDBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                    If (LEqual (Arg0, RCBT))                    {                        Store (One, Index (Local0, One))                        Store (DAT0, Index (Local0, 0x02))                    }                }            }            Release (MUEC)            Return (Local0)        }        Method (SMBW, 5, Serialized)        {            Store (Package (0x01)                {                    0x07                }, Local0)            If (LNot (ECAV ()))            {                Return (Local0)            }            If (LNotEqual (Arg0, WRBL))            {                If (LNotEqual (Arg0, WRWD))                {                    If (LNotEqual (Arg0, WRBT))                    {                        If (LNotEqual (Arg0, SDBT))                        {                            If (LNotEqual (Arg0, WRQK))                            {                                Return (Local0)                            }                        }                    }                }            }            Acquire (MUEC, 0xFFFF)            Store (PRTC, Local1)            Store (Zero, Local2)            While (LNotEqual (Local1, Zero))            {                Stall (0x0A)                Increment (Local2)                If (LGreater (Local2, 0x03E8))                {                    Store (SBBY, Index (Local0, Zero))                    Store (Zero, Local1)                }                Else                {                    Store (PRTC, Local1)                }            }            If (LLessEqual (Local2, 0x03E8))            {                WRBA(Zero)                ShiftLeft (Arg1, One, Local3)                Store (Local3, ADDR)                If (LNotEqual (Arg0, WRQK))                {                    If (LNotEqual (Arg0, SDBT))                    {                        Store (Arg2, CMDB)                    }                }                If (LEqual (Arg0, WRBL))                {                    Store (Arg3, BCNT)                    WRBA(Arg4)                }                If (LEqual (Arg0, WRWD))                {                    Store(Arg4,T2B0) Store(ShiftRight(Arg4,8),T2B1)                }                If (LEqual (Arg0, WRBT))                {                    Store (Arg4, DAT0)                }                If (LEqual (Arg0, SDBT))                {                    Store (Arg4, DAT0)                }                Store (Arg0, PRTC)                Store (SWTC (Arg0), Index (Local0, Zero))            }            Release (MUEC)            Return (Local0)        }        Method (ECSB, 7, NotSerialized)        {            Store (Package (0x05)                {                    0x11,                    Zero,                    Zero,                    Zero,                    Buffer (0x20){}                }, Local1)            If (LGreater (Arg0, One))            {                Return (Local1)            }            If (ECAV ())            {                Acquire (MUEC, 0xFFFF)                If (LEqual (Arg0, Zero))                {                    Store (PRTC, Local0)                }                Else                {                    Store (PRT2, Local0)                }                Store (Zero, Local2)                While (LNotEqual (Local0, Zero))                {                    Stall (0x0A)                    Increment (Local2)                    If (LGreater (Local2, 0x03E8))                    {                        Store (SBBY, Index (Local1, Zero))                        Store (Zero, Local0)                    }                    ElseIf (LEqual (Arg0, Zero))                    {                        Store (PRTC, Local0)                    }                    Else                    {                        Store (PRT2, Local0)                    }                }                If (LLessEqual (Local2, 0x03E8))                {                    If (LEqual (Arg0, Zero))                    {                        Store (Arg2, ADDR)                        Store (Arg3, CMDB)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCNT)                            WRBA(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DAT0)                            Store (Arg5, DAT1)                        }                        Store (Arg1, PRTC)                    }                    Else                    {                        Store (Arg2, ADD2)                        Store (Arg3, CMD2)                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))                        {                            Store (DerefOf (Index (Arg6, Zero)), BCN2)                            WRBB(DerefOf (Index (Arg6, One)))                        }                        Else                        {                            Store (Arg4, DA20)                            Store (Arg5, DA21)                        }                        Store (Arg1, PRT2)                    }                    Store (0x7F, Local0)                    If (LEqual (Arg0, Zero))                    {                        While (PRTC)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    Else                    {                        While (PRT2)                        {                            Sleep (One)                            Decrement (Local0)                        }                    }                    If (Local0)                    {                        If (LEqual (Arg0, Zero))                        {                            Store (SSTS, Local0)                            Store (DAT0, Index (Local1, One))                            Store (DAT1, Index (Local1, 0x02))                            Store (BCNT, Index (Local1, 0x03))                            Store (RDBA(), Index (Local1, 0x04))                        }                        Else                        {                            Store (SST2, Local0)                            Store (DA20, Index (Local1, One))                            Store (DA21, Index (Local1, 0x02))                            Store (BCN2, Index (Local1, 0x03))                            Store (RDBB(), Index (Local1, 0x04))                        }                        And (Local0, 0x1F, Local0)                        If (Local0)                        {                            Add (Local0, 0x10, Local0)                        }                        Store (Local0, Index (Local1, Zero))                    }                    Else                    {                        Store (0x10, Index (Local1, Zero))                    }                }                Release (MUEC)            }            Return (Local1)        }        Method (TACH, 1, Serialized)        {            If (ECAV ())            {                Switch (Arg0)                {                    Case (Zero)                    {                        Store (B1B2(TH00,TH01), Local0)                        Break                    }                    Case (One)                    {                        Store (B1B2(TH10,TH11), Local0)                        Break                    }                    Default                    {                        Return (Ones)                    }                }                Multiply (Local0, 0x02, Local0)                If (LNotEqual (Local0, Zero))                {                    Divide (0x0041CDB4, Local0, Local1, Local0)                    Return (Local0)                }                Else                {                    Return (Ones)                }            }            Else            {                Return (Ones)            }        }        }    Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }    Scope (_SB.PCI0.LPCB)    {        Scope (EC0)        {            Method (RDBA, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BA00, Index(TEMP, 0x00))                Store (BA01, Index(TEMP, 0x01))                Store (BA02, Index(TEMP, 0x02))                Store (BA03, Index(TEMP, 0x03))                Store (BA04, Index(TEMP, 0x04))                Store (BA05, Index(TEMP, 0x05))                Store (BA06, Index(TEMP, 0x06))                Store (BA07, Index(TEMP, 0x07))                Store (BA08, Index(TEMP, 0x08))                Store (BA09, Index(TEMP, 0x09))                Store (BA0A, Index(TEMP, 0x0A))                Store (BA0B, Index(TEMP, 0x0B))                Store (BA0C, Index(TEMP, 0x0C))                Store (BA0D, Index(TEMP, 0x0D))                Store (BA0E, Index(TEMP, 0x0E))                Store (BA0F, Index(TEMP, 0x0F))                Store (BA10, Index(TEMP, 0x10))                Store (BA11, Index(TEMP, 0x11))                Store (BA12, Index(TEMP, 0x12))                Store (BA13, Index(TEMP, 0x13))                Store (BA14, Index(TEMP, 0x14))                Store (BA15, Index(TEMP, 0x15))                Store (BA16, Index(TEMP, 0x16))                Store (BA17, Index(TEMP, 0x17))                Store (BA18, Index(TEMP, 0x18))                Store (BA19, Index(TEMP, 0x19))                Store (BA1A, Index(TEMP, 0x1A))                Store (BA1B, Index(TEMP, 0x1B))                Store (BA1C, Index(TEMP, 0x1C))                Store (BA1D, Index(TEMP, 0x1D))                Store (BA1E, Index(TEMP, 0x1E))                Store (BA1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBA, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BA00)                Store (DerefOf(Index(TEMP, 0x01)), BA01)                Store (DerefOf(Index(TEMP, 0x02)), BA02)                Store (DerefOf(Index(TEMP, 0x03)), BA03)                Store (DerefOf(Index(TEMP, 0x04)), BA04)                Store (DerefOf(Index(TEMP, 0x05)), BA05)                Store (DerefOf(Index(TEMP, 0x06)), BA06)                Store (DerefOf(Index(TEMP, 0x07)), BA07)                Store (DerefOf(Index(TEMP, 0x08)), BA08)                Store (DerefOf(Index(TEMP, 0x09)), BA09)                Store (DerefOf(Index(TEMP, 0x0A)), BA0A)                Store (DerefOf(Index(TEMP, 0x0B)), BA0B)                Store (DerefOf(Index(TEMP, 0x0C)), BA0C)                Store (DerefOf(Index(TEMP, 0x0D)), BA0D)                Store (DerefOf(Index(TEMP, 0x0E)), BA0E)                Store (DerefOf(Index(TEMP, 0x0F)), BA0F)                Store (DerefOf(Index(TEMP, 0x10)), BA10)                Store (DerefOf(Index(TEMP, 0x11)), BA11)                Store (DerefOf(Index(TEMP, 0x12)), BA12)                Store (DerefOf(Index(TEMP, 0x13)), BA13)                Store (DerefOf(Index(TEMP, 0x14)), BA14)                Store (DerefOf(Index(TEMP, 0x15)), BA15)                Store (DerefOf(Index(TEMP, 0x16)), BA16)                Store (DerefOf(Index(TEMP, 0x17)), BA17)                Store (DerefOf(Index(TEMP, 0x18)), BA18)                Store (DerefOf(Index(TEMP, 0x19)), BA19)                Store (DerefOf(Index(TEMP, 0x1A)), BA1A)                Store (DerefOf(Index(TEMP, 0x1B)), BA1B)                Store (DerefOf(Index(TEMP, 0x1C)), BA1C)                Store (DerefOf(Index(TEMP, 0x1D)), BA1D)                Store (DerefOf(Index(TEMP, 0x1E)), BA1E)                Store (DerefOf(Index(TEMP, 0x1F)), BA1F)            }            Method (RDBB, 0, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (BB00, Index(TEMP, 0x00))                Store (BB01, Index(TEMP, 0x01))                Store (BB02, Index(TEMP, 0x02))                Store (BB03, Index(TEMP, 0x03))                Store (BB04, Index(TEMP, 0x04))                Store (BB05, Index(TEMP, 0x05))                Store (BB06, Index(TEMP, 0x06))                Store (BB07, Index(TEMP, 0x07))                Store (BB08, Index(TEMP, 0x08))                Store (BB09, Index(TEMP, 0x09))                Store (BB0A, Index(TEMP, 0x0A))                Store (BB0B, Index(TEMP, 0x0B))                Store (BB0C, Index(TEMP, 0x0C))                Store (BB0D, Index(TEMP, 0x0D))                Store (BB0E, Index(TEMP, 0x0E))                Store (BB0F, Index(TEMP, 0x0F))                Store (BB10, Index(TEMP, 0x10))                Store (BB11, Index(TEMP, 0x11))                Store (BB12, Index(TEMP, 0x12))                Store (BB13, Index(TEMP, 0x13))                Store (BB14, Index(TEMP, 0x14))                Store (BB15, Index(TEMP, 0x15))                Store (BB16, Index(TEMP, 0x16))                Store (BB17, Index(TEMP, 0x17))                Store (BB18, Index(TEMP, 0x18))                Store (BB19, Index(TEMP, 0x19))                Store (BB1A, Index(TEMP, 0x1A))                Store (BB1B, Index(TEMP, 0x1B))                Store (BB1C, Index(TEMP, 0x1C))                Store (BB1D, Index(TEMP, 0x1D))                Store (BB1E, Index(TEMP, 0x1E))                Store (BB1F, Index(TEMP, 0x1F))                Return (TEMP)            }            Method (WRBB, 1, Serialized)            {                Name (TEMP, Buffer(0x20) { })                Store (Arg0, TEMP)                Store (DerefOf(Index(TEMP, 0x00)), BB00)                Store (DerefOf(Index(TEMP, 0x01)), BB01)                Store (DerefOf(Index(TEMP, 0x02)), BB02)                Store (DerefOf(Index(TEMP, 0x03)), BB03)                Store (DerefOf(Index(TEMP, 0x04)), BB04)                Store (DerefOf(Index(TEMP, 0x05)), BB05)                Store (DerefOf(Index(TEMP, 0x06)), BB06)                Store (DerefOf(Index(TEMP, 0x07)), BB07)                Store (DerefOf(Index(TEMP, 0x08)), BB08)                Store (DerefOf(Index(TEMP, 0x09)), BB09)                Store (DerefOf(Index(TEMP, 0x0A)), BB0A)                Store (DerefOf(Index(TEMP, 0x0B)), BB0B)                Store (DerefOf(Index(TEMP, 0x0C)), BB0C)                Store (DerefOf(Index(TEMP, 0x0D)), BB0D)                Store (DerefOf(Index(TEMP, 0x0E)), BB0E)                Store (DerefOf(Index(TEMP, 0x0F)), BB0F)                Store (DerefOf(Index(TEMP, 0x10)), BB10)                Store (DerefOf(Index(TEMP, 0x11)), BB11)                Store (DerefOf(Index(TEMP, 0x12)), BB12)                Store (DerefOf(Index(TEMP, 0x13)), BB13)                Store (DerefOf(Index(TEMP, 0x14)), BB14)                Store (DerefOf(Index(TEMP, 0x15)), BB15)                Store (DerefOf(Index(TEMP, 0x16)), BB16)                Store (DerefOf(Index(TEMP, 0x17)), BB17)                Store (DerefOf(Index(TEMP, 0x18)), BB18)                Store (DerefOf(Index(TEMP, 0x19)), BB19)                Store (DerefOf(Index(TEMP, 0x1A)), BB1A)                Store (DerefOf(Index(TEMP, 0x1B)), BB1B)                Store (DerefOf(Index(TEMP, 0x1C)), BB1C)                Store (DerefOf(Index(TEMP, 0x1D)), BB1D)                Store (DerefOf(Index(TEMP, 0x1E)), BB1E)                Store (DerefOf(Index(TEMP, 0x1F)), BB1F)            }        }    }}//EOF   </code></pre><p>The resulting file can be saved as AML (suggested name: SSDT-BATT.aml), and placed in ACPI/patched.</p><p>But you can’t expect battery status to work with native DSDT yet!</p><h3 id="Renaming-existing-methods"><a href="#Renaming-existing-methods" class="headerlink" title="Renaming existing methods"></a>Renaming existing methods</h3><p>For now, there are duplicate methods in DSDT and this SSDT-BATT.aml. For each method in DSDT that the SSDT-BATT.aml version will replace, we must rename the method in DSDT to something else, which will allow the SSDT version to override.</p><p>Just as in post #1, this part follows the “Rename/Replace” pattern.<br>The methods that need replacements are FBST, _BIX, BIFA, SMBR, SMBW, ECSB, and TACH.</p><p>For this step, it is useful to create a mixed bytecode listing for the native DSDT.aml.<br>It can be created with: “iasl -l -dl DSDT.aml”, which creates a mixed listing in DSDT.dsl</p><p>For the FBST method:</p><pre><code>Method (FBST, 4, NotSerialized){    And (Arg1, 0xFFFF, Local1)    Store (Zero, Local0)FF74: 14 43 12 46 42 53 54 04 7B 69 0B FF FF 61 70 00  // .C.FBST.{i...ap.FF84: 60</code></pre><p>A potential rename patch (FBST-&gt;XBST):</p><pre><code>Find: &lt;46 42 53 54 04&gt;Replace: &lt;58 42 53 54 04&gt;</code></pre><p>It is a good idea to verify that there is only one match for the Find hex data by searching for it in a hex editor such as Hex Fiend. Because the patch should ONLY apply to the method definition, not other code that may be present in the DSDT (or native SSDTs).</p><p>The target name you choose must be unique within the scope that the method resides. Creating a duplicate method will cause kernel panic. Changing the first letter to ‘X’ is usually ok, but no guarantee.</p><p>Patches for the rest of the methods:</p><pre><code>_BIX-&gt;XBIX:Find: &lt;5F 42 49 58 00&gt;Replace: &lt;58 42 49 58 00&gt;</code></pre><pre><code>BIFA-&gt;XIFA:Find: &lt;42 49 46 41 00&gt;Replace: &lt;58 49 46 41 00&gt;</code></pre><pre><code>SMBR-&gt;XMBR:Find: &lt;53 4D 42 52 0B&gt;Replace: &lt;58 4D 42 52 0B&gt;</code></pre><pre><code>SMBW-&gt;XMBW:Find: &lt;53 4D 42 57 0D&gt;Replace: &lt;58 4D 42 57 0D&gt;</code></pre><pre><code>ECSB-&gt;XCSB:Find: &lt;45 43 53 42 07&gt;Replace: &lt;58 43 53 42 07&gt;</code></pre><pre><code>TACH-&gt;XACH:Find: &lt;54 41 43 48 09&gt;Replace: &lt;58 41 43 48 09&gt;</code></pre><p>After adding those patches to config.plist/ACPI/DSDT/Patches, the methods in native DSDT will be renamed by Clover. And as a result of the renaming, the patched methods defined in SSDT-BATT.aml will override.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching for battery status is one of the most complex hotpatch tasks possible. The process of writing all the ‘External’ refernences is tedious and boring.</p><p>It will take some time (several hours into the text you’re reading here). Do not rush it.</p><h2 id="Disabling-discrete-switched-GPU-with-Hotpatch"><a href="#Disabling-discrete-switched-GPU-with-Hotpatch" class="headerlink" title="Disabling discrete/switched GPU with Hotpatch"></a>Disabling discrete/switched GPU with Hotpatch</h2><p>This third post is dedicated to hotpatching required for disabling the discrete GPU in a switched dual-GPU laptop, using the same example ACPI fils as the static patch guide.</p><p><a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/</a></p><p>You should download the ACPI/origin files that are attached to that guide, so you can follow along.</p><p>As in the static patch guide, the goal is relatively simple: call the _OFF method (from an _INI method) for the discrete GPU during ACPI initialization. But the details make it more complex due to the fact that _OFF can contain EC related code which needs to be executed in _REG instead of _INI.</p><h3 id="Building-the-replacement-INI-OFF-REG-methods"><a href="#Building-the-replacement-INI-OFF-REG-methods" class="headerlink" title="Building the replacement _INI/_OFF/_REG methods"></a>Building the replacement _INI/_OFF/_REG methods</h3><p>In the example, the target _INI method is in SSDT-7, _OFF is in SSDT-8. The path of the discrete device is _SB.PCI0.RP05.PEGP. In the example files, _OFF contains EC related code that must be moved to _REG. To complete this patching process, we need to replace _INI, _OFF, and _REG, therefore each will need to be renamed to XINI, XOFF, and XREG</p><p>Note: The methods you need to patch may in fact be different. It all depends on the code within the _OFF path. For example, with other ACPI sets, it happens that SGOF (may be some other name) has EC related code that must be moved to _REG. In that case, you would need to use rename/replace for the SGOF, and perhaps not the _OFF method. Analyze your existing code carefully.</p><p>The Clover config.plist patches will be worked out later. For now, lets look at the SSDT for the replacement methods.</p><p>The SSDT will consist of the patched methods:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "D-GPU", 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }</code></pre><p>At this point, the code won’t compile, as some of the symbols referenced in _OFF are not available.<br>Just like the battery patching guide, we must add the appropriate External declarations.</p><p>Use the compiler errors to determine which symbols you need to find, then add the appropriate External declartions. In the example case:</p><pre><code>External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)</code></pre><p>The resulting SSDT:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "D-GPU", 0){    External(_SB.PCI0.RP05.PEGP, DeviceObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)    External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)    External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)    External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)    External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)    External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)    External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)    Scope(_SB.PCI0.RP05.PEGP)    {        Method(_INI)        {            XINI() // call original _INI, now renamed XINI            _OFF() // call (patched) _OFF        }        Method(_OFF, 0, Serialized)        {            If (LEqual (CTXT, Zero))            {                /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */                If (LNotEqual (GPRF, One))                {                    Store (VGAR, VGAB)                }                Store (One, CTXT)            }            SGOF ()        }    }    Scope(_SB.PCI0.LPCB.EC0)    {        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF            }        }    }}</code></pre><p>Now it compiles without error, but there is one warning: “39, 3079, _REG has no corresponding Operation Region”. And this warning is important. The _REG will not be called unless we add a dummy EC OperationRegion.</p><p>We can add it:</p><pre><code>...Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {...</code></pre><p>Resulting complete SSDT:</p><pre><code>External(_SB.PCI0.RP05.PEGP, DeviceObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.RP05.PEGP.XOFF, MethodObj)External(_SB.PCI0.RP05.PEGP.XINI, MethodObj)External(_SB.PCI0.LPCB.EC0, DeviceObj)External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)External(_SB.PCI0.LPCB.EC0.SPIN, MethodObj)External(_SB.PCI0.RP05.PEGP.CTXT, IntObj)External(_SB.PCI0.RP05.PEGP.GPRF, IntObj)External(_SB.PCI0.RP05.PEGP.VGAR, FieldUnitObj)External(_SB.PCI0.RP05.PEGP.VGAB, BuffObj)External(_SB.PCI0.RP05.PEGP.SGOF, MethodObj)Scope(_SB.PCI0.RP05.PEGP){    Method(_INI)    {        XINI() // call original _INI, now renamed XINI        _OFF() // call (patched) _OFF    }    Method(_OFF, 0, Serialized)    {        If (LEqual (CTXT, Zero))        {            /* \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) */            If (LNotEqual (GPRF, One))            {                Store (VGAR, VGAB)            }            Store (One, CTXT)        }        SGOF ()    }}Scope(_SB.PCI0.LPCB.EC0){    OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)    Method(_REG, 2)    {        XREG(Arg0, Arg1) // call original _REG, now renamed XREG        If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?        {            \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero) // code that was removed from _OFF        }    }}</code></pre><p>At this point, you can save the SSDT (suggestion: SSDT-DGPU.aml).<br>It is ready to go to ACPI/patched.</p><p>But we still need to rename the original methods in native ACPI.</p><h3 id="Renaming-the-methods"><a href="#Renaming-the-methods" class="headerlink" title="Renaming the methods"></a>Renaming the methods</h3><p>As mentioned earlier, the following methods need renaming:<br>_SB.PCI0.RP05.PEGP._INI -&gt; XINI<br>_SB.PCI0.RP05.PEGP._OFF -&gt; XOFF<br>_SB.PCI0.LPCB.EC0._REG -&gt; XREG</p><p>To determine the binary patches needed, we need a mixed listing of DSDT.aml, SSDT-7.aml, and SSDT-8.aml.<br>Create with:</p><pre><code>iasl -dl -l DSDT.aml SSDT-7.aml SSDT-8.aml</code></pre><p>The resulting mixed listing is in DSDT.dsl, SSDT-7.dsl, and SSDT-8.dsl.</p><p>Here is the mixed listing for _REG in DSDT.dsl:<br>Code (Text):</p><pre><code>        Method (_REG, 2, NotSerialized)  // _REG: Region Availability        {D2B8: 14 12 5F 52 45 47 02                             // .._REG.            If (LEqual (Arg0, 0x03))            {D2BF: A0 0B 93 68 0A 03                                // ...h..                Store (Arg1, ECFL)                }            }        }    }D2C5: 70 69 45 43 46 4C</code></pre><p>The patch used should rename only this _REG, not other _REG methods in the ACPI set. We can rename it by grabbing the name/header plus a few bytes from the code.</p><p>This pattern grabs enough bytes to be unique for sure:</p><pre><code>Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03 70 69 45 43 46 4C&gt;</code></pre><p>And the mixed listing for the target _INI in SSDT-7.dsl:</p><pre><code>        Method (_INI, 0, NotSerialized)  // _INI: Initialize        {03D1: 14 1F 5F 49 4E 49 00                             // .._INI.            Store (Zero, \_SB.PCI0.RP05.PEGP._ADR)        }03D8: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP003E8: 35 50 45 47 50 5F 41 44 52                       // 5PEGP_ADR</code></pre><p>​            </p><p>Resulting patch…</p><pre><code>Find: &lt;5F 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;Replace: &lt;58 49 4E 49 00 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50&gt;</code></pre><p>And the _OFF in SSDT-8.dsl:</p><pre><code>    Method (_OFF, 0, Serialized)  // _OFF: Power Off    {032B: 14 45 04 5F 4F 46 46 08                          // .E._OFF.        If (LEqual (CTXT, Zero))        {        \_SB.PCI0.LPCB.EC0.SPIN (0x96, Zero)0333: A0 39 93 43 54 58 54 00 5C 2F 05 5F 53 42 5F 50  // .9.CTXT.\/._SB_P0343: 43 49 30 4C 50 43 42 45 43 30 5F 53 50 49 4E 0A  // CI0LPCBEC0_SPIN.0353: 96 00</code></pre><p> The patch…</p><pre><code>Find: &lt;5F 4F 46 46 08 A0 39 93 43 54 58 54&gt;Replace: &lt;58 4F 46 46 08 A0 39 93 43 54 58 54&gt;</code></pre><p>Note: Each of these patches could probably be reduced, but you would need to check carefully in all native DSDT and SSDTs for the Find pattern as you don’t want to match on any methods but the target methods. Because _REG, _INI and _OFF are very common names for methods in other scopes, we need to be careful.</p><h3 id="A-simple-example"><a href="#A-simple-example" class="headerlink" title="A simple example"></a>A simple example</h3><p>The files for the ASUS mentioned above were complex due to the need to patch _OFF, _INI, and _REG.</p><p>But let’s take a look at an example that is much simpler. The files are for an Asus K550VX-DM406T, and they are attached to this post. Please download them so you can follow along.</p><p>When we look at the _OFF method in SSDT-14, there is no EC related code. And it calls PGOF, but the PGOF method, defined in SSDT-3, also has no EC related code:</p><pre><code>Method (_OFF, 0, Serialized)  // _OFF: Power Off{    If (LEqual (CTXT, Zero))    {        If (LNotEqual (GPRF, One))        {            Store (VGAR, VGAB)        }        Store (One, CTXT)    }    PGOF (Zero)}</code></pre><p>This means _OFF can be called directly from an _INI.</p><p>If you look at all the _INI methods in the ACPI set, you will find there is no _INI at the path of _OFF (_SB.PCI0.PEG0.PEGP). Which means we can simply add an SSDT that has an _INI at the correct path, and that _INI simply calls _OFF.</p><p>It is a one-liner method:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "DGPU", 0){    External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)    Method(_SB.PCI0.PEG0.PEGP._INI) { _OFF() }}</code></pre><p>Just as mentioned in the main discrete disable guide (static patch), sometimes you need to call _PS3 instead of _OFF. It is a trial and error process to determine which is best.</p><p>Same code as above, but calling _PS3:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "DGPU", 0){    External(_SB.PCI0.PEG0.PEGP._PS3, MethodObj)    Method(_SB.PCI0.PEG0.PEGP._INI) { _PS3() }}</code></pre><p>Save it as SSDT-DGPU.aml and the Nvidia should be disabled.</p><p>The simple example turned not so simple</p><p>Although the method mentioned above will usually work in this scenario (even with other laptops that present the same scenario: no EC access in _OFF path, no existing _INI at the path), this specific laptop needed additional patching in order to turn off the dedicated Nvidia fan.</p><p>A little investigation was needed. As we can see by looking at the _OFF code, it calls PGOF(Zero) to do most of the work. And if we search for other examples of PGOF being called with Arg0==Zero, we find this code in SSDT-3.dsl:</p><pre><code>ElseIf (LAnd (LGreater (OSYS, 0x07D9), PEGS ())){    FAOF ()    PGOF (Zero)...</code></pre><p>Note the call to FAOF. Could that be for “FAN OFF”? Seems likely.</p><p>And look, we have FAOF and FAON in SSDT-3:</p><pre><code>Method (FAON, 0, Serialized){    \_SB.PCI0.LPCB.EC0.WRAM (0x052B, 0x9E)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x8B)    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    Or (Local0, 0x20, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)}Method (FAOF, 0, Serialized){    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)    And (Local0, 0xCF, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x89)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)    \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)}</code></pre><p>And you can see it does a bunch of EC manipulations. Typically the EC controls the system fans, so this seems to confirm these methods are for “FAN ON”, and “FAN OFF”.</p><p>Since these methods manipulate the EC, we cannot call FAOF without the EC being ready. To do that, we need to patch _REG.</p><p>So, adding the necessary code to our SSDT:</p><pre><code>DefinitionBlock("", "SSDT", 2, "hack", "DGPU", 0){    External(_SB.PCI0.PEG0.PEGP._OFF, MethodObj)    Method(_SB.PCI0.PEG0.PEGP._INI) { _OFF() }    External(_SB.PCI0.LPCB.EC0, DeviceObj)    External(_SB.PCI0.LPCB.EC0.XREG, MethodObj)    External(_SB.PCI0.PEG0.FAOF, MethodObj)    Scope(_SB.PCI0.LPCB.EC0)    {        OperationRegion(RME3, EmbeddedControl, 0x00, 0xFF)        Method(_REG, 2)        {            XREG(Arg0, Arg1) // call original _REG, now renamed XREG            If (3 == Arg0 &amp;&amp; 1 == Arg1) // EC ready?            {                 \_SB.PCI0.PEG0.FAOF() // turn dedicated Nvidia fan off            }        }    }}</code></pre><p>And the patch we need to rename _REG to XREG (again, based on a mixed listing of DSDT.aml):</p><pre><code>Find: &lt;5F 52 45 47 02 A0 0B 93 68 0A 03&gt;Replace: &lt;58 52 45 47 02 A0 0B 93 68 0A 03&gt;</code></pre><p>With the patch in config.plist, EC0._REG is renamed XREG. The eventual call to _REG by the system lands in our modified _REG, which, in turn, calls the original _REG (renamed to XREG) and calls FAOF to turn the fan off.</p><h3 id="Conclusion-1"><a href="#Conclusion-1" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Hotpatching discrete GPU disable code is a bit simpler than battery status, but involves similar concepts.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="noopener external nofollow noreferrer">https://github.com/RehabMan/OS-X-Clover-Laptop-Config</a><br><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener external nofollow noreferrer">https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hacintosh </tag>
            
            <tag> SSDT </tag>
            
            <tag> ACPI </tag>
            
            <tag> hotpatch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASUS-X455LD-i5-4210u</title>
      <link href="/ASUS-X455LD-i5-4210u.html"/>
      <url>/ASUS-X455LD-i5-4210u.html</url>
      
        <content type="html"><![CDATA[<h2 id="Install-macOS-High-Sierra-on-ASUS-X455LD-i5-4210u"><a href="#Install-macOS-High-Sierra-on-ASUS-X455LD-i5-4210u" class="headerlink" title="Install macOS High Sierra on ASUS X455LD i5 4210u"></a>Install macOS High Sierra on ASUS X455LD i5 4210u</h2><a id="more"></a><h3 id="Laptop-Configuration"><a href="#Laptop-Configuration" class="headerlink" title="Laptop Configuration"></a>Laptop Configuration</h3><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">Computer</span> <span class="token attr-value">model              Asus F455LD Notebook</span><span class="token attr-name">CPU</span> <span class="token attr-value">                        Intel Core i5-4210u</span><span class="token attr-name">Operate</span> <span class="token attr-value">System              Windows10 Education 64bit + macOS High Sierra 17B25c</span><span class="token attr-name">                            +</span> <span class="token attr-value">Windows7 Ultimate + ElementaryOS base on Ubuntu 16.04</span><span class="token attr-name">Main</span> <span class="token attr-value">board                  Asus X455LD Intel Haswell-ULT - Lynx Point-LP</span><span class="token attr-name">Discret</span> <span class="token attr-value">egraphics           Nvidia GeForce 820M 2G </span><span class="token attr-name">Integrated</span> <span class="token attr-value">graphics         HD4400</span><span class="token attr-name">Audio</span> <span class="token attr-value">                      Realtek @ Intel Lynx Point-LP  High Definition Audio (CX20751)</span><span class="token attr-name">Ethernet</span> <span class="token attr-value">                   Realtek RTL8168/8111/8112 Gigabit Ethernet Controller / Asus</span><span class="token attr-name">Wireless</span> <span class="token attr-value">network adapter    Atheros AR956X</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Working"><a href="#Working" class="headerlink" title="Working"></a>Working</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Backlight-Controller.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Full-Power-Manager-1.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Full-Power-Manager-2.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/SmartTouchPad-1.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/SmartTouchPad-2.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/SmartTouchPad-3.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/FakeMouse.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Audio-Insert-Headphone.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Audio-Remove-Headphone.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Bluetooth.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Ethernet.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Wireless.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Graphics.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/USB.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Bettery.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/PCI-List.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Brightness-Control.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Audio-Control-1.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Audio-Control-2.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/About.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/Display-Built-In.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/HDMI-Audio-1.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/ASUS-F455LD-i5-4210u/Screens/HDMI-Audio-2.png" alt=""></p><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><h4 id="About-ALCPlugFix"><a href="#About-ALCPlugFix" class="headerlink" title="About ALCPlugFix"></a>About <code>ALCPlugFix</code></h4><p>Firstly，Unzip <code>ALCPlugFix</code> to your desktop after you have installed Hackintosh。<br>Secondly，open terminal：</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cd</span> ~/Desktop/ALCPlugFix/alc_fix$ <span class="token function">chmod</span> +x install.sh$ ./install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>The script can fix your audio with good input and switch。</p><h4 id="About-一键开启HIDPI并注入EDID"><a href="#About-一键开启HIDPI并注入EDID" class="headerlink" title="About 一键开启HIDPI并注入EDID"></a>About <code>一键开启HIDPI并注入EDID</code></h4><p>Just double click <code>双击.command</code>，and input your password。</p><p>Then it can working as Macintosh。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypv9f7dyhj317c0yktmd.jpg" alt=""></p><h3 id="Clover-EFI-bootloader"><a href="#Clover-EFI-bootloader" class="headerlink" title="Clover EFI bootloader"></a>Clover EFI bootloader</h3><p><a href="https://github.com/athlonreg/ASUS-F455LD-i5-4210u/releases" target="_blank" rel="noopener external nofollow noreferrer">ASUS-F455LD-i5-4210u</a></p><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>Please respect the author’s work and please indicate the address of the original post if you want reprint the repo!</p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hacintosh </tag>
            
            <tag> X455LD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯法求子集和问题</title>
      <link href="/Solve-problem-of-subset-sum-with-backtracking-method.html"/>
      <url>/Solve-problem-of-subset-sum-with-backtracking-method.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>子集和问题的一个实例为&lt;S,t&gt;。其中，S={x<sub>1</sub>,x<sub>2</sub>,x<sub>3</sub>,…,x<sub>n</sub>}是一个正整数的集合，c是一个正整数。子集和问题判定是否存在S的一个子集S<sub>1</sub>，使得 S<sub>1</sub>中的所有元素之和等于c。<br>试设计一个解子集和问题的回溯法。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第1行有2个正整数n和c，n表示S的大小，c是子集和的目标值。接下来的1行中，有n个正整数，表示集合S中的元素。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出子集和问题的解。当问题无解时，输出<code>No solution!</code>。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><pre><code>5 102 2 6 5 4</code></pre><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><pre><code>2 2 6</code></pre><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  subset-sum</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by Canvas on 2018/12/31.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 Canvas. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> n 5</span><span class="token macro property">#<span class="token directive keyword">define</span> c 10</span><span class="token keyword">int</span> array<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>sum<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span>            flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%3d"</span><span class="token punctuation">,</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        sum<span class="token operator">+</span><span class="token operator">=</span>array<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">traceback</span><span class="token punctuation">(</span>t<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        sum<span class="token operator">-</span><span class="token operator">=</span>array<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">traceback</span><span class="token punctuation">(</span>t<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">traceback</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"No Solutions!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h3><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypyog7y2mj32c01fewuq.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 子集和问题 </tag>
            
            <tag> 回溯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记本原版黑苹果安装教程</title>
      <link href="/Install-macOS-on-laptop.html"/>
      <url>/Install-macOS-on-laptop.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Clover支持两种启动方式，启动过程如下：</p><ul><li><p>基于<code>BIOS</code>的电脑（老式主板）<br>BIOS -&gt; MBR -&gt; PBR -&gt; boot -&gt; CLOVERX64.efi -&gt; OSLoader</p></li><li><p>基于<code>UEFI</code>的电脑（新式主板）<br>UEFI -&gt; CLOVERX64.efi -&gt; OSLoader</p></li></ul><p>对于支持<code>UEFI</code>的机器，我们通常用<code>CLOVER</code>引导原版安装，这种方式最大的优点就是有恢复分区可以正常升级，当然前提要把引导做好。</p><h3 id="前期知识储备"><a href="#前期知识储备" class="headerlink" title="前期知识储备"></a>前期知识储备</h3><h4 id="CLOVER的目录结构"><a href="#CLOVER的目录结构" class="headerlink" title="CLOVER的目录结构"></a><code>CLOVER</code>的目录结构</h4><p><code>CLOVER</code>正常工作需要的完整目录包括<code>config.plist</code>、<code>CLOVERX64.efi</code>两个文件以及<code>ACPI</code>、<code>drivers64UEFI</code>、<code>kexts</code>、和<code>themes</code>几个目录，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypx6z6l1uj31d00ug7cf.jpg" alt=""></p><p>其中，<code>config.plist</code>是最核心的文件—-配置文件，<code>CLOVER</code>所实现的多数功能都是通过这个文件进行配置的，对其进行配置修改的最好用的工具就是<code>Clover Configurator</code>，主页面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypx78r5udj32201804gw.jpg" alt=""></p><p>详细的配置方法下面会有介绍。</p><p>另外一个文件是<code>CLOVERX64.efi</code>，这个文件用以启动<code>CLOVER</code>引导，通过<code>EasyUEFI</code>或者<code>BIOS</code>对启动项进行添加操作时，就是指向的这个文件。</p><p><code>ACPI</code>是用以存放机器<code>ACPI</code>表单的，全称是”高级配置和电源管理接口”<code>(Advanced Configuration and Power Interface)</code>，其子目录由<code>origin</code>、<code>patched</code>、<code>WINDOWS</code>构成，其中<code>origin</code>用以保存通过在<code>CLOVER</code>引导界面按<code>F4</code>或<code>Fn F4</code>提取的原始表单，此目录的所有表文件是不加载的，需要对其进行编译得到<code>.dsl</code>文件，然后对其进行修改拍错，最后保存成<code>.aml</code>文件保存至<code>patched</code>目录才会在启动时加载，而<code>WINDOWS</code>目录则可以忽略不计。在黑果中，我们用到的表单文件只有<code>SSDT</code>和<code>DSDT</code>，其中<code>DSDT</code>主要是对各种设备的描述，而<code>SSDT</code>则主要是用以实现某个功能。</p><p><code>drivers64UEFI</code>是由各种<code>EFI</code>驱动组成，在笔记本黑果需要用到的有<code>FSInject-64.efi</code>、<code>HFSPlus-64.efi</code>、<code>OsxAptioFixDrv-64.efi</code>、<code>APFS.efi</code>以及<code>OsxFatBinaryDrv-64.efi</code>，在新版<code>CLOVER</code>中只需要<code>FSInject-64.efi</code>、<code>HFSPlus-64.efi</code>、<code>OsxAptioFixDrv-64.efi</code>、以及<code>APFS.efi</code></p><p><code>kexts</code>主要用于存储各种驱动(<code>OS X</code>称为内核扩展)</p><p><code>themes</code>用以存储<code>CLOVER</code>引导界面的主题</p><h4 id="根据机器配置定制kext"><a href="#根据机器配置定制kext" class="headerlink" title="根据机器配置定制kext"></a>根据机器配置定制<code>kext</code></h4><p><code>kext</code>在<code>EFI</code>的配置中是相当重要的，好的<code>kext</code>配置可以弥补<code>config</code>的不足，不好的<code>kext</code>配置也会让本应完美的<code>config</code>发挥不出作用。</p><p><code>FakeSMC.kext</code>:<code>FakeSMC</code>是现今的⿊黑苹果过程中唯⼀一的”必要性”内核扩展程序。对于⿊黑苹果有着⽆与伦比的重要性，但是很多⼈并不知道<code>FakeSMC</code>为什么重要，只是知道必须有它才⾏行，。简⽽而⾔言之就是: <code>FakeSMC</code>是⽤用于将<code>PC</code>主板上的各种控制芯⽚片伪装成Mac独有的硬件控制芯片<code>SMC</code>以骗过系统从⽽而是系统正常启动的⼀一个内核扩展(其实很复杂,这⾥里不多说了)。在系统启动的阶段，<code>FakeSMC</code>负责告知系统有关主板上<code>SMC</code>芯⽚片(伪装出来的)的各种加密信息，欺骗系统。也就是说呢，无论你笔记本是什么配置，此驱动是必须的。</p><p><code>ApplePS2SmartTouchPad.kext</code>、<code>VoodooI2C.kext</code>和<code>VoodooPS2Controller.kext</code>:此驱动用以驱动键盘鼠标以及触摸板，两者选择一个即可，两者区别就是适用的类型不一样，有<code>PS/2</code>、<code>Synaptics</code>、<code>alps</code>、<code>i2c</code>等等，其中<code>Synaptics</code>、<code>alps</code>用<code>ApplePS2SmartTouchPad.kext</code>适配性好一些，<code>VoodooI2C.kext</code>比较麻烦，仅适用于<code>i2c</code>触摸板。具体怎么确定走的总线类型，大家参考百度就好了，这里就不再赘述。</p><p><code>FakePCIID.kext</code>:这个kext的目的是与<code>IOPCIDevice</code>设备建立连接，以便当另一个驱动程序连接到同一设备时，它可以提供备用的<code>PCI ID</code>。也就是说，如果用到<code>Fake-PCI-ID</code>中的其他任何<code>kext</code>的话，此驱动都是必要的。</p><p><code>FakePCIID_Intel_HD_Graphics.kext</code>:此驱动主要用于核显<code>HD4200 HD4400 HD4600 P4600</code>、<code>Iris 540 Iris 550 Iris Pro 580</code>、<code>HD510 HD515 HD520 HD530 P530</code>（多数530不需要这个）、<code>P4000</code>、<code>P6300 - 162a</code>、<code>UHD620 KabyLake-R</code>、<code>UHD630 CoffeeLake</code>。</p><p><code>FakePCIID_Intel_HDMI_Audio.kext</code>:其目的是为不支持的<code>HDAU</code>提供支持(通常称为<code>B0D3</code>，但需要将其重命名为<code>HDAU</code>，以满足<code>Apple</code>的期望值)在<code>Haswell</code>以上的系统中提供<code>HDMI-audio</code>的设备。</p><p><code>FakePCIID_BCM57XX_as_BCM57765.kext</code>:这个<code>kext</code>将与众多不受支持的<code>BCM57XX</code>以太网设备建立连接，以使本机驱动程序为兼容的更广泛的<code>BCM</code>以太网芯片组工作。</p><p><code>FakePCIID_Intel_GbX.kext</code>:这个<code>kext</code>将与一些<code>Intel</code>以太网设备建立连接，以使基于<code>Intel</code>芯片组的驱动程序工作。</p><p><code>FakePCIID_XHCIMux.kext</code>:将会连接到8086:1e31, 8086:9c31, 8086:9cb1, 8086:9c31, 8086:8cb1这个注入器是正常的<code>FakePCIID</code>任务的一部分。它实际上并没有伪造任何<code>PCI id</code>。相反，它将某些值强加于<code>Intel XHCI USB3</code>控制器上的<code>XUSB2PR</code> (PCI配置偏移<code>0xD0</code>)。其效果是将任何<code>USB2</code>设备与<code>XHC</code>端口上的<code>USB2</code>引脚连接到<code>EHC1</code>。换句话说，使用USB2驱动而不是<code>USB3</code>驱动程序(<code>AppleUSBEHCI vs AppleUSBXHCI</code>)处理<code>USB2</code>设备。</p><p><code>FakePCIID_AR9280_as_AR946x</code>:这是<code>FakePCIID.kext</code>的特殊应用，是在一个<code>AR9280</code>被重新命名为其他设备的情况下使用的。例如，在联想<code>u430</code>中，将一个<code>AR9280</code>作为<code>AR946x</code>重新命名是很有用的，因为该设备可以被<code>BIOS</code>白名单所允许，而<code>AR9280</code>不是。通过使用<code>FakePCIID</code>，我们可以将<code>PCI id</code>重新映射回<code>AR9280</code> (168c:002a)，即使该设备本身报告的是168c:0034。</p><p><code>FakePCIID_Broadcom_WiFi.kext</code>:这个<code>kext</code>将连接到14e4:43b1, 14e4:4357, 14e4:4331, 14e4:4353, 14e4:432b, 14e4 . 432b, 14e4:43a3，或14e4:43a0。以及106b:4e, 14e4:4312, 14e4:4313, 14e4:4318, 14e4:431a, 14e4:4320, 14e4:4324, 14e4:4324, 14e4:4328, 14e4:432d。<br>最初是为<code>BCM94352Z</code>创建的，这个特殊的FakePCIID应用程序。在使用多种支持的Broadcom WiFi设备时，kext被用来模拟真正的<code>Apple Airport</code>(苹果无线网卡)。</p><p><code>ACPIBatteryManager.kext</code>:用以使笔记本正确显示电量，但通常需要配合<code>DSDT</code>的<code>patch</code>才能发挥作用。</p><p><code>VoodooHDA.kext</code>:万能声卡驱动，用以禁用<code>AppleHDA</code>来驱动声卡。</p><p><code>AppleALC.kext</code>:通过对<code>AppleHDA</code>的动态<code>patch</code>实现对<code>AppleHDA</code>的完整加载。</p><p><code>Lilu.kext</code>:一个开放源码的内核扩展，为macOS系统提供了一个任意的kext、库和程序补丁的平台。</p><p><code>IntelGraphicsDVMTFixup.kext</code>:修复因<code>BIOS</code>显存分配不足造成的<code>KP</code>。建议<code>broadwell+</code>平台使用。</p><p><code>IntelGraphicsFixup.kext</code>:动态修复核显的各种问题(例如腾讯视频死机，开机二阶段花屏等)，建议<code>Haswell+</code>平台使用。</p><p><code>CoreDisplayFixup.kext</code>:为不受支持的4K机器(非<code>Iris</code>)开启高分辨率支持。</p><p><code>AzulPatcher4600.kext</code>:针对<code>HD4600</code>的额外修复，仅推荐<code>HD4600</code>使用。</p><p><code>HibernationFixup.kext</code>:修复睡眠，以支持某些机器在3和28休眠模式下的正常休眠。</p><p><code>NvidiaGraphicsFixup.kext</code>:修复某些n卡的黑屏。</p><p><code>WhateverGreen.kext</code>:用以驱动A卡。</p><p><code>RealtekRTL8111.kext</code>:用以驱动<code>RealtekRTL8111.kext</code>以太网卡设备。</p><p><code>AppleIGB.kext</code>、<code>IntelMausiEthernet.kext</code>:用以驱动<code>Intel</code>板载网卡设备。</p><h4 id="根据机器配置定制config"><a href="#根据机器配置定制config" class="headerlink" title="根据机器配置定制config"></a>根据机器配置定制<code>config</code></h4><p>Clover 可以根据硬件进行自动配置，但是自动配置组件并不总是完美的。这也是保留用户可以自定义配置的原因。用户可以修改配置文件config.plist中的配置参数，或者基于GUI的配置界面进行修改配置。配置文件是基于XML的，可以以文本文件来处理。它可以用纯文本编辑器进行编辑，也可以用plist编辑器进行编辑，如PlistEdit。配置文件 (config.plist) 必须放在EFI/CLOVER目录下。</p><p>这里遵循一个原则，尽可能简单的设置<code>config</code>，不知道具体作用的就让他空着好了，如果你不知道参数的需求值是什么，就从配置文件中排除！不要用没有值的参数。</p><p>正所谓前人种树，后人乘凉，很多黑果的热心朋友已经为我们做好了教程，这里我直接拿来用了。</p><ul><li><p>ACPI-1<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121626u0o5h11990kh1r33.png" alt=""></p></li><li><p>ACPI-2</p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121629ijh2l2jdalnhra2n.png" alt=""></p></li><li><p>BOOT<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121658p0frjvu3sjz9z37r.png" alt=""></p></li><li><p>CPU<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121728lnyrccjxneyetxvv.png" alt=""></p></li><li><p>Device<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121744z1nnvyp70cbssk0y.png" alt=""></p></li><li><p>Disable Drivers<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121801fyyuyzdzdxkc1wxc.png" alt=""></p></li><li><p>GUI<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121819ba3c3r9mouvarrtm.png" alt=""></p></li><li><p>Graphics<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121831o2lsqlapp37a6l2z.png" alt=""></p></li><li><p>Kernel and Kext Patches<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121846xlpkzayr3jlct65t.png" alt=""></p></li><li><p>Rt Variables<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121920n772424sgkim24p0.png" alt=""></p></li><li><p>SMBIOS<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121933fj4gpa5jpjj1aacp.png" alt=""></p></li><li><p>System Parameters<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/121945e61wtermr920qyar.png" alt=""></p></li></ul><p>不敢下手的没关系，我给一个最简单的模板，全按这个来就足可以装上最常见的。<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122340gw8bz7ku2ubjw7vz.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122356absls8lhbxbxbxee.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122406pv9aybc2a2jrizk9.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122419njauccpvj2uybb91.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122434wsbghgcdn6scghcd.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122446qq8c4ppsewgqhvmj.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122459v7oogbi4oapbn4di.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122509pqz23ch3sw39yorz.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122525z5v2224w32275wjz.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122537avefcll6efmm0ecl.jpg" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/122549oxl774dd7uvt8kgg.jpg" alt=""></p><p>敢下手了，没有<code>Mac</code>环境？没关系，送你们在线编辑器，点这里<a href="http://cloudclovereditor.altervista.org/cce/index.php" target="_blank" rel="noopener external nofollow noreferrer">传送门</a>。里面目前加入了一些常见的配置，帮你完成一部分工作。</p><h4 id="了解drivers64UEFI各个-EFI文件的作用，精简引导"><a href="#了解drivers64UEFI各个-EFI文件的作用，精简引导" class="headerlink" title="了解drivers64UEFI各个.EFI文件的作用，精简引导"></a>了解<code>drivers64UEFI</code>各个<code>.EFI</code>文件的作用，精简引导</h4><p><code>BIOS</code>启动过程中要用到<code>drivers32</code>或<code>drivers64</code>目录，<code>UEFI</code>启动过程中则使用<code>drivers64UEFI</code>目录。它们的内容会根据配置和<code>BIOS版本</code>而有所不同。</p><p>必须要提的一点是这些驱动程序只在<code>bootloader</code>运行时有效，不会影响最终启动的操作系统。</p><p>至于到底要使用哪些驱动程序由用户来决定。</p><ul><li>NTFS.efi</li></ul><p><code>NTFS</code>文件系统驱动程序。用于启动<code>Windows EFI</code>系统。</p><ul><li><p>HFSPlus.efi<br><code>HFS+</code>文件系统驱动程序。这个驱动对于<code>10.13</code>之前的系统版本来启动<code>Mac OS X</code>是必须的。</p></li><li><p>APFS.efi<br><code>APFS</code>文件系统驱动程序。这个驱动对于在<code>10.13</code>的系统版本通过<code>APFS</code>装的黑果来启动<code>Mac OS X</code>是必须的。</p></li><li><p>VBoxHFS.efi<br><code>HFSPlus.efi</code>的替代品，性能要差一点。</p></li><li><p>VBoxExt2.efi<br><code>EXT2/3</code>文件系统驱动。用于启动<code>Linux EFI</code>系统。</p></li><li><p>VBoxExt4.efi<br><code>EXT4</code>文件系统驱动。用于启动<code>Linux EFI</code>系统。</p></li><li><p>FSInject.efi<br>控制文件系统注入<code>kext</code>到系统的可能性。</p></li><li><p>PartitionDxe.efi<br>已经存在于在<code>CloverEFI</code>和<code>UEFI</code>中，但没有为<code>Apple</code>分区优化，也没有为<code>GPT/MBR</code>优化。</p></li><li><p>OsxFatBinaryDrv.efi<br>允许加载<code>FAT</code>模块比如<code>boot.efi</code>。</p></li><li><p>OsxAptioFixDrv.efi<br>修复<code>AMI Aptio EFI</code>内存映射。如果没有就不能启动<code>OS X</code>。</p></li><li><p>OswLowMemFix.efi<br>是<code>OsxAptioFixDrv</code>的简化版。两个不能同时使用。</p></li><li><p>DataHubDxe.efi<br>已经存在于在<code>CloverUEFI</code>中。建议还是使用它，不会产生冲突。</p></li><li><p>CsmVideoDxe.efi<br>比<code>UEFI</code>里提供更多分辨率的显卡驱动。</p></li></ul><p>看了这么多，千万不要崩溃，我告诉大家一个经验，一般<code>Drivers64UEFI</code>目录只需要下面几个<code>.EFI</code>驱动就够了。</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypxgosqdqj31d00ug461.jpg" alt=""></p><h4 id="进攻ACPI，完美黑苹果-进阶篇"><a href="#进攻ACPI，完美黑苹果-进阶篇" class="headerlink" title="进攻ACPI，完美黑苹果(进阶篇)"></a>进攻<code>ACPI</code>，完美黑苹果(进阶篇)</h4><p>论坛贡献会员<a href="http://i.pcbeta.com/space-uid-3322572.html" target="_blank" rel="noopener external nofollow noreferrer">daxuexinsheng</a>已经翻译了<code>RehabMan</code>的<code>DSDT</code>教程，可以说是非常详细，可以直接参考:<a href="http://i.pcbeta.com/space-uid-3322572.html" target="_blank" rel="noopener external nofollow noreferrer">使用补丁修改DSDT/SSDT</a>，以及<a href="https://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/" target="_blank" rel="noopener external nofollow noreferrer">RehabMan的原贴</a>。</p><p>如果你喜欢<code>hotpatch</code>，可以参考我的翻译帖<a href="https://blog.iamzhl.top/Clover-ACPI-hotpatch.html" target="_blank" rel="noopener external nofollow noreferrer">Clover-ACPI-hotpatch</a>，不过由于我太懒还没翻译完哈哈。当然还是推荐<a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="noopener external nofollow noreferrer">RehabMan的原贴</a>。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>集成<code>CLOVER</code>的原版镜像<blockquote><p>链接:<a href="https://pan.baidu.com/s/1gfTmRj9" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1gfTmRj9</a>  密码:s3dv</p></blockquote></li><li><code>Transmac</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1oAn79Zc" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1oAn79Zc</a>  密码:yafn</p></blockquote></li><li><code>easyUEFI</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1nwqbnMp" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1nwqbnMp</a>  密码:gxoc</p></blockquote></li><li><code>Clover Configurator</code>四叶草助手<blockquote><p>链接:<a href="https://pan.baidu.com/s/1ht2wFQW" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1ht2wFQW</a>  密码:tbce</p></blockquote></li><li><code>DiskGenius</code><blockquote><p>链接:<a href="https://pan.baidu.com/s/1cVyULo" target="_blank" rel="noopener external nofollow noreferrer">https://pan.baidu.com/s/1cVyULo</a>  密码:pfrm</p></blockquote></li><li>鲁大师/<code>AIDA64</code>(推荐)/也可以用设备管理器<blockquote><p>自行度娘</p></blockquote></li></ul><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="利用Transmac将原版镜像写入u盘"><a href="#利用Transmac将原版镜像写入u盘" class="headerlink" title="利用Transmac将原版镜像写入u盘"></a>利用<code>Transmac</code>将原版镜像写入u盘</h4><p>打开<code>TransMac</code>,右键选择欲制作的<code>USB</code>盘符，选择Restore with Disk Image,选择下载好的dmg文件,会弹出窗口,提示将要格式化USB磁盘,点击OK按钮继续，耐心等待写盘的完成。写入完成，若弹出对话框提示将其格式化，点击取消。</p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123110fb0rhybrbj5nndjt.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123127oztcc33jllj2l0li.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123137nl7xl0340ublz66b.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123147b69lwm99q5p6jd5q.png" alt=""></p><h4 id="利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext"><a href="#利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext" class="headerlink" title="利用鲁大师等软件查看自己机器的配置信息，来定制config和需要用的kext"></a>利用鲁大师等软件查看自己机器的配置信息，来定制<code>config</code>和需要用的<code>kext</code></h4><p>这一步想必不用我多说，大家利用鲁大师或者<code>AIDA64</code>看一下自己配置好了。有一点提示，尽量在安装过程中不考虑各种<code>kext</code>，尽量用少的驱动去安装，安装完成后再完善驱动，这样可以减少许多安装中的错误，也利于排错，但需要注意的必备的驱动一定要放，例如<code>FakeSMC.kext</code>、还有就是键盘驱动。当然老鸟无所谓了，直接把需要用到的都放上就<code>OK</code>了。以我自己机器为例，配置如下：</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">主板</span> <span class="token attr-value">      Asus X455LD Intel Haswell-ULT - Lynx Point-LP</span><span class="token attr-name">独立显卡</span> <span class="token attr-value">   Nvidia GeForce 820M 2G </span><span class="token attr-name">核心显卡</span> <span class="token attr-value">   HD4400</span><span class="token attr-name">声卡</span> <span class="token attr-value">       Realtek @ Intel Lynx Point-LP  High Definition Audio (CX20751)</span><span class="token attr-name">以太网卡</span> <span class="token attr-value">   Realtek RTL8168/8111/8112 Gigabit Ethernet Controller / Asus</span><span class="token attr-name">无线网卡</span> <span class="token attr-value">   Atheros AR956X</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按照上面的驱动简要说明，我以太网卡是<code>RTL8111</code>，那么需要<code>RTL8111.kext</code>、核心显卡是<code>HD4400</code>，就需要<code>FakePCIID.kext</code>、<code>FakePCIID_Intel_HD_Graphics.kext</code>，声卡比较麻烦，暂时不考虑，无线网卡是<code>Atheros AR956X</code>，那么我需要<code>ATH9KFixup.kext</code>，又要依赖<code>Lilu.kext</code>，所以需要<code>Lilu.kext</code>，四代低压机器，我需要<code>IntelGraphicsFixup.kext</code>来解决腾讯视频死机的问题，所以放上这个。暂时只考虑这些驱动吧，下面就进入安装阶段。</p><h4 id="重启利用U盘启动选择安装盘"><a href="#重启利用U盘启动选择安装盘" class="headerlink" title="重启利用U盘启动选择安装盘"></a>重启利用<code>U</code>盘启动选择安装盘</h4><p>开机按<code>esc</code>键进入启动项列表，不同厂商热键不同，参考下图：<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123342i0kax4jeex4kxl1l.jpg" alt=""></p><p>选择<code>U</code>盘进入，这里就不介绍太多了，大家玩黑果的想必对<code>BIOS</code>不会陌生，不过需要注意的是需要将<code>BIOS</code>中的安全启动关掉。</p><p>接下来就会进入<code>CLOVER</code>引导界面<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123436r9uzbziauaazi77d.png" alt=""></p><p>通过键盘方向键选中<code>Boot OS X Install from ***</code>，<code>***</code>代表你的镜像名字，然后回车。<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123450nxolxguuoyojuxh8.png" alt=""></p><p>等待进入安装界面。<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123541p0mrznyycz33j0q7.png" alt=""></p><p>这里选择自己擅长的语言好啦。</p><h4 id="磁盘工具分区"><a href="#磁盘工具分区" class="headerlink" title="磁盘工具分区"></a>磁盘工具分区</h4><p>选择磁盘工具，并继续<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123624he2v5r5joo5jfyvy.png" alt=""></p><p>选择<code>显示所有设备</code><br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123636dl8z3jh7px38h3i2.png" alt=""></p><p>选择SSD Media,点击抹掉按钮,选择默认的<code>Mac OS</code>扩展(日志型)，在<code>10.13</code>中如果装在<code>SSD</code>上，也可以选择<code>APFS</code>,将名称修改为<code>Macintosh HD</code>（名字随意啦，自己喜欢就好，但要是英文）,点击抹掉按钮，抹掉完成后，点击完成按钮。<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123750eo7bfz0bp2gfqq72.png" alt=""></p><p>然后退出磁盘工具，到这里，磁盘工具的动作就已经结束了。</p><h4 id="退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装"><a href="#退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装" class="headerlink" title="退出磁盘工具，选择安装macos选中刚才抹掉的分区开始安装"></a>退出磁盘工具，选择安装<code>macos</code>选中刚才抹掉的分区开始安装</h4><p>选择安装<code>macOS</code>，并继续<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123826uoc40cd7vzodvx5k.png" alt=""></p><p>接下来按照提示一步一步来就好了，有一步需要注意的就是选择安装分区时，选择自己之前抹掉的那个分区。<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123849xx77k7nn5xr373s6.png" alt=""></p><p>接下来静静等待，会有一次自动重启，依然用<code>U</code>盘启动，注意这次会在引导界面多出一个图标，选择除第一次选的图标外的另一个图标。然后继续等待<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/123922tprp9szr9yv9vsgm.png" alt=""></p><p>系统安装完成后,重启进入系统设置向导，接下来根据下面的图一步一步设置就好了<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124016wh77dawhgh4e7dz7.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124102txilt1lltrrr7sll.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124134f93ibz7lqgi2qm79.png" alt=""></p><p>这里选择现在不传输任何信息<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124209s8fjumefqmf77leu.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124311dfzzq5282vvf8q7q.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124345dxbdfiiti3ip3jtb.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124355klcgmlp7f97f4cuz.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124417aiqch1qpt28ccc1x.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124442lamc6vwc66vvvivc.png" alt=""></p><p>这里注意，一定不要选择加密！！！<br><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124453pjo4ulfrvju45d5j.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124530rarc5swiqq2r21ip.png" alt=""></p><p><img src="http://bbs.pcbeta.com/data/attachment/forum/201803/26/124541y2dcnv2d4nzfnilf.png" alt=""></p><h3 id="转移CLOVER到硬盘ESP，摆脱U盘引导"><a href="#转移CLOVER到硬盘ESP，摆脱U盘引导" class="headerlink" title="转移CLOVER到硬盘ESP，摆脱U盘引导"></a>转移<code>CLOVER</code>到硬盘<code>ESP</code>，摆脱<code>U</code>盘引导</h3><p>这里用到前期准备的<code>EasyUEFI</code>，在<code>Windows</code>下安装打开此软件，添加<code>CLOVER</code>启动项，并置顶。具体操作参考：<a href="http://bbs.pcbeta.com/viewthread-1683571-1-1.html" target="_blank" rel="noopener external nofollow noreferrer">黑苹果安装从0开始—-clover优盘引导改硬盘引导篇</a></p><h3 id="后期的驱动安装以及优化"><a href="#后期的驱动安装以及优化" class="headerlink" title="后期的驱动安装以及优化"></a>后期的驱动安装以及优化</h3><h4 id="屏蔽无用的独显降低温度"><a href="#屏蔽无用的独显降低温度" class="headerlink" title="屏蔽无用的独显降低温度"></a>屏蔽无用的独显降低温度</h4><p>参考我之前的帖子：<a href="https://blog.iamzhl.top/Disable-the-discrete-GPU-in-laptop.html" target="_blank" rel="noopener external nofollow noreferrer">Disable the discrete GPU in laptop</a></p><h4 id="摆脱万能声卡，利用AppleALC加载原生声卡"><a href="#摆脱万能声卡，利用AppleALC加载原生声卡" class="headerlink" title="摆脱万能声卡，利用AppleALC加载原生声卡"></a>摆脱万能声卡，利用<code>AppleALC</code>加载原生声卡</h4><p>参考我之前的帖子：<a href="https://blog.iamzhl.top/Driver-audio-for-hackintosh.html" target="_blank" rel="noopener external nofollow noreferrer">Driver-audio-for-hackintosh</a><br>还有这个帖子：<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1763452&amp;highlight=AppleALC" target="_blank" rel="noopener external nofollow noreferrer">自己动手用上AppleALC，使用原生AppleHDA</a></p><h4 id="通过对DSDT打补丁完善电池显示"><a href="#通过对DSDT打补丁完善电池显示" class="headerlink" title="通过对DSDT打补丁完善电池显示"></a>通过对<code>DSDT</code>打补丁完善电池显示</h4><p>参考<code>pcbeta</code><a href="http://bbs.pcbeta.com/viewthread-1595139-1-1.html" target="_blank" rel="noopener external nofollow noreferrer">daxuexinsheng的帖子</a><br><code>tonymacx86</code><a href="https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/" target="_blank" rel="noopener external nofollow noreferrer">RehabMan的帖子</a></p><h4 id="加载x86实现变频和原生电源管理，完善节能器信息"><a href="#加载x86实现变频和原生电源管理，完善节能器信息" class="headerlink" title="加载x86实现变频和原生电源管理，完善节能器信息"></a>加载<code>x86</code>实现变频和原生电源管理，完善节能器信息</h4><ul><li>对于<code>Haswell</code>以及<code>Broadwell</code>平台，利用<code>ssdtPRGen</code>生成<code>SSDT</code>，在<code>config</code>中<code>drop</code>掉<code>CpuPm</code>和<code>Cpu0Ist</code>两个表，并利用<code>FakeSMC</code>或<code>DSDT</code>或<code>hotpatch</code>加载<code>AppleLPC</code></li><li>对于<code>Skylake</code>及以上平台，选择支持<code>HWP</code>的合适的机型，并勾选<code>HWPEnable</code>。</li></ul><h4 id="注入HiDPI和显示器信息完善唤醒后的花屏、闪屏、撕裂屏问题"><a href="#注入HiDPI和显示器信息完善唤醒后的花屏、闪屏、撕裂屏问题" class="headerlink" title="注入HiDPI和显示器信息完善唤醒后的花屏、闪屏、撕裂屏问题"></a>注入<code>HiDPI</code>和显示器信息完善唤醒后的花屏、闪屏、撕裂屏问题</h4><p>参考：<a href="http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1722308&amp;highlight=HIDPI" target="_blank" rel="noopener external nofollow noreferrer">macOS Sierra 10.12下 开启HiDPI 傻瓜式开启教程</a></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>本帖多处引用现成帖子，只是将整个流程做个陈述，意在整理思路，以便大家更好地理解实践。本人水平有限，帖子中的不正确之处希望大家积极批评指出，一起完善。</p><p>楼主真的是懒到蜕皮(手动滑稽哈哈)帖子中图片很多是出自黑果小兵的博客：<a href="https://blog.daliansky.net/MacOS-installation-tutorial-XiaoMi-Pro-installation-process-records.html" target="_blank" rel="noopener">macOS安装教程兼小米Pro安装过程记录</a>。</p><p>感谢各位黑果前辈的好帖子，引用太多，文中也有说明，就不一一列出了。</p><p>待续……</p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> Hacintosh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 AppleALC 驱动声卡</title>
      <link href="/Driver-audio-for-hackintosh.html"/>
      <url>/Driver-audio-for-hackintosh.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在<code>vit9696</code>推出<code>AppleALC</code>后，经过越来越多人仿冒声卡得到的数据的提交整理，<code>AppleALC</code>的数据越来越集中，也使声卡驱动变得越来越简单。</p><p>本文提供使用<code>AppleALC</code>驱动声卡的思路以及常见错误和驱动后的问题进行修复。</p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li><p>需要下载<code>Xcode</code></p><blockquote><p>在<code>AppleStore</code>下载</p></blockquote></li><li><p>下载<code>AppleALC</code></p><blockquote><p>通过终端执行下面的命令，会下载到你的用户根目录</p></blockquote></li></ul><pre><code>$ git clone https://github.com/vit9696/AppleALC</code></pre><ul><li>下载<code>Lilu</code><blockquote><p>在下面的网址下载<code>DEBUG</code>和<code>RELEASE</code></p></blockquote></li></ul><pre><code>https://github.com/vit9696/Lilu/releases</code></pre><ul><li>提取<code>Codec</code><blockquote><p>这一步需要用到<code>Linux</code>环境，首先下载<code>Ubuntu</code>镜像，我个人提供一个</p></blockquote></li></ul><pre><code>链接:http://pan.baidu.com/s/1i47I0jN  密码:de4v</code></pre><blockquote><p>当然也可以去官网下载，下载好镜像之后，将<code>U</code>盘格式化为<code>Fat32</code>，然后将镜像解压到<code>U</code>盘，重启以<code>U</code>盘启动，选择试用进入<code>Ubuntu</code>系统界面，打开终端输入</p></blockquote><pre><code>$ cat /proc/asound/card0/codec#0 &gt; ~/Desktop/Codec.txt</code></pre><blockquote><p>执行完后会将<code>Codec.txt</code>提取到桌面，将其保存到<code>U</code>盘</p></blockquote><p><strong>PS: 一般来说提取的<code>Codec</code>会有<code>10k</code>左右大小，如果大小不够，很有可能提取错误，可以尝试以下命令</strong></p><pre><code>$ cat /proc/asound/card0/codec#1 &gt; ~/Desktop/Codec.txt</code></pre><blockquote><p>或者</p></blockquote><pre><code>$ cat /proc/asound/card0/codec#2 &gt; ~/Desktop/Codec.txt</code></pre><blockquote><p>或者</p></blockquote><pre><code>$ cat /proc/asound/card1/codec#0 &gt; ~/Desktop/Codec.txt</code></pre><h2 id="Codec-txt的数据整理"><a href="#Codec-txt的数据整理" class="headerlink" title="Codec.txt的数据整理"></a><code>Codec.txt</code>的数据整理</h2><ul><li>记录<code>Address</code>和<code>Vendor Id</code>值</li></ul><blockquote><p><code>Codec.txt</code>开头部分</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rlxkhmkj31qc1f6awh.jpg" alt=""></p><ul><li>提取节点信息</li></ul><blockquote><p>搜索<code>Pin Default</code>记录<code>Node</code>和节点描述，以我的为例</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rp1h1zqj31qc1f6tu9.jpg" alt=""></p><p><strong>PS: N/A节点无效无需整理</strong></p><ul><li>记录<code>HP Out at Ext Left</code>节点的<code>tag</code>和<code>enable</code>值</li></ul><blockquote><p>PS: Unsolicited Response的设定是为了解决耳机和外放切换的问题。<br>需设定 HP Out at Ext 所在的节点，并且节点信息中有Unsolicited: tag=xx, enabled=1 这一行。<br>设定命令为Address+NodeID+708+&lt;设定值&gt;</p><p>设定值是8位的一个二进制数，记作a7 a6 a5 a4 a3 a2 a1 a0，推算出此二进制数之后，四四拆分转换为2位的十进制数加1即为此设定值</p><p>a7表示enabled。<br>a6=0，没具体应用，不用管。<br>a5~a0，存放tag。**</p></blockquote><ul><li>记录<code>Mic at Ext</code>节点的<code>Pin-ctls</code>值</li></ul><blockquote><p>PS: Pin Control Widget的设定是为了解决耳机杂音的。</p><p>需要设定的是 Mic at Ext  所在的节点，设定的值可以从codec dump中读取。</p><p>设定命令是 Address+NodeID+707+Pin-ctls值。</p></blockquote><blockquote><p>整理完后，会得到如下所示的数据集合</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0ruzqsv0j31qc1f6h0k.jpg" alt=""></p><p><strong>PS: 常见的节点设备描述如下：</strong></p><blockquote><p><code>Mic at Ext</code>–线路输入(耳麦)</p><p><code>Mic at In</code>–内建输入</p><p><code>HP Out</code>–耳机扬声器</p><p><code>Speaker</code>–内建扬声器(外放)</p></blockquote><p align="center"><b>至此，Codec 数据的整理到此结束</b></p><h2 id="AppleALC中数据的筛选"><a href="#AppleALC中数据的筛选" class="headerlink" title="AppleALC中数据的筛选"></a><code>AppleALC</code>中数据的筛选</h2><blockquote><p>依次打开下载的<code>AppleALC</code>源码里面<code>/AppleALC/Resources/PinConfigs.kext/Contents</code>下的<code>Info.plist</code></p><p>搜索之前记录的<code>CodecID</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rr0c3j7j31i21fc1bi.jpg" alt=""></p><blockquote><p>记录搜索到的所有的<code>ID</code>中的<code>configdata</code>，如下整理</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rtddnoij31qc1f6tn4.jpg" alt=""></p><blockquote><p>每一行的每一串的第一个字符代表<code>Address</code>值</p></blockquote><blockquote><p>每一行的第三串倒数第二个字符代表这个节点的设备描述，具体对应关系如下</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rsd7nz6j30u00zagt5.jpg" alt=""></p><blockquote><p>根据上图设备对应关系和<code>Address</code>值排除掉无效的<code>ID</code>数据</p></blockquote><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><ul><li>将下载的<code>Debug</code>的<code>Lilu.kext</code>放进 AppleALC 源码根目录；</li><li>删除<code>/AppleALC/Resources</code>中多余文件夹，只留下你的声卡型号文件夹、<code>Pinconfigs.kext</code>以及四个<code>plist</code>文件，以<code>cx20751</code>这个声卡为例剩下如下文件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rwbp9r0j31js11i12t.jpg" alt=""></p><ul><li>然后打开计算器，显示为编程器</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rwzv78dj30sc0wmdm0.jpg" alt=""></p><ul><li>打开你整理的<code>Codec</code>，找到<code>Vendor Id</code>，拷贝后面的字符串，在计算器选中十六进制，粘贴这个字符串</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rxl8nrzj30sc0wmgqq.jpg" alt=""></p><ul><li>然后选中十进制，就换转换成十进制形式</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rxs4ee3j30sc0wmdl1.jpg" alt=""></p><ul><li>拷贝这个十进制数，打开<code>/AppleALC/Resources/CX20751_2/Info.plist</code>(此处的<code>CX20751_2</code>需要换成你的声卡型号)，把<code>codecid</code>换成刚才拷贝的十进制数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0rzb85g2j31i21fcam3.jpg" alt=""></p><ul><li><p>保存退出，右键<code>PinConfigs.kext</code>显示包内容，打开里面的<code>Info.plist</code>，搜索刚才拷贝的十进制数，记下<code>LayoutID</code>数据，有几个记几个，都记下来，然后将<code>IOKitPersonalities-&gt;HDA Hardware Config Resource-&gt;HDAConfigDefault</code>中的其他型号删除，(为避免出错，这里的删除可以不操作，删除只是为了精简做出来的<code>AppleALC</code>)，保存退出。</p></li><li><p>然后双击打开 AppleALC 中的工程文件：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s19qdobj32cg1fau0r.jpg" alt=""></p><ul><li>按图示操作</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s1lqb2zj32gy1fa1kx.jpg" alt=""></p><ul><li>点击右面的<code>Distribute Content</code> </li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s2jqwz6j320w18q7h5.jpg" alt=""></p><ul><li>next </li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s2qqvltj320w18qnaw.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s3cxnnhj320w18qaoa.jpg" alt=""></p><ul><li><code>Export As</code>填上桌面，点<code>export</code>就生成<code>AppleALC</code>在桌面上了，一层一层打开它，将其中的<code>AppleALC.kext</code>放到<code>clover</code>驱动目录，注意之前下载的<code>Release</code>的<code>Lilu</code>也要放到<code>clover</code>驱动目录，最后不要忘了注入<code>LayoutID</code>：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s69hvhfj31rg1fi4fa.jpg" alt=""></p><ul><li>如果重启后你的声卡不能驱动，或者已驱动但是没有输入或输出，这时很有可能是该<code>LayoutID</code>对应的<code>configdata</code>数据有错误，这时就挨个尝试刚才记录的所有<code>ID</code>。</li></ul><p align="center"><b>至此， AppleALC 驱动声卡部分结束。</b></p><h2 id="关于解决耳机与内建输入的切换"><a href="#关于解决耳机与内建输入的切换" class="headerlink" title="关于解决耳机与内建输入的切换"></a>关于解决耳机与内建输入的切换</h2><blockquote><p>如果驱动工作完成后，声卡可以工作，但不能自动切换，请接着往下看</p></blockquote><ul><li>打开终端，输入 </li></ul><pre><code>git clone https://github.com/goodwin/ALCPlugFix </code></pre><ul><li>回车就将<code>ALCPlugFix</code>下载到了你的用户目录，打开此目录中的<code>ALCPlugFix</code>中的<code>main.m</code>下拉到最下方，注意这一部分：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0s84o8vij31qc1f6twi.jpg" alt=""></p><ul><li>下载<a href="https://github.com/RehabMan/EAPD-Codec-Commander.git" target="_blank" rel="noopener external nofollow noreferrer"><code>CodecCommander</code></a></li></ul><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/athlonreg/ALCPlugFix.git$ <span class="token function">git</span> clone https://github.com/RehabMan/EAPD-Codec-Commander.git$ <span class="token function">cp</span> ALCPlugFix/alc_fix/hda-verb /usr/local/bin/$ <span class="token function">cd</span> EAPD-Codec-Commander$ ./widget_dump.sh <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>回车</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0swd71qcj31p818kank.jpg" alt=""></p><ul><li>找到<code>nid = 0x19</code>和<code>nid = 0x1a</code>，这里我的<code>19</code>为 <code>line in</code>，<code>1a</code>为<code>mic in</code>，记录下最后两位，我的是<code>04</code>和<code>24</code>就这么改</li></ul><p><strong>PS: 这里需要设定的节点数据分别是<code>line in</code>和<code>mic in</code>，其他节点无效，思想就是捕获系统在不插耳机时由于其输入输出正常的这两个节点的输出值，然后就可以知道插耳机正常应该输出的值，进而利用<code>AppleALC</code>守护进程动态守护。如果出现插耳机正常，不插无效的情况，请按照这个思路反过来操作，思想都是一样的。其中图上的高亮处最上面一部分是默认情况，中间是耳机移除，最下面是耳机插入，请结合自身使用情况合理设定</strong></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0syo8oezj31qc1f6qqy.jpg" alt=""></p><ul><li><p>保存退出，双击按照<code>AppleALC</code>的编译方法编译这个</p></li><li><p>然后将生成的<code>ALCPlugFix</code>替换<code>alc_fix</code>中的<code>ALCPlugFix</code>，终端<code>cd</code>到<code>alc_fix</code>目录，执行 </p></li></ul><pre><code>$ ./install.sh</code></pre><ul><li>耳机就可以自动切换了，三节点的朋友运气好的话杂音应该也解决了，这时插入耳机在执行 </li></ul><pre><code>$ ./widget_dump.sh </code></pre><ul><li>就可以发现之前的<code>19</code>和<code>1a</code>后面的数据反过来了(我这里是修复好的，就不再演示了。。。)</li></ul><blockquote><p>其实这里的数据就是侦测耳机插拔状态，向系统发送相关指令来做到切换正常</p><p>需要设定的就是两个节点<code>Mic at Ext</code>(有时是<code>Line In</code>)和<code>Mic at In</code></p><p><code>Mic at Ext</code>(有时是<code>Line In</code>)表示线路输入，即<code>耳麦</code>，多为<code>0x19</code>节点</p><p><code>Mic at In</code>为内建输入</p></blockquote><ul><li>如果不行重启一次应该就好了。</li></ul><p align="center"><b>至此，解决耳机与内建输入的切换部分结束。</b></p><h2 id="关于唤醒无声"><a href="#关于唤醒无声" class="headerlink" title="关于唤醒无声"></a>关于唤醒无声</h2><blockquote><p>可以先尝试下面两个驱动</p><p><a href="https://github.com/RehabMan/EAPD-Codec-Commander" target="_blank" rel="noopener external nofollow noreferrer">CodecCommander</a><br><a href="http://pan.baidu.com/s/1nuTUVS9" target="_blank" rel="noopener external nofollow noreferrer">EAPDFix</a> 提取密码:<code>w4yr</code></p></blockquote><p><strong>PS: 关于<code>CodecCommander</code>，可以<a href="https://github.com/RehabMan/EAPD-Codec-Commander/blob/master/README.md" target="_blank" rel="noopener external nofollow noreferrer">点击这里</a>参考<code>RehabMan</code>的说明</strong></p><blockquote><p>另外四叶草助手中也提供了相关选项(<code>ResetHDA</code>和<code>dartweak</code>)，但是本人没有亲自尝试，大家可以自行尝试这些组合：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0stj21kcj3220180dvi.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0st47xc9j32201801a0.jpg" alt=""></p><p align="center"><b>本人对唤醒无声研究不多，至此，解决耳机与内建输入的切换部分结束，欢迎补充。</b></p><h2 id="关于万能声卡"><a href="#关于万能声卡" class="headerlink" title="关于万能声卡"></a>关于万能声卡</h2><blockquote><p>很多人不喜欢万能声卡，说万能有杂音(但是<code>有一些人的AppleALC</code>也可能有杂音)，甚至说用万能声卡是不完美的表现，其实我认为不然，万能是一种很好的渠道，有不少人用万能声卡，他们的切换、输入甚至<code>HDMI</code>都能很好的输出，而且杂音也是可以减小的。</p><p>这里我给出官方的项目地址，有兴趣的可以试一下</p><p><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="noopener external nofollow noreferrer">https://sourceforge.net/projects/voodoohda/</a></p></blockquote><p><strong>PS: 需要注意的是有人用的是<code>VoodooHDA.pkg</code>安装的，这种情况需要将<code>AppleHDADisabler.kext</code>放到<code>Clover</code>的驱动目录来禁用<code>AppleHDA</code>，否则很有可能会造成<code>KP</code>五果，所以我建议直接用<code>kext</code>，让<code>Clover</code>注入器注入即可。</strong></p><h2 id="关于完整仿冒"><a href="#关于完整仿冒" class="headerlink" title="关于完整仿冒"></a>关于完整仿冒</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><blockquote><p>声卡型号众多，虽然<code>AppleALC</code>让数据更集中了，但还是有些声卡不在目前的<code>AppleALC</code>支持的列表里面，对于这种情况来说，我们只能完整制作仿冒声卡。</p><p>接下来以我的<code>CX20751</code>为例简述仿冒声卡制作过程。</p></blockquote><h3 id="完整制作仿冒声卡思路"><a href="#完整制作仿冒声卡思路" class="headerlink" title="完整制作仿冒声卡思路"></a>完整制作仿冒声卡思路</h3><ul><li>整理<code>Codec</code>，提取所有有效<code>Node</code>值</li><li>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换得出需要的值</li><li>根据某些规律或者规则得出<code>ConfigData</code></li><li><code>PathMap</code>的获取和整理</li></ul><h3 id="知识普及"><a href="#知识普及" class="headerlink" title="知识普及"></a>知识普及</h3><blockquote><p>每一个<code>Node</code>的<code>ConfigData</code>值都是由四个八位的字符串组成，这四个串的最后两位分别是一个八位的设定值的1 2、3 4、5 6、7 8位，这四个八位的字符串的设定规则分别是是<code>Address+Node+71C+1 2位设定值</code>、<code>Address+Node+71D+3 4位设定值</code>、<code>Address+Node+71E+5 6位设定值</code>、<code>Address+Node+71F+7 8位设定值</code>。</p><p>这里需要注意，有两个不同的八位被提及，其中一个八位(这八位每一位都有特定的含义，也是仿冒成功最关键的地方，在后面我称之为设定值)是被均分四份从而放到<code>ConfigData</code>的各个节点所对应的四个串的七八位</p><p>而这个八位的设定值每一位的含义如下：</p></blockquote><ul><li>第一位：代表节点设定值(Address)，一般不需要改变；</li><li>第二位：同组装置的优先顺序，一般为 0~3，不可出现字母；</li><li>第三位：插口颜色，笔记本忽略，不作处理；</li><li>第四位：插孔侦测，0为开启(外设基本为0)，1为关闭(内建基本为1)；</li><li>第五位：装置类型，笔记本忽略；</li><li>第六位：连接类型，圆口为1，内接为0，基本可以忽略；</li><li>第七位：代表是否有插孔及插孔位置0=外接，9=内建，耳机扬声器和耳麦均为外接；</li><li>第八位：代表插孔所在位置，0=内建，1=外接；</li></ul><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h4 id="整理Codec，提取所有有效Node值"><a href="#整理Codec，提取所有有效Node值" class="headerlink" title="整理Codec，提取所有有效Node值"></a>整理<code>Codec</code>，提取所有有效<code>Node</code>值</h4><blockquote><p>与上面利用<code>AppleALC</code>的思路不同，这里我们需要提取的数据有设备描述、<code>Node</code>值和<code>Pin Default</code>值。具体提取方法上文已有说明，这里不再赘述，下面是我的<code>CX20751</code>提取的数据：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0t2suhufj31qc1f64ef.jpg" alt=""></p><h4 id="将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值"><a href="#将整理出的所有Node的Pin-Default值进行转换修正得出需要的设定值" class="headerlink" title="将整理出的所有Node的Pin Default值进行转换修正得出需要的设定值"></a>将整理出的所有<code>Node</code>的<code>Pin Default</code>值进行转换修正得出需要的设定值</h4><ul><li>对于<code>Pin Default</code>值，我们的处理方法为八位四分、二二逆置，例如<code>0x16</code>节点，首先得出<code>40 10 21 03</code>，同理得出：</li></ul><pre><code>0x16: 40 10 21 030x17: 10 01 17 900x19: 30 10 A1 030x1a: 20 01 A7 95</code></pre><blockquote><p>根据八位设定值的规则描述，对上面得出的设定值进行修正。</p><p>拿<code>0x16</code>为例，这是一个耳机扬声器节点。</p><p>第1、2、3位没什么好说的保持不变；<br>第4位插孔侦测，耳机设备属于外接设备，所以应当是0，这里是0不用动；<br>第5位装置类型笔记本忽略；<br>第6位连接类型，插口为圆口，所以是1，这里是1，保持不变；<br>第7位代表是否有插孔，耳机是外接设备，所以是0，这里是0，保持不变；<br>第8位插孔所在位置，耳机是外接设备，所以是1；</p><p>其他<code>Node</code>节点也是如此设定；</p><p>修正后的数据如下：</p></blockquote><pre><code>0x16: 40 10 21 010x17: 10 01 17 900x19: 30 10 81 010x1a: 20 01 A0 90</code></pre><h4 id="根据规律或者规则得出ConfigData"><a href="#根据规律或者规则得出ConfigData" class="headerlink" title="根据规律或者规则得出ConfigData"></a>根据规律或者规则得出<code>ConfigData</code></h4><blockquote><p>根据上面得出的设定值，我可以得出以下<code>ConfigData</code>值：</p></blockquote><pre><code>01671C40 01671D10 01671E21 01671F0101771C10 01771D01 01771E17 01771F9001971C30 01971D10 01971E81 01971F0101a71C20 01a71D01 01a71EA0 01a71F90</code></pre><p><strong>PS: 搜索一下codec里面有没有<code>EAPD</code>这个字符串，有的话就在<code>ConfigData</code>的最后面加上一串<code>01470C02</code>这组数字。</strong></p><h4 id="PathMap的获取和整理"><a href="#PathMap的获取和整理" class="headerlink" title="PathMap的获取和整理"></a><code>PathMap</code>的获取和整理</h4><blockquote><p>在声卡仿冒的过程中这一步是最麻烦的。有几个需要注意的地方。</p><p>对于声音节点来说，节点路径的推断遵循一个规律：</p><p>输入是从后往前推断节点，输出是从前往后推。</p></blockquote><ul><li>首先利用<code>codecgraph</code>得到路径图，该操作需要安装<code>graphviz</code>，这里我推荐利用终端<code>npm install graphviz</code>安装即可，然后执行下面的命令下载<code>codecgraph</code></li></ul><pre><code>$ git clone https://github.com/athlonreg/codecgraph.git </code></pre><ul><li>这样就下载到了你的用户根目录，将你的<code>Codec.txt</code>拷贝到下载的<code>codecgraph</code>目录下，然后</li></ul><pre><code>$ cd codecgraph$ ./codecgraph Codec.txt</code></pre><ul><li>就在<code>codecgraph</code>目录下生成了你的声卡路径图，格式为<code>svg</code>，用<code>safari</code>即可打开，当然也可以转换为其他格式，例如我的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fy0t3vra4yj31u60f2n07.jpg" alt=""></p><ul><li>可以看到<code>0x16</code>节点只连接了<code>0x10</code>，<code>HP Out</code>为输出，从前往后推，转换为十进制得到<code>0x22 -&gt; 0x16</code>;</li><li><code>0x17</code>节点只连接了<code>0x11</code>，<code>Speaker</code>为输出，从前往后推，转换为十进制得到<code>0x23 -&gt; 0x17</code>;</li><li><code>0x19</code>节点只连接了<code>0x14</code>，<code>Mic at Int</code>为输入，从后往前推，转换为十进制得到<code>0x20 -&gt; 0x25</code>;</li><li><code>0x1a</code>节点只连接了<code>0x13</code>，<code>Mic at Ext</code>为输入，从后往前推，转换为十进制得到<code>0x19 -&gt; 0x26</code>;</li></ul><blockquote><p>整理得到路径如下：</p></blockquote><table><thead><tr><th>设备名称</th><th>有效节点</th><th>路径</th></tr></thead><tbody><tr><td>HP Out</td><td>0x16</td><td>0x22-&gt;0x16</td></tr><tr><td>Speaker Out</td><td>0x17</td><td>0x23-&gt;0x17</td></tr><tr><td>Mic In</td><td>0x1a</td><td>0x26&lt;-0x19  0x26&lt;-0x20</td></tr><tr><td>Line In</td><td>0x19</td><td>0x25&lt;-0x20  0x26&lt;-0x19</td></tr></tbody></table><p><strong>PS: 我的声卡比较奇葩，对于多数声卡来说，输入一般为<code>0x8 -&gt; 0x35 -&gt; 0x18</code>，输出一般为<code>0x33 -&gt; 0x13 -&gt; 0x3</code></strong></p><h2 id="AppleHDA-修改"><a href="#AppleHDA-修改" class="headerlink" title="AppleHDA 修改"></a>AppleHDA 修改</h2><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p><a href="https://github.com/vit9696" target="_blank" rel="noopener external nofollow noreferrer">vit9696</a><br><a href="https://github.com/goodwin/ALCPlugFix" target="_blank" rel="noopener external nofollow noreferrer">goodwin</a><br><a href="https://github.com/RehabMan" target="_blank" rel="noopener external nofollow noreferrer">RehabMan</a><br><a href="https://github.com/Dolnor/EAPD-Codec-Commander" target="_blank" rel="noopener external nofollow noreferrer">Dolnor</a><br><a href="https://github.com/daliansky" target="_blank" rel="noopener external nofollow noreferrer">daliansky</a><br><a href="https://sourceforge.net/projects/voodoohda/" target="_blank" rel="noopener external nofollow noreferrer">VoodooHDA</a></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><blockquote><p>码字不易，如果觉得文章不错，欢迎打赏，你们的支持是我最大的动力。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> Hacintosh </tag>
            
            <tag> AppleALC </tag>
            
            <tag> 声卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现 MAC 原生读写 NTFS 分区</title>
      <link href="/RW-NTFS-partition-natively-on-macOS.html"/>
      <url>/RW-NTFS-partition-natively-on-macOS.html</url>
      
        <content type="html"><![CDATA[<h3 id="实现-MAC-原生读写-NTFS-分区"><a href="#实现-MAC-原生读写-NTFS-分区" class="headerlink" title="实现 MAC 原生读写 NTFS 分区"></a>实现 MAC 原生读写 NTFS 分区</h3><blockquote><p>打开终端，输入命令</p></blockquote><pre><code>$ diskutil list</code></pre><blockquote><p>输入命令</p></blockquote><pre><code>$ sudo vim /etc/fstab</code></pre><blockquote><p>编辑内容如下</p></blockquote><pre><code>LABEL=Win\040Ntfs\040Drive none ntfs rw,auto,nobrowse</code></pre><blockquote><p>注意</p></blockquote><p>**<code>Win\040Ntfs\040Drive</code> 这串字符中<code>\040</code>代表空格，<code>Win\040Ntfs\040Drive</code> 这一串出现在<code>diskutil list</code>那个屏幕里面</p><blockquote><p>最后一步</p></blockquote><pre><code>$ sudo ln -s /Volumes ~/Desktop/Volumes</code></pre><h3 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h3><blockquote><p>转自<a href="https://www.waitsun.com" target="_blank" rel="noopener external nofollow noreferrer">爱情守望者</a></p><p>转载请注明<a href="https://www.waitsun.com/aboutus/help" target="_blank" rel="noopener external nofollow noreferrer">原帖地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> Hacintosh </tag>
            
            <tag> NTFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC 常用快捷键整理</title>
      <link href="/Common-Keyboard-shortcut-in-macOS.html"/>
      <url>/Common-Keyboard-shortcut-in-macOS.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>苹果 Mac 系统常用快捷键有很多，但是很多童鞋对于这些 Mac 快捷键都不是很熟悉，今天小编为大家整理了一份 Mac 系统常用快捷键大全，大家快收藏起来吧!平时在使用 Mac 系统的时候可以提高不少工作效率哦!</p><p>本文转自 <a href="http://xclient.info/a/36952668-9577-8ec9-4412-111ae375fde7.html?_=905734269077aa284ba54b095a93d187" target="_blank" rel="noopener external nofollow noreferrer">Xclient.info</a>，转载请注明原出处</p></blockquote><h2 id="小普及"><a href="#小普及" class="headerlink" title="小普及"></a>小普及</h2><ul><li><p>Mac中主要有四个修饰键，分别是 Command，Control，Option 和 Shift。</p></li><li><p>这四个键分别有自己的图案，他们经常出现在Mac应用程序中的菜单栏里，方便你随时学习新的快捷键。</p></li></ul><blockquote><p>如下</p></blockquote><p><img src="https://img.xclient.info/attachment/2015/10/bf74de6b-c1f0-7323-74a7-4042c0e566c1.jpg" alt=""></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="通用快捷键"><a href="#通用快捷键" class="headerlink" title="通用快捷键"></a>通用快捷键</h3><blockquote><p>Command 是 Mac 里最重要的修饰键，在大多数情况下相当于 Windows 下的 Ctrl，黑果通常是 Alt 键。</p></blockquote><ul><li>Command + Z 撤销。</li><li>Command + X 剪切。</li><li>Command + C 拷贝(Copy)。</li><li>Command + V 粘贴。</li><li>Command + A 全选(All)。</li><li>Command + S 保存(Save)。</li><li>Command + F 查找(Find)。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/51515ea4-d36d-622b-a164-2c3fcef60b1c.jpg" alt=""></p><h3 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h3><ul><li>Option 开机后立即按下，将显示启动管理器。</li><li>Command + R 开机后立即按下，可打开OS X 的恢复功能。</li><li>Command + Option + P + R 开机后立即按下，重置 NVRAM。有些时候电脑会出现些小问题，重置 NVRAM 是你除了重新启动，尝试修复的第一选择。</li><li>Command + Option + Control + Power 退出所有应用程序，允许你进行文稿储存，然后关机。</li><li>按住 Power 按钮 5 秒 强制 Mac 关机。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/30c4390a-db0d-061b-cc0d-9fe08bc335a3.jpg" alt=""></p><h3 id="截图"><a href="#截图" class="headerlink" title=" 截图"></a><i class="fa fa-desktop" aria-hidden="true"></i> 截图</h3><ul><li>Command + Shift + 3 截取全部屏幕到文件。</li><li>Command + Shift + Control + 3 截取全部屏幕到剪贴板。</li><li>Command + Shift + 4 截取所选屏幕区域到一个文件，或按空格键仅捕捉一个窗口。</li><li>Command + Shift + Control + 4 截取所选屏幕区域到剪贴板，或按空格键仅捕捉一个窗口。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/87180b21-818c-1007-835a-e3e5a810b3b0.jpg" alt=""></p><h3 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h3><ul><li>Command + Shift + N (New) 新建文件夹。</li><li>Command + Shift + G (Go) 调出窗口，可输入绝对路径直达文件夹。</li><li>return 这个其实不算快捷键，点击文件，按下可重命名文件。</li><li>Command + O 打开所选项。在 Mac 里打开文件不像 Windows 里直接按 Enter。</li><li>Command + Option + V 作用相当于Windows里的文件剪切。在其它位置上对文件复制(Command-C)，在目的位置按下这个快捷键，文件将被剪切到此位置。</li><li>Command + ↑ 打开包含当前文件夹的文件夹，相当于 Windows 里的“向上”。</li><li>Command + Delete 将文件移至废纸篓。</li><li>Command + Shift + Delete 清倒废纸篓。</li><li>Space 快速查看选中的文件，也就是预览功能。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/b50cb298-346f-4273-032f-e6f2860ed578.jpg" alt=""></p><h3 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h3><ul><li>Command + Tab 在应用程序间切换。</li><li>Command + Shift + Tab 在应用程序间切换(反向)。</li><li>Command + ~ 在各应用中的窗口间切换。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/6e814e0a-a4c1-33a1-6123-929094eedfc2.jpg" alt=""></p><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><ul><li>Command + L 光标直接跳至地址栏。</li><li>Control + Tab 转向下一个标签页。</li><li>Control + Shift + Tab 转向上一个标签页。</li><li>Command + ‘+’或’=’ 放大页面。</li><li>Command + ‘-‘ 缩小页面。</li></ul><p><img src="https://img.xclient.info/attachment/2015/10/f1878a65-814d-44c7-f32b-c2a6e4f625d6.jpg" alt=""></p><h3 id="应用程序中"><a href="#应用程序中" class="headerlink" title="应用程序中"></a>应用程序中</h3><ul><li>Command + H 隐藏(Hide)当前正在运行的应用程序窗口。</li><li>Command + Option + H 隐藏(Hide)其他应用程序窗口。</li><li>Command + Q 退出(Quit)最前面的应用程序。</li><li>Command + Shift + Z 重做，也就是撤销的逆向操作。</li><li>Command + Tab 在打开的应用程序列表中转到下一个最近使用的应用程序，相当于 Windows 中(Alt+Tab)。</li><li>Command + Option + esc 打开“强制退出”窗口，如果有应用程序无响应，可在窗口列表中选择强制退出。</li></ul><h3 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><ul><li>Command + B 切换所选文字粗体(Bold)显示。</li><li>fn + Delete 相当于 PC 全尺寸键盘上的 Delete，也就是向后删除。</li><li>fn + ↑ 向上滚动一页(Page Up)。</li><li>fn + ↓ 向下滚动一页(Page Down)。</li><li>fn + ← 滚动至文稿开头(Home)。</li><li>fn + → 滚动至文稿末尾(End)。</li><li>Command + → 将光标移至当前行的行尾。</li><li>Command + ← 将光标移至当前行的行首。</li><li>Command + ↓ 将光标移至文稿末尾。</li><li>Command + ↑ 将光标移至文稿开头。</li><li>Option + → 将光标移至下一个单词的末尾。</li><li>Option + ← 将光标移至上一个单词的开头。</li><li>Control + A 移至行或段落的开头。</li></ul><h3 id="更多快捷键"><a href="#更多快捷键" class="headerlink" title="更多快捷键"></a>更多快捷键</h3><p>如果你还想学习更多快捷键，请点击这里查看<a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener external nofollow noreferrer">苹果官方的快捷键帮助文档</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hotpatch 屏蔽独显</title>
      <link href="/Disable-the-discrete-GPU-in-laptop.html"/>
      <url>/Disable-the-discrete-GPU-in-laptop.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近我根据 RehabMan 的 hotpatch 添加了一些路径做了一个屏蔽独显得 hotpatch 来屏蔽独显解决一些升级 10.13 后因为 nv_disable 参数失效而卡在 Window Server Service only ran for 0 seconds 的错误，发现有些成功，有些失败。于是把我琢磨到的一种方法分享给大家！希望该帖子能帮助到各位！</p><blockquote><p>感谢：</p></blockquote><ul><li><p>PCBETA (远景论坛) <a href="http://bbs.pcbeta.com/viewthread-1760319-1-5.html" target="_blank" rel="noopener external nofollow noreferrer">yearjinheng 版主的帖子</a></p></li><li><p>tonymacx86.com <a href="https://www.tonymacx86.com/threads/fix-window-server-service-only-ran-for-0-seconds-with-dual-gpu.233092/" target="_blank" rel="noopener external nofollow noreferrer">Rehabman 的帖子</a></p></li><li><p>转载请注明 <a href="https://blog.iamzhl.top/2017/10/04/%E5%B1%8F%E8%94%BD%E7%8B%AC%E6%98%BE/" target="_blank" rel="noopener external nofollow noreferrer">原贴地址</a></p></li></ul><blockquote><p>屏蔽独显方法不一：</p></blockquote><ul><li>第一种：直接在 DSDT SSDT 上做修改</li><li>第二种：手动制作一个适合自己机器的 hotpatch 屏蔽独显达到屏蔽独显的作用</li></ul><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><blockquote><p>本帖主要采用第二种方法，大致思路如下：</p></blockquote><ul><li>提取 ACPI 原始表单</li><li>反编译这些文件</li><li>搜索一个名为 _OFF 的方法</li><li>检查文件的结果以确定 _OFF 的路径</li><li>修改 RehabMan 的 hotpatch 加入自己的路径</li></ul><h3 id="提取-ACPI-原始表单并提取-OFF-路径"><a href="#提取-ACPI-原始表单并提取-OFF-路径" class="headerlink" title="提取 ACPI 原始表单并提取 _OFF 路径"></a>提取 ACPI 原始表单并提取 _OFF 路径</h3><ul><li>打开电脑进入四叶草引导界面，按下 F4 或者 FN+F4 即可提取原始表单到 /EFI/CLOVER/ACPI/origin ，然后进入 MAC 将 origin 拷贝到桌面删掉除 SSDT DSDT 之外的所有 aml 文件，打开终端：</li></ul><pre><code>$ cd ~/Desktop/origin $ iasl -da -dl *.aml $ rm *.aml $ grep -l Method.*_OFF *.dsl</code></pre><ul><li>以我修改的一个机器为例，上一条命令得到的结果如下</li></ul><pre><code>DSDT.dslSSDT-7.dslSSDT-8.dslSSDT-9.dsl</code></pre><ul><li>依次打开这四个表单搜索 _OFF ，找到一个类似于下面这个函数：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypwailo2hj31ee16kwuq.jpg" alt=""></p><ul><li>图片左下角的路径就是我们最终所需要的: </li></ul><pre><code>_SB.PCI0.RP05.PEGP</code></pre><h3 id="修改-RehabMan-的-hotpatch-添加这个路径"><a href="#修改-RehabMan-的-hotpatch-添加这个路径" class="headerlink" title="修改 RehabMan 的 hotpatch 添加这个路径"></a>修改 RehabMan 的 hotpatch 添加这个路径</h3><ul><li>首先去 RehanMan 的 GitHub 下载 hotpatch 包</li></ul><pre><code>https://github.com/RehabMan/OS-X-Clover-Laptop-Config.git</code></pre><ul><li>我们只需要 SSDT-Disable_DGPU 这个文件，编译成 aml 文件</li></ul><pre><code>$ iasl SSDT-Disable_DGPU.dsl </code></pre><ul><li>打开编译后得到的 aml 文件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypw7fmi6oj31t017iaoe.jpg" alt=""></p><ul><li>按照这个格式修改为自己的路径</li></ul><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypw8t1hp2j31t017inbi.jpg" alt=""></p><ul><li>保存放到 /EFI/CLOVER/ACPI/patched </li></ul><h3 id="一个注意点"><a href="#一个注意点" class="headerlink" title="一个注意点"></a>一个注意点</h3><ul><li>如果在 Config.plist 中使用了 SortedOrder (通常 Clover 安装后默认没有设置)，需要在其内添加 SSDT-Disable_DGPU.aml 这一项。因为如果指定了 SortedOrder ，则 Clover 只加载其中指定的 SSDT 。如果没有出现在列表中,即使在 ACPI/patched 中，它也不会加载。</li></ul><h2 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h2>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> Hackintosh </tag>
            
            <tag> Window Server Service only ran for 0 seconds </tag>
            
            <tag> Disable DGPU </tag>
            
            <tag> 屏蔽独显 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>派遣敢死队问题</title>
      <link href="/Problem-about-Sending-out-death-squads.html"/>
      <url>/Problem-about-Sending-out-death-squads.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>​    G将军有一支训练有素的军队，这个军队除开G将军外，每名士兵都有一个直接上级（可能是其他士兵，也可能是G将军）。现在G将军将接受一个特别的任务，需要派遣一部分士兵（至少一个）组成一个敢死队，为了增加敢死队队员的独立性，要求如果一名士兵在敢死队中，他的直接上级不能在敢死队中。<br>​    请问，G将军有多少种派出敢死队的方法。注意，G将军也可以作为一个士兵进入敢死队。</p><p>​    输入格式:<br>​    输入的第一行包含一个整数n，表示包括G将军在内的军队的人数。军队的士兵从1至n编号，G将军编号为1。<br>接下来n-1个数，分别表示编号为2, 3, …, n的士兵的直接上级编号，编号i的士兵的直接上级的编号小于i。<br>​    输出格式:<br>​    输出一个整数，表示派出敢死队的方案数。由于数目可能很大，你只需要输出这个数除10007的余数即可。</p><p>​    样例输入1:<br>​    3<br>​    1 1</p><p>​    样例输出1:<br>​    4</p><p>​    样例说明:<br>​    这四种方式分别是：</p><ol><li><p>选1；</p></li><li><p>选2；</p></li><li><p>选3；</p></li><li><p>选2, 3。</p></li></ol><p>  样例输入2:<br>  7<br>  1 1 2 2 3 3</p><p>  样例输出2:<br>  40</p><p>  数据规模与约定</p><ul><li><p>对于20%的数据，n ≤ 20；</p></li><li><p>对于40%的数据，n ≤ 100；</p></li><li><p>对于100%的数据，1 ≤ n ≤ 100000。</p><p>资源约定：</p></li><li><p>峰值内存消耗 &lt; 256M</p></li><li><p>CPU消耗  &lt; 2000ms</p></li></ul><p>  请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。</p><p>  所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。</p><p>  注意: main函数需要返回0<br>  注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。<br>  注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。</xxx></p><p>  提交时，注意选择所期望的编译器类型。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、首先将所有士兵直属上级的编号放于数组a；<br>2、每个人有两种选择，去和不去，用0和1表示，转换为二进制放于数组b；<br>3、最后判断每个士兵是不是与其直属上级同时执行任务，进而对count进行统计。 </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  派遣敢死队问题</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by Canvas on 2018/12/31.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 Canvas. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> number<span class="token punctuation">;</span>    <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> flag<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//派遣的人数</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>    <span class="token keyword">int</span> temp<span class="token punctuation">;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//a</span>    a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将军</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>number<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每个人的直属上级</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        temp<span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>number<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//遍历所有情况</span>            b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">;</span>            temp<span class="token operator">/</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>number<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//将军没有上级，不用判断</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>b<span class="token punctuation">[</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//判断是否士兵和上级同时执行任务</span>                <span class="token comment" spellcheck="true">//b[j]为编号为j+1的士兵去不去</span>                <span class="token comment" spellcheck="true">//b[a[j]-1]为编号为j+1的士兵的直接上级去不去</span>                flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>            count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 派遣敢死队 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>警匪110问题</title>
      <link href="/Problem-about-police-and-gangster-110.html"/>
      <url>/Problem-about-police-and-gangster-110.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>​    匪警请拨110,即使手机欠费也可拨通！</p><p>​    为了保障社会秩序，保护人民群众生命财产安全，警察叔叔需要与罪犯斗智斗勇，因而需要经常性地进行体力训练和智力训练！</p><p>   某批警察叔叔正在进行智力训练：</p><pre><code>12 3 4 5 6 7 8 9 =110;</code></pre><p>​    请看上边的算式，为了使等式成立，需要在数字间填入加号或者减号（可以不填，但不能填入其它符号）。之间没有填入符号的数字组合成一个数，例如：12+34+56+7-8+9 就是一种合格的填法；123+4+5+67-89 是另一个可能的答案。</p><p>​    请你利用计算机的优势，帮助警察叔叔快速找到所有答案。</p><pre><code>   每个答案占一行。形如：</code></pre><ul><li><p>12+34+56+7-8+9</p></li><li><p>123+4+5+67-89</p></li></ul><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、一共九个数字，八个操作符；<br>2、每个操作符有三种情况，即留空、加或者减，分别用0、1和2表示；<br>3、共有 3^8 种情况，遍历每种情况判断输出；<br>4、需要注意的是留空和’+’、’-‘需要分开处理，因为留空之后需要将其前后的数据连在一起。<br>5、以12+34+56+7-8+9为例，给和sum赋初值为0，第一次循环操作符为留空，需要先加上第一位的1，然后进行这一次运算，即1x10+2，然后下一次循环操作符为+，需要计算的就是12+3，同理在3、4之间的空需要计算的是3x10+4，而不是（12+3）x10+4，所以需要一个临时变量来记录上次的操作数，还需要一个变量来记录上次的操作符将上次的结果进行统计处理，原因就在于我们无法确定下次的操作符是不是留空。<br>6、由于我们在统计和时，只有在下一次循环才能处理最后一个操作数，所以需要将9最后单独处理。 </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span> </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> sum<span class="token punctuation">;</span>     <span class="token keyword">int</span> temp<span class="token punctuation">;</span>     <span class="token keyword">int</span> oper<span class="token punctuation">,</span>lastoper<span class="token punctuation">;</span>      <span class="token keyword">int</span> number<span class="token punctuation">;</span>     <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>          sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>         temp<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>         lastoper<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>          number<span class="token operator">=</span>i<span class="token punctuation">;</span>          <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">8</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//操作八次 </span>            oper<span class="token operator">=</span>number<span class="token operator">%</span><span class="token number">3</span><span class="token punctuation">;</span>             number<span class="token operator">=</span>number<span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>oper<span class="token punctuation">)</span>                 temp<span class="token operator">=</span>temp<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//留空单独处理 </span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>oper<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//当前操作符 </span>                <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//前一次操作符 </span>                    sum<span class="token operator">=</span>sum<span class="token operator">+</span>temp<span class="token punctuation">;</span>                     temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    sum<span class="token operator">=</span>sum<span class="token operator">-</span>temp<span class="token punctuation">;</span>                     temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                  lastoper<span class="token operator">=</span>oper<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//更新上次操作符 </span>            <span class="token punctuation">}</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>oper<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    sum<span class="token operator">=</span>sum<span class="token operator">+</span>temp<span class="token punctuation">;</span>                     temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    sum<span class="token operator">=</span>sum<span class="token operator">-</span>temp<span class="token punctuation">;</span>                     temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                  lastoper<span class="token operator">=</span>oper<span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//第九次操作单独处理 </span>            sum<span class="token operator">=</span>sum<span class="token operator">+</span>temp<span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>lastoper<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>             sum<span class="token operator">=</span>sum<span class="token operator">-</span>temp<span class="token punctuation">;</span>             <span class="token keyword">if</span><span class="token punctuation">(</span>sum<span class="token operator">==</span><span class="token number">110</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              number<span class="token operator">=</span>i<span class="token punctuation">;</span>              <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">8</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>              <span class="token punctuation">{</span>                  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  oper<span class="token operator">=</span>number<span class="token operator">%</span><span class="token number">3</span><span class="token punctuation">;</span>                 number<span class="token operator">=</span>number<span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">;</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>oper<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>                     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>oper<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>                     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>                         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"9\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/006dLY5Ily1fypyfpkfu0j32701f6ne8.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 警匪110 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>价牌翻转问题</title>
      <link href="/Problem-about-rollover-price-tag.html"/>
      <url>/Problem-about-rollover-price-tag.html</url>
      
        <content type="html"><![CDATA[<h2 id="价牌翻转问题"><a href="#价牌翻转问题" class="headerlink" title="价牌翻转问题"></a>价牌翻转问题</h2><a id="more"></a><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>​    小李的店里专卖其它店中下架的样品电视机，可称为：样品电视专卖店。<br>​    其标价都是4位数字（即千元不等）。<br>​    小李为了标价清晰、方便，使用了预制的类似数码管的标价签，只要用颜色笔涂数字就可以了。<br>​    这种价牌有个特点，对一些数字，倒过来看也是合理的数字。如：1 2 5 6 8 9 0 都可以。这样一来，如果牌子挂倒了，有可能完全变成了另一个价格，比如：1958 倒着挂就是：8561，差了几千元啊!!<br>​    当然，多数情况不能倒读，比如，1110 就不能倒过来，因为0不能作为开始数字。</p><p>​    有一天，悲剧终于发生了。某个店员不小心把店里的某两个价格牌给挂倒了。并且这两个价格牌的电视机都卖出去了!庆幸的是价格出入不大，其中一个价牌赔了2百多，另一个价牌却赚了8百多，综合起来，反而多赚了558元。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1、已知是一个四位数，那么共有1001-9999种情况；<br>2、一个数颠倒之后，数字顺序颠倒并且每个数字颠倒，例如1269颠倒之后就是6921；<br>3、0不能是第一位也不能是最后一位。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  main.c</span><span class="token comment" spellcheck="true">//  rollover-price-tag</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//  Created by Canvas on 2018/12/31.</span><span class="token comment" spellcheck="true">//  Copyright © 2018 Canvas. All rights reserved.</span><span class="token comment" spellcheck="true">//</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;math.h></span></span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">inverse</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//求一个数颠倒之后的结果</span>    <span class="token keyword">int</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">/</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">9</span><span class="token punctuation">)</span>            b<span class="token operator">+</span><span class="token operator">=</span><span class="token number">6</span><span class="token operator">*</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">6</span><span class="token punctuation">)</span>            b<span class="token operator">+</span><span class="token operator">=</span><span class="token number">9</span><span class="token operator">*</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            b<span class="token operator">+</span><span class="token operator">=</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>    <span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> temp<span class="token punctuation">;</span>    <span class="token keyword">int</span> flag<span class="token punctuation">;</span>    <span class="token keyword">int</span> up<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>down<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分别存放赚钱和赔钱的价牌</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        temp<span class="token operator">=</span>i<span class="token punctuation">;</span>        flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>temp<span class="token operator">/</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">3</span><span class="token operator">||</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">4</span><span class="token operator">||</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//分割数字排除不能翻转的数字</span>                flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//0不能位于第一位和最后一位</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">inverse</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span>i<span class="token operator">></span><span class="token number">800</span><span class="token operator">&amp;&amp;</span><span class="token function">inverse</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span>i<span class="token operator">&lt;</span><span class="token number">900</span><span class="token punctuation">)</span>                up<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token function">inverse</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">200</span><span class="token operator">&amp;&amp;</span>i<span class="token operator">-</span><span class="token function">inverse</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">300</span><span class="token punctuation">)</span>                down<span class="token punctuation">[</span>l<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">50</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//依次输出赚钱的原价，颠倒价、赚的钱、赔钱的原价、颠倒价、赔的钱</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">50</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">inverse</span><span class="token punctuation">(</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span><span class="token function">inverse</span><span class="token punctuation">(</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">558</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%d\t%d\t"</span><span class="token punctuation">,</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">inverse</span><span class="token punctuation">(</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">inverse</span><span class="token punctuation">(</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span>up<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%d\t%d\n"</span><span class="token punctuation">,</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">inverse</span><span class="token punctuation">(</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">-</span><span class="token function">inverse</span><span class="token punctuation">(</span>down<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><p>![image-20181231154932718](/Users/canvas/Library/Application Support/typora-user-images/image-20181231154932718.png)</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 价牌翻转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 启用任何来源</title>
      <link href="/Allow-apps-downloaded-from-anywhere-in-macOS.html"/>
      <url>/Allow-apps-downloaded-from-anywhere-in-macOS.html</url>
      
        <content type="html"><![CDATA[<h3 id="Allow-apps-downloaded-from-anywhere-on"><a href="#Allow-apps-downloaded-from-anywhere-on" class="headerlink" title="Allow apps downloaded from anywhere on"></a>Allow apps downloaded from anywhere on</h3><p>许多朋友升级到 macOS Sierra 后在”安全性与隐私”中找不到”任何来源”选项，这里我教给大家怎么打开”任何来源”。</p><p>打开终端，输入以下代码回车：</p><pre><code>sudo spctl --master-disable</code></pre><p>会提示输入密码，根据提示输入密码回车之后就可以在”安全性与隐私”中打开”任何来源”选项了，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/athlonreg/BlogImages/Images/ee/6b66ba441c2c99506a691fd28b23ff.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> 终端 </tag>
            
            <tag> Hacintosh </tag>
            
            <tag> 任何来源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低碳生活答题问题</title>
      <link href="/Problem-about-low-carbon-lifestyle-answering.html"/>
      <url>/Problem-about-low-carbon-lifestyle-answering.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>某电视台举办了低碳生活大奖赛。题目的计分规则相当奇怪：<br>​<br>1、每位选手需要回答10个问题（其编号为1到10），越后面越有难度。答对的，当前分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。<br>​<br>2、每位选手都有一个起步的分数为10分。 某获胜选手最终得分刚好是100分，如果不让你看比赛过程，你能推断出他（她）哪个题目答对了，哪个题目答错了吗？<br>​<br>3、如果把答对的记为1，答错的记为0，则10个题目的回答情况可以用仅含有1和0的串来表示。例如：0010110011 就是可能的情况。<br>​<br>4、你的任务是算出所有可能情况。每个答案占一行。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>一共十个问题，每个问题两种情况，要么对要么错，那么结果就会有 0000000000 ~ 1111111111 = pow（2，10）种，就可以用暴力搜索将所有情况枚举出来然后判断符合要求的情况；<br>​<br>分数的控制可以直接利用遍历所有情况的 for 循环分别判断两种情况；<br>​<br>如果用输出 1 代表回答正确， 0 代表错误，不难想到任何一个正整数对 2 取余结果只有 1 和 0 两种情况， 输出的时候也就成了进制转换问题； </p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span> </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>    <span class="token keyword">int</span> score<span class="token punctuation">,</span>temp<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        temp<span class="token operator">=</span>i<span class="token punctuation">;</span>        score<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token keyword">if</span><span class="token punctuation">(</span>temp<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>                score<span class="token operator">*</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                score<span class="token operator">-</span><span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>             temp<span class="token operator">/</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                temp<span class="token operator">=</span>i<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> temp<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                temp<span class="token operator">/</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><pre><code>1 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 1 1 </code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 低碳生活答题问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xcode-select 命令详解</title>
      <link href="/How-to-use-xcode-select-in-terminal.html"/>
      <url>/How-to-use-xcode-select-in-terminal.html</url>
      
        <content type="html"><![CDATA[<h2 id="It’s-not-uncommon-developers-to-have-multiple-versions-of-Xcode-installed-For-example-I-typically-have-the-latest-beta-as-well-as-the-most-current-production-release-installed"><a href="#It’s-not-uncommon-developers-to-have-multiple-versions-of-Xcode-installed-For-example-I-typically-have-the-latest-beta-as-well-as-the-most-current-production-release-installed" class="headerlink" title="It’s not uncommon developers to have multiple versions of Xcode installed. For example, I typically have the latest beta as well as the most current production release installed."></a>It’s not uncommon developers to have multiple versions of Xcode installed. For example, I typically have the latest beta as well as the most current production release installed.</h2><p>However, there are times when you may want various tools, such as xcodebuild, to point to a specific Xcode folder. To faciliate this, you can use xcode-select. A common use case is if you use scripts and/or makefiles to build your projects.<br>Once you set the Xcode folder, xcodebuild will be invoked from the folder you specified.<br>The command line options are below:</p><pre><code>xcode-select [-help]xcode-select [-switch xcode_folder_path]xcode-select [-print-path]xcode-select [-version]</code></pre><h2 id="Here-is-how-to-print-the-current-Xcode-path"><a href="#Here-is-how-to-print-the-current-Xcode-path" class="headerlink" title="Here is how to print the current Xcode path:"></a>Here is how to print the current Xcode path:</h2><pre><code>$ xcode-select --print-path/Developer/Applications/Xcode.app</code></pre><p>Line number 2 shows the current version of Xcode that is ‘active.’ If you are accessing xcodebuild or other related tools from a script, –print-path is the preferred means to determine the current Xcode location.<br>Use the -switch option to change to another version of Xcode on your system:</p><pre><code>$ sudo xcode-select --switch /Applications/Xcode-beta.app/Contents/Developer</code></pre><p>This changes to the Xcode-beta 9 on my system. Note that root access is required to set the Xcode location, thus I have used sudo to execute the command as root.<br>Printing the path now looks as follows:</p><pre><code>$ xcode-select --print-path/Applications/Xcode-beta.app/Contents/Developer</code></pre><h2 id="To-switch-back-to-Xcode-installed-in-the-Applications-directory"><a href="#To-switch-back-to-Xcode-installed-in-the-Applications-directory" class="headerlink" title="To switch back to Xcode installed in the /Applications directory:"></a>To switch back to Xcode installed in the /Applications directory:</h2><pre><code>$ sudo xcode-select -switch /Applications/Xcode.app/</code></pre><h2 id="You-can-read-more-about-xcode-select-by-view-the-man-page-from-a-terminal"><a href="#You-can-read-more-about-xcode-select-by-view-the-man-page-from-a-terminal" class="headerlink" title="You can read more about xcode-select by view the man page from a terminal:"></a>You can read more about xcode-select by view the man page from a terminal:</h2><pre><code>$ man xcode-select</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 终端 </tag>
            
            <tag> Mac </tag>
            
            <tag> Xcode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
